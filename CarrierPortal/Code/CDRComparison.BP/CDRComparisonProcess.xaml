<Activity mc:Ignorable="sap sap2010 sads" x:Class="CDRComparison.BP.CDRComparisonProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:cba="clr-namespace:CDRComparison.BP.Arguments;assembly=CDRComparison.BP.Arguments"
 xmlns:cba1="clr-namespace:CDRComparison.BP.Activities;assembly=CDRComparison.BP.Activities"
 xmlns:ce="clr-namespace:CDRComparison.Entities;assembly=CDRComparison.Entities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(cba:CDRComparsionProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>CDRComparison.BP.CDRComparisonProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>CDRComparison.BP.Arguments</x:String>
      <x:String>Vanrise.Queueing</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>CDRComparison.BP.Activities</AssemblyReference>
      <AssemblyReference>CDRComparison.BP.Arguments</AssemblyReference>
      <AssemblyReference>CDRComparison.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CDRComparison.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)" Name="OutputQueuePartialMatchCDR" />
      <Variable x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)" Name="OutputQueueDisputeCDR" />
      <Variable x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)" Name="OutputQueueMissingCDR" />
      <Variable x:TypeArguments="vq:BaseQueue(ce:CDRBatch)" Name="OutputCDRBatch" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedCDRsForDBApplyQueue" />
    </Sequence.Variables>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
      <Parallel.Variables>
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="loadCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PrepareCDRsForDBApplyStatus" />
      </Parallel.Variables>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
        <cba1:LoadCDRs Status="{x:Null}" sap2010:WorkflowViewState.IdRef="LoadCDRs_3" IsPartnerCDRs="False">
          <cba1:LoadCDRs.CDRSource>
            <InArgument x:TypeArguments="ce:CDRSource">
              <mca:CSharpValue x:TypeArguments="ce:CDRSource">Input.SystemCDRSource</mca:CSharpValue>
            </InArgument>
          </cba1:LoadCDRs.CDRSource>
          <cba1:LoadCDRs.OutputQueue>
            <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
              <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputCDRBatch</mca:CSharpReference>
            </InOutArgument>
          </cba1:LoadCDRs.OutputQueue>
        </cba1:LoadCDRs>
        <cba1:LoadCDRs sap2010:WorkflowViewState.IdRef="LoadCDRs_4" IsPartnerCDRs="True">
          <cba1:LoadCDRs.CDRSource>
            <InArgument x:TypeArguments="ce:CDRSource">
              <mca:CSharpValue x:TypeArguments="ce:CDRSource">Input.PartnerCDRSource</mca:CSharpValue>
            </InArgument>
          </cba1:LoadCDRs.CDRSource>
          <cba1:LoadCDRs.OutputQueue>
            <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
              <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputCDRBatch</mca:CSharpReference>
            </InOutArgument>
          </cba1:LoadCDRs.OutputQueue>
          <cba1:LoadCDRs.Status>
            <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
              <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">loadCDRsStatus</mca:CSharpReference>
            </OutArgument>
          </cba1:LoadCDRs.Status>
        </cba1:LoadCDRs>
      </Sequence>
      <cba1:PrepareCDRsForDBApply sap2010:WorkflowViewState.IdRef="PrepareCDRsForDBApply_2">
        <cba1:PrepareCDRsForDBApply.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputCDRBatch</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareCDRsForDBApply.InputQueue>
        <cba1:PrepareCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareCDRsForDBApply.OutputQueue>
        <cba1:PrepareCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">loadCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareCDRsForDBApply.PreviousActivityStatus>
        <cba1:PrepareCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PrepareCDRsForDBApplyStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PrepareCDRsForDBApply.Status>
      </cba1:PrepareCDRsForDBApply>
      <cba1:ApplyCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyCDRsToDB_2">
        <cba1:ApplyCDRsToDB.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:ApplyCDRsToDB.InputQueue>
        <cba1:ApplyCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PrepareCDRsForDBApplyStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyCDRsToDB.PreviousActivityStatus>
      </cba1:ApplyCDRsToDB>
    </Parallel>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_2">
      <Parallel.Variables>
        <Variable x:TypeArguments="vq:BaseQueue(ce:CDRBatch)" Name="OutputQueueOrderedCDRs" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedMissingCDRsForDBApplyQueue" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedDisputeCDRsForDBApplyQueue" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedPartialMatchCDRsForDBApplyQueue" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="LoadOrderedCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="ProcessCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PrepareMissingCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparePartialMatchCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PrepareDisputeCDRsStatus" />
      </Parallel.Variables>
      <cba1:LoadOrderedCDRs sap2010:WorkflowViewState.IdRef="LoadOrderedCDRs_1">
        <cba1:LoadOrderedCDRs.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputQueueOrderedCDRs</mca:CSharpReference>
          </InOutArgument>
        </cba1:LoadOrderedCDRs.OutputQueue>
        <cba1:LoadOrderedCDRs.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">LoadOrderedCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:LoadOrderedCDRs.Status>
      </cba1:LoadOrderedCDRs>
      <cba1:ProcessCDRs Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ProcessCDRs_1">
        <cba1:ProcessCDRs.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputQueueOrderedCDRs</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.InputQueue>
        <cba1:ProcessCDRs.OutputQueueDisputeCDR>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">OutputQueueDisputeCDR</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.OutputQueueDisputeCDR>
        <cba1:ProcessCDRs.OutputQueueMissingCDR>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">OutputQueueMissingCDR</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.OutputQueueMissingCDR>
        <cba1:ProcessCDRs.OutputQueuePartialMatchCDR>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">OutputQueuePartialMatchCDR</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.OutputQueuePartialMatchCDR>
        <cba1:ProcessCDRs.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">LoadOrderedCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ProcessCDRs.PreviousActivityStatus>
      </cba1:ProcessCDRs>
      <cba1:PrepareMissingCDRsForDBApply sap2010:WorkflowViewState.IdRef="PrepareMissingCDRsForDBApply_1">
        <cba1:PrepareMissingCDRsForDBApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">OutputQueueMissingCDR</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareMissingCDRsForDBApply.InputQueue>
        <cba1:PrepareMissingCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedMissingCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareMissingCDRsForDBApply.OutputQueue>
        <cba1:PrepareMissingCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareMissingCDRsForDBApply.PreviousActivityStatus>
        <cba1:PrepareMissingCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PrepareMissingCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PrepareMissingCDRsForDBApply.Status>
      </cba1:PrepareMissingCDRsForDBApply>
      <cba1:ApplyMissingCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyMissingCDRsToDB_1">
        <cba1:ApplyMissingCDRsToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedMissingCDRsForDBApplyQueue</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyMissingCDRsToDB.InputQueue>
        <cba1:ApplyMissingCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PrepareMissingCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyMissingCDRsToDB.PreviousActivityStatus>
      </cba1:ApplyMissingCDRsToDB>
      <cba1:PreparePartialMatchCDRsForDBApply sap2010:WorkflowViewState.IdRef="PreparePartialMatchCDRsForDBApply_1">
        <cba1:PreparePartialMatchCDRsForDBApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">OutputQueuePartialMatchCDR</mca:CSharpValue>
          </InArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.InputQueue>
        <cba1:PreparePartialMatchCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPartialMatchCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.OutputQueue>
        <cba1:PreparePartialMatchCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.PreviousActivityStatus>
        <cba1:PreparePartialMatchCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparePartialMatchCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.Status>
      </cba1:PreparePartialMatchCDRsForDBApply>
      <cba1:ApplyPartialMatchCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyPartialMatchCDRsToDB_1">
        <cba1:ApplyPartialMatchCDRsToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPartialMatchCDRsForDBApplyQueue</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyPartialMatchCDRsToDB.InputQueue>
        <cba1:ApplyPartialMatchCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparePartialMatchCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyPartialMatchCDRsToDB.PreviousActivityStatus>
      </cba1:ApplyPartialMatchCDRsToDB>
      <cba1:PrepareDisputeCDRsForDBApply sap2010:WorkflowViewState.IdRef="PrepareDisputeCDRsForDBApply_1">
        <cba1:PrepareDisputeCDRsForDBApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">OutputQueueDisputeCDR</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareDisputeCDRsForDBApply.InputQueue>
        <cba1:PrepareDisputeCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedDisputeCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareDisputeCDRsForDBApply.OutputQueue>
        <cba1:PrepareDisputeCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareDisputeCDRsForDBApply.PreviousActivityStatus>
        <cba1:PrepareDisputeCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PrepareDisputeCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PrepareDisputeCDRsForDBApply.Status>
      </cba1:PrepareDisputeCDRsForDBApply>
      <cba1:ApplyDisputeCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyDisputeCDRsToDB_1">
        <cba1:ApplyDisputeCDRsToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedDisputeCDRsForDBApplyQueue</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyDisputeCDRsToDB.InputQueue>
        <cba1:ApplyDisputeCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PrepareDisputeCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyDisputeCDRsToDB.PreviousActivityStatus>
      </cba1:ApplyDisputeCDRsToDB>
    </Parallel>
    <sads:DebugSymbol.Symbol>d0RDOlxURlNcQ2FycmllclBvcnRhbFxDb2RlXENEUkNvbXBhcmlzb24uQlBcQ0RSQ29tcGFyaXNvblByb2Nlc3MueGFtbDY5A6MCDgIBAUEFhwEQAwGbA4gBBaECEAIBAkYHZBIDAdQDZQd6JAMBrwN7B4YBHAMBnAOUAQefAR4DAfoCoAEHugEaAwGpArsBB9ABKwMB6AHRAQfcASMDAccB3QEH8gEwAwGGAfMBB/4BKAIBZf8BB5QCKwIBJJUCB6ACIwIBA0cJUhkDAfIDUwljGQMB1QNyDXJnAwHLA2gNaHIDAcIDdw13fAMBuQNtDW18AwGwA4MBDYMBdAMBpgN+DX58AwGdA5wBDZwBdgMBiwOXAQ2XAXoDAfsCqAENqAGAAQMB6gK3AQ23AW4DAdoCowENowF6AwHKArIBDbIBigEDAboCrQENrQGAAQMBqgLIAQ3IAWoDAZkCvgENvgF4AwGJAs0BDc0BeQMB+QHDAQ3DAYMBAwHpAdkBDdkBcQMB2AHUAQ3UAXsDAcgB6gEN6gFqAwG3AeABDeABggEDAacB7wEN7wF+AwGXAeUBDeUBiAEDAYcB+wEN+wF2AgF29gEN9gGAAQIBZowCDYwCagIBVYICDYICeAIBRZECDZECeQIBNYcCDYcCgwECASWdAg2dAnECARSYAg2YAnsCAQRHZUdsAwGFBE8PT3QDAfwDSg9KZgMB8wNTU1NZAwHxA2APYHEDAegDWw9bdAMB3wNWD1ZnAwHWAw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LoadCDRs_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LoadCDRs_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PrepareCDRsForDBApply_2" sap:VirtualizedContainerService.HintSize="200,208" />
      <sap2010:ViewStateData Id="ApplyCDRsToDB_2" sap:VirtualizedContainerService.HintSize="200,208" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="1994,254" />
      <sap2010:ViewStateData Id="LoadOrderedCDRs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ProcessCDRs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareMissingCDRsForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyMissingCDRsToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PreparePartialMatchCDRsForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyPartialMatchCDRsToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareDisputeCDRsForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyDisputeCDRsToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="1994,86" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="2016,504">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CDRComparison.BP.CDRComparisonProcess_1" sap:VirtualizedContainerService.HintSize="2056,584" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>