<Activity mc:Ignorable="sap sap2010 sads" x:Class="TestCallAnalysis.BP.CDRCorrelationAndAnalysisProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:tba="clr-namespace:TestCallAnalysis.BP.Arguments;assembly=TestCallAnalysis.BP.Arguments"
 xmlns:tba1="clr-namespace:TestCallAnalysis.BP.Activities;assembly=TestCallAnalysis.BP.Activities"
 xmlns:te="clr-namespace:TestCallAnalysis.Entities;assembly=TestCallAnalysis.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:ve="clr-namespace:Vanrise.Entities;assembly=Vanrise.Entities"
 xmlns:vge="clr-namespace:Vanrise.GenericData.Entities;assembly=Vanrise.GenericData.Entities"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(tba:CDRCorrelationAndAnalysisProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TestCallAnalysis.BP.CDRCorrelationAndAnalysisProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TestCallAnalysis.BP.Arguments</x:String>
      <x:String>TestCallAnalysis.Entities</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.Queueing</x:String>
      <x:String>TestCallAnalysis.BP.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Caching</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.GenericData.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>TestCallAnalysis.BP.Activities</AssemblyReference>
      <AssemblyReference>TestCallAnalysis.BP.Arguments</AssemblyReference>
      <AssemblyReference>TestCallAnalysis.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TestCallAnalysis.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Root" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Nullable(x:Int64)" Name="lastImportedId" />
      <Variable x:TypeArguments="x:Boolean" Name="newDataImported" />
      <Variable x:TypeArguments="scg:List(te:CDRCorrelationFilterGroup)" Name="cdrCorrelationFilterGroups" />
      <Variable x:TypeArguments="te:CDRCorrelationProcessState" Name="CDRCorrelationProcessState" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="loadCDRsToCorrelateStatus" />
      <Variable x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)" Name="correlateCDRsOutputQueue" />
      <Variable x:TypeArguments="vq:MemoryQueue(vge:RecordBatch)" Name="loadCDRsToCorrelateOutputQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="correlateCDRsStatus" />
    </Sequence.Variables>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_2" Message="Starting CDR Correlation Process.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <vbw:GetDefinitionObjectState x:TypeArguments="te:CDRCorrelationProcessState" ObjectKey="{x:Null}" sap2010:WorkflowViewState.IdRef="GetDefinitionObjectState`1_1">
      <vbw:GetDefinitionObjectState.Result>
        <OutArgument x:TypeArguments="te:CDRCorrelationProcessState">
          <mca:CSharpReference x:TypeArguments="te:CDRCorrelationProcessState">CDRCorrelationProcessState</mca:CSharpReference>
        </OutArgument>
      </vbw:GetDefinitionObjectState.Result>
    </vbw:GetDefinitionObjectState>
    <tba1:BuildCDRCorrelationFilterGroup sap2010:WorkflowViewState.IdRef="BuildCDRCorrelationFilterGroup_2">
      <tba1:BuildCDRCorrelationFilterGroup.CDRCorrelationFilterGroups>
        <OutArgument x:TypeArguments="scg:List(te:CDRCorrelationFilterGroup)">
          <mca:CSharpReference x:TypeArguments="scg:List(te:CDRCorrelationFilterGroup)">cdrCorrelationFilterGroups</mca:CSharpReference>
        </OutArgument>
      </tba1:BuildCDRCorrelationFilterGroup.CDRCorrelationFilterGroups>
      <tba1:BuildCDRCorrelationFilterGroup.CDRCorrelationProcessState>
        <InArgument x:TypeArguments="te:CDRCorrelationProcessState">
          <mca:CSharpValue x:TypeArguments="te:CDRCorrelationProcessState">CDRCorrelationProcessState</mca:CSharpValue>
        </InArgument>
      </tba1:BuildCDRCorrelationFilterGroup.CDRCorrelationProcessState>
      <tba1:BuildCDRCorrelationFilterGroup.DateTimeMargin>
        <InArgument x:TypeArguments="x:TimeSpan">
          <mca:CSharpValue x:TypeArguments="x:TimeSpan">Input.DateTimeMargin</mca:CSharpValue>
        </InArgument>
      </tba1:BuildCDRCorrelationFilterGroup.DateTimeMargin>
      <tba1:BuildCDRCorrelationFilterGroup.LastImportedId>
        <OutArgument x:TypeArguments="s:Nullable(x:Int64)">
          <mca:CSharpReference x:TypeArguments="s:Nullable(x:Int64)">lastImportedId</mca:CSharpReference>
        </OutArgument>
      </tba1:BuildCDRCorrelationFilterGroup.LastImportedId>
      <tba1:BuildCDRCorrelationFilterGroup.NewDataImported>
        <OutArgument x:TypeArguments="x:Boolean">
          <mca:CSharpReference x:TypeArguments="x:Boolean">newDataImported</mca:CSharpReference>
        </OutArgument>
      </tba1:BuildCDRCorrelationFilterGroup.NewDataImported>
    </tba1:BuildCDRCorrelationFilterGroup>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">newDataImported</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence DisplayName="CorrelateCDRsSequence" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
            <Parallel.Variables>
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="insertCorrelatedCDRsStatus" />
              <Variable x:TypeArguments="vq:MemoryQueue(te:CDRCaseBatch)" Name="correlateCaseCDRsOutputQueue" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareCDRCasesStatus" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="updateMappedCDRsStatus" />
              <Variable x:TypeArguments="vq:MemoryQueue(tba1:PrepareCDRCasesToInsert)" Name="prepareCaseCDRsToInsert" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="insertOrUpdateCDRsStatus" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="updateCorrelatedCDRsStatus" />
              <Variable x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)" Name="updateCorrelatedCDRsListInput" />
              <Variable x:TypeArguments="vq:MemoryQueue(te:UpdatedMappedCDRs)" Name="updateMappedCDRs" />
            </Parallel.Variables>
            <tba1:LoadCDRsToCorrelate sap2010:WorkflowViewState.IdRef="LoadCDRsToCorrelate_2">
              <tba1:LoadCDRsToCorrelate.CDRCorrelationFilterGroups>
                <InArgument x:TypeArguments="scg:List(te:CDRCorrelationFilterGroup)">
                  <mca:CSharpValue x:TypeArguments="scg:List(te:CDRCorrelationFilterGroup)">cdrCorrelationFilterGroups</mca:CSharpValue>
                </InArgument>
              </tba1:LoadCDRsToCorrelate.CDRCorrelationFilterGroups>
              <tba1:LoadCDRsToCorrelate.OutputQueue>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(vge:RecordBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(vge:RecordBatch)">loadCDRsToCorrelateOutputQueue</mca:CSharpReference>
                </InOutArgument>
              </tba1:LoadCDRsToCorrelate.OutputQueue>
              <tba1:LoadCDRsToCorrelate.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">loadCDRsToCorrelateStatus</mca:CSharpReference>
                </OutArgument>
              </tba1:LoadCDRsToCorrelate.Status>
            </tba1:LoadCDRsToCorrelate>
            <tba1:CorrelateCDRs sap2010:WorkflowViewState.IdRef="CorrelateCDRs_1">
              <tba1:CorrelateCDRs.DateTimeMargin>
                <InArgument x:TypeArguments="x:TimeSpan">
                  <mca:CSharpValue x:TypeArguments="x:TimeSpan">Input.DateTimeMargin</mca:CSharpValue>
                </InArgument>
              </tba1:CorrelateCDRs.DateTimeMargin>
              <tba1:CorrelateCDRs.InputRecordsQueue>
                <InArgument x:TypeArguments="vq:MemoryQueue(vge:RecordBatch)">
                  <mca:CSharpValue x:TypeArguments="vq:MemoryQueue(vge:RecordBatch)">loadCDRsToCorrelateOutputQueue</mca:CSharpValue>
                </InArgument>
              </tba1:CorrelateCDRs.InputRecordsQueue>
              <tba1:CorrelateCDRs.OutputCaseQueue>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(te:CDRCaseBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(te:CDRCaseBatch)">correlateCaseCDRsOutputQueue</mca:CSharpReference>
                </InOutArgument>
              </tba1:CorrelateCDRs.OutputCaseQueue>
              <tba1:CorrelateCDRs.OutputCorrelationBatchQueue>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">correlateCDRsOutputQueue</mca:CSharpReference>
                </InOutArgument>
              </tba1:CorrelateCDRs.OutputCorrelationBatchQueue>
              <tba1:CorrelateCDRs.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">loadCDRsToCorrelateStatus</mca:CSharpValue>
                </InArgument>
              </tba1:CorrelateCDRs.PreviousActivityStatus>
              <tba1:CorrelateCDRs.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">correlateCDRsStatus</mca:CSharpReference>
                </OutArgument>
              </tba1:CorrelateCDRs.Status>
              <tba1:CorrelateCDRs.TimeOutMargin>
                <InArgument x:TypeArguments="x:TimeSpan">
                  <mca:CSharpValue x:TypeArguments="x:TimeSpan">Input.TimeoutMargin</mca:CSharpValue>
                </InArgument>
              </tba1:CorrelateCDRs.TimeOutMargin>
              <tba1:CorrelateCDRs.UpdatedCDRCorrelationBatchInput>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">updateCorrelatedCDRsListInput</mca:CSharpReference>
                </InOutArgument>
              </tba1:CorrelateCDRs.UpdatedCDRCorrelationBatchInput>
              <tba1:CorrelateCDRs.UpdatedMappedCDRsInput>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(te:UpdatedMappedCDRs)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(te:UpdatedMappedCDRs)">updateMappedCDRs</mca:CSharpReference>
                </InOutArgument>
              </tba1:CorrelateCDRs.UpdatedMappedCDRsInput>
            </tba1:CorrelateCDRs>
            <tba1:UpdateMappedCDRs sap2010:WorkflowViewState.IdRef="UpdateMappedCDRs_1">
              <tba1:UpdateMappedCDRs.InputQueueIds>
                <InArgument x:TypeArguments="vq:MemoryQueue(te:UpdatedMappedCDRs)">
                  <mca:CSharpValue x:TypeArguments="vq:MemoryQueue(te:UpdatedMappedCDRs)">updateMappedCDRs</mca:CSharpValue>
                </InArgument>
              </tba1:UpdateMappedCDRs.InputQueueIds>
              <tba1:UpdateMappedCDRs.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">correlateCDRsStatus</mca:CSharpValue>
                </InArgument>
              </tba1:UpdateMappedCDRs.PreviousActivityStatus>
              <tba1:UpdateMappedCDRs.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">updateMappedCDRsStatus</mca:CSharpReference>
                </OutArgument>
              </tba1:UpdateMappedCDRs.Status>
            </tba1:UpdateMappedCDRs>
            <tba1:InsertCorrelatedCDRs sap2010:WorkflowViewState.IdRef="InsertCorrelatedCDRs_1">
              <tba1:InsertCorrelatedCDRs.InputQueueToInsert>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">correlateCDRsOutputQueue</mca:CSharpReference>
                </InOutArgument>
              </tba1:InsertCorrelatedCDRs.InputQueueToInsert>
              <tba1:InsertCorrelatedCDRs.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">updateMappedCDRsStatus</mca:CSharpValue>
                </InArgument>
              </tba1:InsertCorrelatedCDRs.PreviousActivityStatus>
              <tba1:InsertCorrelatedCDRs.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">insertCorrelatedCDRsStatus</mca:CSharpReference>
                </OutArgument>
              </tba1:InsertCorrelatedCDRs.Status>
            </tba1:InsertCorrelatedCDRs>
            <tba1:PrepareCDRCases sap2010:WorkflowViewState.IdRef="PrepareCDRCases_1">
              <tba1:PrepareCDRCases.InputQueue>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(te:CDRCaseBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(te:CDRCaseBatch)">correlateCaseCDRsOutputQueue</mca:CSharpReference>
                </InOutArgument>
              </tba1:PrepareCDRCases.InputQueue>
              <tba1:PrepareCDRCases.PrepareCDRCasesToInsert>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(tba1:PrepareCDRCasesToInsert)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(tba1:PrepareCDRCasesToInsert)">prepareCaseCDRsToInsert</mca:CSharpReference>
                </InOutArgument>
              </tba1:PrepareCDRCases.PrepareCDRCasesToInsert>
              <tba1:PrepareCDRCases.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">insertCorrelatedCDRsStatus</mca:CSharpValue>
                </InArgument>
              </tba1:PrepareCDRCases.PreviousActivityStatus>
              <tba1:PrepareCDRCases.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">prepareCDRCasesStatus</mca:CSharpReference>
                </OutArgument>
              </tba1:PrepareCDRCases.Status>
            </tba1:PrepareCDRCases>
            <tba1:InsertOrUpdateCases UpdateCorrelatedCDRs="{x:Null}" sap2010:WorkflowViewState.IdRef="InsertOrUpdateCases_2">
              <tba1:InsertOrUpdateCases.InputQueueToInsert>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(tba1:PrepareCDRCasesToInsert)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(tba1:PrepareCDRCasesToInsert)">prepareCaseCDRsToInsert</mca:CSharpReference>
                </InOutArgument>
              </tba1:InsertOrUpdateCases.InputQueueToInsert>
              <tba1:InsertOrUpdateCases.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">prepareCDRCasesStatus</mca:CSharpValue>
                </InArgument>
              </tba1:InsertOrUpdateCases.PreviousActivityStatus>
              <tba1:InsertOrUpdateCases.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">insertOrUpdateCDRsStatus</mca:CSharpReference>
                </OutArgument>
              </tba1:InsertOrUpdateCases.Status>
            </tba1:InsertOrUpdateCases>
            <tba1:UpdateCorrelatedCDRs UpdateCorrelatedCDRsInput="{x:Null}" sap2010:WorkflowViewState.IdRef="UpdateCorrelatedCDRs_2">
              <tba1:UpdateCorrelatedCDRs.InsertedCorrelatedCDRs>
                <InOutArgument x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:MemoryQueue(te:CDRCorrelationBatch)">updateCorrelatedCDRsListInput</mca:CSharpReference>
                </InOutArgument>
              </tba1:UpdateCorrelatedCDRs.InsertedCorrelatedCDRs>
              <tba1:UpdateCorrelatedCDRs.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">insertOrUpdateCDRsStatus</mca:CSharpValue>
                </InArgument>
              </tba1:UpdateCorrelatedCDRs.PreviousActivityStatus>
              <tba1:UpdateCorrelatedCDRs.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">updateCorrelatedCDRsStatus</mca:CSharpReference>
                </OutArgument>
              </tba1:UpdateCorrelatedCDRs.Status>
            </tba1:UpdateCorrelatedCDRs>
          </Parallel>
          <vbw:SaveDefinitionObjectState ObjectKey="{x:Null}" sap2010:WorkflowViewState.IdRef="SaveDefinitionObjectState_1">
            <vbw:SaveDefinitionObjectState.ObjectValue>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object">new CDRCorrelationProcessState() { LastImportedId = lastImportedId }</mca:CSharpValue>
              </InArgument>
            </vbw:SaveDefinitionObjectState.ObjectValue>
          </vbw:SaveDefinitionObjectState>
        </Sequence>
      </If.Then>
      <If.Else>
        <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_1" Message="No new CDRs to be correlated">
          <vbw:WriteTrackingMessage.Severity>
            <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
            </InArgument>
          </vbw:WriteTrackingMessage.Severity>
        </vbw:WriteTrackingMessage>
      </If.Else>
    </If>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_3" Message="Finish CDR Correlation Process.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <sads:DebugSymbol.Symbol>d0xDOlxURlNcUmV0YWlsXENvZGVcVGVzdENhbGxBbmFseXNpcy5CUFxDRFJDb3JyZWxhdGlvbkFuZEFuYWx5c2lzUHJvY2Vzcy54YW1sO0IDwAIOAgEBTQVTIAMBiwVUBVokAwGABVsFdSsDAc0EdgW3AgoCAQ64AgW+AiACAQJQC1CFAQMBjQVNYE2DAQMBjAVXC1eAAQMBgQVeC16JAQMB9gRjC2N4AwHsBG0LbWoDAeIEcgtyYQMB2ARoC2hfAwHOBHkLeVkCAQ99CawCFAIBJa8CCbUCJAIBGbsCC7sChQECAQS4AmC4AoEBAgEDfgukAhYCATGlAgurAisCASayAg+yAokBAgEbrwJkrwKCAQIBGooBDZoBKAMBkwSbAQ3JASIDAecCygEN2gElAwGtAtsBDesBKQMB8wHsAQ2BAiQDAaYBggINkgIoAgFskwINowIpAgEyqAIRqAKTAQIBJ40BE40BiQEDAboElwETlwGAAQMBpwSSAROSAY4BAwGUBMYBE8YBhQEDAYAEwQETwQGUAQMB7QOyAROyAXgDAdoDrQETrQGPAQMBxwO3ARO3AXoDAbQDowETowGGAQMBoQO8ARO8AWYDAY4DqAETqAGMAQMB+wKeAROeAWcDAegCzQETzQF9AwHUAtIBE9IBcgMBwQLXARPXAX0DAa4C3gET3gGPAQMBmgLjARPjAXUDAYcC6AET6AGBAQMB9AH5ARP5AXkDAeAB7wET7wGMAQMBzQH+ARP+AXwDAboB9AET9AGUAQMBpwGFAhOFApQBAwGTAYoCE4oCdAMBgAGPAhOPAn8CAW2bAhObAncCAVmWAhOWApQBAgFGoAIToAKBAQIBMw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteTrackingMessage_2" sap:VirtualizedContainerService.HintSize="2001,22" />
      <sap2010:ViewStateData Id="GetDefinitionObjectState`1_1" sap:VirtualizedContainerService.HintSize="2001,22" />
      <sap2010:ViewStateData Id="BuildCDRCorrelationFilterGroup_2" sap:VirtualizedContainerService.HintSize="2001,22" />
      <sap2010:ViewStateData Id="LoadCDRsToCorrelate_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="CorrelateCDRs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="UpdateMappedCDRs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="InsertCorrelatedCDRs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareCDRCases_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="InsertOrUpdateCases_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="UpdateCorrelatedCDRs_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="1754,86" />
      <sap2010:ViewStateData Id="SaveDefinitionObjectState_1" sap:VirtualizedContainerService.HintSize="1754,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="1776,272">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="2001,422" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_3" sap:VirtualizedContainerService.HintSize="2001,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="2023,794">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TestCallAnalysis.BP.CDRCorrelationAndAnalysisProcess_1" sap:VirtualizedContainerService.HintSize="2063,874" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>