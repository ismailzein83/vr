<Activity mc:Ignorable="sap sap2010 sads" x:Class="CDRComparison.BP.CDRComparisonProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:cba="clr-namespace:CDRComparison.BP.Arguments;assembly=CDRComparison.BP.Arguments"
 xmlns:cba1="clr-namespace:CDRComparison.BP.Activities;assembly=CDRComparison.BP.Activities"
 xmlns:ce="clr-namespace:CDRComparison.Entities;assembly=CDRComparison.Entities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbe="clr-namespace:Vanrise.BusinessProcess.Entities;assembly=Vanrise.BusinessProcess.Entities"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(cba:CDRComparsionProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>CDRComparison.BP.CDRComparisonProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>CDRComparison.BP.Arguments</x:String>
      <x:String>Vanrise.Queueing</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.BusinessProcess.Entities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.MainExtensions</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing.Entities</AssemblyReference>
      <AssemblyReference>CDRComparison.BP.Activities</AssemblyReference>
      <AssemblyReference>CDRComparison.BP.Arguments</AssemblyReference>
      <AssemblyReference>CDRComparison.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CDRComparison.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)" Name="OutputQueuePartialMatchCDR" />
      <Variable x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)" Name="OutputQueueDisputeCDR" />
      <Variable x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)" Name="OutputQueueMissingCDR" />
      <Variable x:TypeArguments="vq:BaseQueue(ce:CDRBatch)" Name="OutputCDRBatch" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedCDRsForDBApplyQueue" />
      <Variable x:TypeArguments="cba:ComparisonResultTaskExecutionInformation" Name="FinishExecution">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="cba:ComparisonResultTaskExecutionInformation">new ComparisonResultTaskExecutionInformation()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="cba:SettingTaskExecutionInformation" Name="ContinueExecution" />
      <Variable x:TypeArguments="x:String" Name="TableKey" />
      <Variable x:TypeArguments="cba:CDRComparisonConfigTaskExecutionInformation" Name="SaveConfig" />
      <Variable x:TypeArguments="vq:BaseQueue(ce:InvalidCDRBatch)" Name="OutputQueueInvalidCDR" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedInvalidCDRsForDBApplyQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PrepareInvalidCDRsStatus" />
      <Variable x:TypeArguments="x:TimeSpan" Name="DelayDuration" />
      <Variable x:TypeArguments="vbe:CreateBPTaskOutput" Name="CreateBPTaskOutput" />
    </Sequence.Variables>
    <cba1:SetDelayDuration sap2010:WorkflowViewState.IdRef="SetDelayDuration_1">
      <cba1:SetDelayDuration.DelayDuration>
        <OutArgument x:TypeArguments="x:TimeSpan">
          <mca:CSharpReference x:TypeArguments="x:TimeSpan">DelayDuration</mca:CSharpReference>
        </OutArgument>
      </cba1:SetDelayDuration.DelayDuration>
    </cba1:SetDelayDuration>
    <cba1:CreateCDRTables sap2010:WorkflowViewState.IdRef="CreateCDRTables_1">
      <cba1:CreateCDRTables.TableKey>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">TableKey</mca:CSharpReference>
        </OutArgument>
      </cba1:CreateCDRTables.TableKey>
    </cba1:CreateCDRTables>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
      <Parallel.Variables>
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="loadCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PrepareCDRsForDBApplyStatus" />
      </Parallel.Variables>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
              <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">loadCDRsStatus</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="vb:AsyncActivityStatus">
              <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">new AsyncActivityStatus()</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <cba1:LoadCDRs Status="{x:Null}" sap2010:WorkflowViewState.IdRef="LoadCDRs_3" IsPartnerCDRs="False">
          <cba1:LoadCDRs.CDRSource>
            <InArgument x:TypeArguments="ce:CDRSource">
              <mca:CSharpValue x:TypeArguments="ce:CDRSource">Input.SystemCDRSource</mca:CSharpValue>
            </InArgument>
          </cba1:LoadCDRs.CDRSource>
          <cba1:LoadCDRs.OutputQueue>
            <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
              <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputCDRBatch</mca:CSharpReference>
            </InOutArgument>
          </cba1:LoadCDRs.OutputQueue>
        </cba1:LoadCDRs>
        <cba1:LoadCDRs Status="{x:Null}" sap2010:WorkflowViewState.IdRef="LoadCDRs_4" IsPartnerCDRs="True">
          <cba1:LoadCDRs.CDRSource>
            <InArgument x:TypeArguments="ce:CDRSource">
              <mca:CSharpValue x:TypeArguments="ce:CDRSource">Input.PartnerCDRSource</mca:CSharpValue>
            </InArgument>
          </cba1:LoadCDRs.CDRSource>
          <cba1:LoadCDRs.OutputQueue>
            <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
              <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputCDRBatch</mca:CSharpReference>
            </InOutArgument>
          </cba1:LoadCDRs.OutputQueue>
        </cba1:LoadCDRs>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">
              <mca:CSharpReference x:TypeArguments="x:Boolean">loadCDRsStatus.IsComplete</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <cba1:PrepareCDRsForDBApply sap2010:WorkflowViewState.IdRef="PrepareCDRsForDBApply_2">
        <cba1:PrepareCDRsForDBApply.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputCDRBatch</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareCDRsForDBApply.InputQueue>
        <cba1:PrepareCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareCDRsForDBApply.OutputQueue>
        <cba1:PrepareCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">loadCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareCDRsForDBApply.PreviousActivityStatus>
        <cba1:PrepareCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PrepareCDRsForDBApplyStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PrepareCDRsForDBApply.Status>
        <cba1:PrepareCDRsForDBApply.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareCDRsForDBApply.TableKey>
      </cba1:PrepareCDRsForDBApply>
      <cba1:ApplyCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyCDRsToDB_2">
        <cba1:ApplyCDRsToDB.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:ApplyCDRsToDB.InputQueue>
        <cba1:ApplyCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PrepareCDRsForDBApplyStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyCDRsToDB.PreviousActivityStatus>
        <cba1:ApplyCDRsToDB.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyCDRsToDB.TableKey>
      </cba1:ApplyCDRsToDB>
    </Parallel>
    <Pick sap2010:WorkflowViewState.IdRef="Pick_1">
      <PickBranch DisplayName="Branch1" sap2010:WorkflowViewState.IdRef="PickBranch_1">
        <PickBranch.Trigger>
          <vbw:AssignTask x:TypeArguments="cba:SettingTaskExecutionInformation" ExecutedTask="{x:Null}" sap2010:WorkflowViewState.IdRef="AssignTask`1_6" TaskTitle="CDR Comparison Settings">
            <vbw:AssignTask.AssignedTo>
              <InArgument x:TypeArguments="vbe:BPTaskAssignee">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskAssignee">new Vanrise.BusinessProcess.MainExtensions.InitiatorBPTaskAssignee()</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.AssignedTo>
            <vbw:AssignTask.TaskData>
              <InArgument x:TypeArguments="vbe:BPTaskData">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskData">new SettingTaskData() { TableKey = TableKey, PartnerCDRSourceConfigId = Input.PartnerCDRSourceConfigId }</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.TaskData>
            <vbw:AssignTask.TaskExecutionInformation>
              <OutArgument x:TypeArguments="cba:SettingTaskExecutionInformation">
                <mca:CSharpReference x:TypeArguments="cba:SettingTaskExecutionInformation">ContinueExecution</mca:CSharpReference>
              </OutArgument>
            </vbw:AssignTask.TaskExecutionInformation>
          </vbw:AssignTask>
        </PickBranch.Trigger>
      </PickBranch>
      <PickBranch DisplayName="Branch2" sap2010:WorkflowViewState.IdRef="PickBranch_2">
        <PickBranch.Trigger>
          <Delay sap2010:WorkflowViewState.IdRef="Delay_1">
            <InArgument x:TypeArguments="x:TimeSpan">
              <mca:CSharpValue x:TypeArguments="x:TimeSpan">DelayDuration</mca:CSharpValue>
            </InArgument>
          </Delay>
        </PickBranch.Trigger>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
          <cba1:DeleteCDRTables sap2010:WorkflowViewState.IdRef="DeleteCDRTables_2">
            <cba1:DeleteCDRTables.TableKey>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
              </InArgument>
            </cba1:DeleteCDRTables.TableKey>
          </cba1:DeleteCDRTables>
          <cba1:ThrowTimeoutException sap2010:WorkflowViewState.IdRef="ThrowTimeoutException_1" />
        </Sequence>
      </PickBranch>
    </Pick>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_2">
      <Parallel.Variables>
        <Variable x:TypeArguments="vq:BaseQueue(ce:CDRBatch)" Name="OutputQueueOrderedCDRs" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedMissingCDRsForDBApplyQueue" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedDisputeCDRsForDBApplyQueue" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedPartialMatchCDRsForDBApplyQueue" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="LoadOrderedCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="ProcessCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PrepareMissingCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparePartialMatchCDRsStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PrepareDisputeCDRsStatus" />
      </Parallel.Variables>
      <cba1:LoadOrderedCDRs sap2010:WorkflowViewState.IdRef="LoadOrderedCDRs_1">
        <cba1:LoadOrderedCDRs.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputQueueOrderedCDRs</mca:CSharpReference>
          </InOutArgument>
        </cba1:LoadOrderedCDRs.OutputQueue>
        <cba1:LoadOrderedCDRs.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">LoadOrderedCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:LoadOrderedCDRs.Status>
        <cba1:LoadOrderedCDRs.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:LoadOrderedCDRs.TableKey>
      </cba1:LoadOrderedCDRs>
      <cba1:ProcessCDRs sap2010:WorkflowViewState.IdRef="ProcessCDRs_1">
        <cba1:ProcessCDRs.CompareCGPN>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">ContinueExecution.CompareCGPN</mca:CSharpValue>
          </InArgument>
        </cba1:ProcessCDRs.CompareCGPN>
        <cba1:ProcessCDRs.DurationMarginInMilliseconds>
          <InArgument x:TypeArguments="x:Decimal">
            <mca:CSharpValue x:TypeArguments="x:Decimal" xml:space="preserve">ContinueExecution.DurationMarginTimeUnit == Entities.TimeUnitEnum.Seconds ?
                ContinueExecution.DurationMargin * 1000 :
                ContinueExecution.DurationMargin</mca:CSharpValue>
          </InArgument>
        </cba1:ProcessCDRs.DurationMarginInMilliseconds>
        <cba1:ProcessCDRs.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:CDRBatch)">OutputQueueOrderedCDRs</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.InputQueue>
        <cba1:ProcessCDRs.OutputQueueDisputeCDR>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">OutputQueueDisputeCDR</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.OutputQueueDisputeCDR>
        <cba1:ProcessCDRs.OutputQueueInvalidCDR>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:InvalidCDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:InvalidCDRBatch)">OutputQueueInvalidCDR</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.OutputQueueInvalidCDR>
        <cba1:ProcessCDRs.OutputQueueMissingCDR>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">OutputQueueMissingCDR</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.OutputQueueMissingCDR>
        <cba1:ProcessCDRs.OutputQueuePartialMatchCDR>
          <InOutArgument x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">OutputQueuePartialMatchCDR</mca:CSharpReference>
          </InOutArgument>
        </cba1:ProcessCDRs.OutputQueuePartialMatchCDR>
        <cba1:ProcessCDRs.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">LoadOrderedCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ProcessCDRs.PreviousActivityStatus>
        <cba1:ProcessCDRs.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:ProcessCDRs.Status>
        <cba1:ProcessCDRs.TimeMarginInMilliseconds>
          <InArgument x:TypeArguments="x:Decimal">
            <mca:CSharpValue x:TypeArguments="x:Decimal" xml:space="preserve">ContinueExecution.TimeMarginTimeUnit == Entities.TimeUnitEnum.Seconds ?
                ContinueExecution.TimeMargin * 1000 :
                ContinueExecution.TimeMargin</mca:CSharpValue>
          </InArgument>
        </cba1:ProcessCDRs.TimeMarginInMilliseconds>
        <cba1:ProcessCDRs.TimeOffset>
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">ContinueExecution.TimeOffset</mca:CSharpValue>
          </InArgument>
        </cba1:ProcessCDRs.TimeOffset>
      </cba1:ProcessCDRs>
      <cba1:PrepareMissingCDRsForDBApply sap2010:WorkflowViewState.IdRef="PrepareMissingCDRsForDBApply_1">
        <cba1:PrepareMissingCDRsForDBApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(ce:MissingCDRBatch)">OutputQueueMissingCDR</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareMissingCDRsForDBApply.InputQueue>
        <cba1:PrepareMissingCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedMissingCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareMissingCDRsForDBApply.OutputQueue>
        <cba1:PrepareMissingCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareMissingCDRsForDBApply.PreviousActivityStatus>
        <cba1:PrepareMissingCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PrepareMissingCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PrepareMissingCDRsForDBApply.Status>
        <cba1:PrepareMissingCDRsForDBApply.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareMissingCDRsForDBApply.TableKey>
      </cba1:PrepareMissingCDRsForDBApply>
      <cba1:ApplyMissingCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyMissingCDRsToDB_1">
        <cba1:ApplyMissingCDRsToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedMissingCDRsForDBApplyQueue</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyMissingCDRsToDB.InputQueue>
        <cba1:ApplyMissingCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PrepareMissingCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyMissingCDRsToDB.PreviousActivityStatus>
        <cba1:ApplyMissingCDRsToDB.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyMissingCDRsToDB.TableKey>
      </cba1:ApplyMissingCDRsToDB>
      <cba1:PreparePartialMatchCDRsForDBApply sap2010:WorkflowViewState.IdRef="PreparePartialMatchCDRsForDBApply_1">
        <cba1:PreparePartialMatchCDRsForDBApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(ce:PartialMatchCDRBatch)">OutputQueuePartialMatchCDR</mca:CSharpValue>
          </InArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.InputQueue>
        <cba1:PreparePartialMatchCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPartialMatchCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.OutputQueue>
        <cba1:PreparePartialMatchCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.PreviousActivityStatus>
        <cba1:PreparePartialMatchCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparePartialMatchCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.Status>
        <cba1:PreparePartialMatchCDRsForDBApply.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:PreparePartialMatchCDRsForDBApply.TableKey>
      </cba1:PreparePartialMatchCDRsForDBApply>
      <cba1:ApplyPartialMatchCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyPartialMatchCDRsToDB_1">
        <cba1:ApplyPartialMatchCDRsToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPartialMatchCDRsForDBApplyQueue</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyPartialMatchCDRsToDB.InputQueue>
        <cba1:ApplyPartialMatchCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparePartialMatchCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyPartialMatchCDRsToDB.PreviousActivityStatus>
        <cba1:ApplyPartialMatchCDRsToDB.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyPartialMatchCDRsToDB.TableKey>
      </cba1:ApplyPartialMatchCDRsToDB>
      <cba1:PrepareDisputeCDRsForDBApply sap2010:WorkflowViewState.IdRef="PrepareDisputeCDRsForDBApply_1">
        <cba1:PrepareDisputeCDRsForDBApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(ce:DisputeCDRBatch)">OutputQueueDisputeCDR</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareDisputeCDRsForDBApply.InputQueue>
        <cba1:PrepareDisputeCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedDisputeCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareDisputeCDRsForDBApply.OutputQueue>
        <cba1:PrepareDisputeCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareDisputeCDRsForDBApply.PreviousActivityStatus>
        <cba1:PrepareDisputeCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PrepareDisputeCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PrepareDisputeCDRsForDBApply.Status>
        <cba1:PrepareDisputeCDRsForDBApply.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareDisputeCDRsForDBApply.TableKey>
      </cba1:PrepareDisputeCDRsForDBApply>
      <cba1:ApplyDisputeCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyDisputeCDRsToDB_1">
        <cba1:ApplyDisputeCDRsToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedDisputeCDRsForDBApplyQueue</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyDisputeCDRsToDB.InputQueue>
        <cba1:ApplyDisputeCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PrepareDisputeCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyDisputeCDRsToDB.PreviousActivityStatus>
        <cba1:ApplyDisputeCDRsToDB.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyDisputeCDRsToDB.TableKey>
      </cba1:ApplyDisputeCDRsToDB>
      <cba1:PrepareInvalidCDRsForDBApply sap2010:WorkflowViewState.IdRef="PrepareInvalidCDRsForDBApply_1">
        <cba1:PrepareInvalidCDRsForDBApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(ce:InvalidCDRBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(ce:InvalidCDRBatch)">OutputQueueInvalidCDR</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareInvalidCDRsForDBApply.InputQueue>
        <cba1:PrepareInvalidCDRsForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedInvalidCDRsForDBApplyQueue</mca:CSharpReference>
          </InOutArgument>
        </cba1:PrepareInvalidCDRsForDBApply.OutputQueue>
        <cba1:PrepareInvalidCDRsForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ProcessCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareInvalidCDRsForDBApply.PreviousActivityStatus>
        <cba1:PrepareInvalidCDRsForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PrepareInvalidCDRsStatus</mca:CSharpReference>
          </OutArgument>
        </cba1:PrepareInvalidCDRsForDBApply.Status>
        <cba1:PrepareInvalidCDRsForDBApply.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:PrepareInvalidCDRsForDBApply.TableKey>
      </cba1:PrepareInvalidCDRsForDBApply>
      <cba1:ApplyInvalidCDRsToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyInvalidCDRsToDB_1">
        <cba1:ApplyInvalidCDRsToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedInvalidCDRsForDBApplyQueue</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyInvalidCDRsToDB.InputQueue>
        <cba1:ApplyInvalidCDRsToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PrepareInvalidCDRsStatus</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyInvalidCDRsToDB.PreviousActivityStatus>
        <cba1:ApplyInvalidCDRsToDB.TableKey>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
          </InArgument>
        </cba1:ApplyInvalidCDRsToDB.TableKey>
      </cba1:ApplyInvalidCDRsToDB>
    </Parallel>
    <Pick sap2010:WorkflowViewState.IdRef="Pick_2">
      <PickBranch DisplayName="Branch1" sap2010:WorkflowViewState.IdRef="PickBranch_3">
        <PickBranch.Trigger>
          <vbw:AssignTask x:TypeArguments="cba:ComparisonResultTaskExecutionInformation" ExecutedTask="{x:Null}" sap2010:WorkflowViewState.IdRef="AssignTask`1_4" TaskTitle="CDR Comparison Result">
            <vbw:AssignTask.AssignedTo>
              <InArgument x:TypeArguments="vbe:BPTaskAssignee">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskAssignee">new Vanrise.BusinessProcess.MainExtensions.InitiatorBPTaskAssignee()</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.AssignedTo>
            <vbw:AssignTask.TaskData>
              <InArgument x:TypeArguments="vbe:BPTaskData">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskData">new ComparisonResultTaskData() { TableKey = TableKey }</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.TaskData>
            <vbw:AssignTask.TaskExecutionInformation>
              <OutArgument x:TypeArguments="cba:ComparisonResultTaskExecutionInformation">
                <mca:CSharpReference x:TypeArguments="cba:ComparisonResultTaskExecutionInformation">FinishExecution</mca:CSharpReference>
              </OutArgument>
            </vbw:AssignTask.TaskExecutionInformation>
          </vbw:AssignTask>
        </PickBranch.Trigger>
      </PickBranch>
      <PickBranch DisplayName="Branch2" sap2010:WorkflowViewState.IdRef="PickBranch_4">
        <PickBranch.Trigger>
          <Delay sap2010:WorkflowViewState.IdRef="Delay_2">
            <InArgument x:TypeArguments="x:TimeSpan">
              <mca:CSharpValue x:TypeArguments="x:TimeSpan">DelayDuration</mca:CSharpValue>
            </InArgument>
          </Delay>
        </PickBranch.Trigger>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <cba1:DeleteCDRTables sap2010:WorkflowViewState.IdRef="DeleteCDRTables_3">
            <cba1:DeleteCDRTables.TableKey>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
              </InArgument>
            </cba1:DeleteCDRTables.TableKey>
          </cba1:DeleteCDRTables>
          <cba1:ThrowTimeoutException sap2010:WorkflowViewState.IdRef="ThrowTimeoutException_2" />
        </Sequence>
      </PickBranch>
    </Pick>
    <Pick sap2010:WorkflowViewState.IdRef="Pick_3">
      <PickBranch DisplayName="Branch1" sap2010:WorkflowViewState.IdRef="PickBranch_5">
        <PickBranch.Trigger>
          <vbw:AssignTask x:TypeArguments="cba:CDRComparisonConfigTaskExecutionInformation" ExecutedTask="{x:Null}" sap2010:WorkflowViewState.IdRef="AssignTask`1_5" TaskTitle="CDR Comparison Configuration">
            <vbw:AssignTask.AssignedTo>
              <InArgument x:TypeArguments="vbe:BPTaskAssignee">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskAssignee">new Vanrise.BusinessProcess.MainExtensions.InitiatorBPTaskAssignee()</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.AssignedTo>
            <vbw:AssignTask.TaskData>
              <InArgument x:TypeArguments="vbe:BPTaskData">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskData">new CDRComparisonConfigTaskData() { PartnerCDRSourceConfigId = Input.PartnerCDRSourceConfigId , SystemCDRSourceConfigId = Input.SystemCDRSourceConfigId }</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.TaskData>
            <vbw:AssignTask.TaskExecutionInformation>
              <OutArgument x:TypeArguments="cba:CDRComparisonConfigTaskExecutionInformation">
                <mca:CSharpReference x:TypeArguments="cba:CDRComparisonConfigTaskExecutionInformation">SaveConfig</mca:CSharpReference>
              </OutArgument>
            </vbw:AssignTask.TaskExecutionInformation>
          </vbw:AssignTask>
        </PickBranch.Trigger>
      </PickBranch>
      <PickBranch DisplayName="Branch2" sap2010:WorkflowViewState.IdRef="PickBranch_6">
        <PickBranch.Trigger>
          <Delay sap2010:WorkflowViewState.IdRef="Delay_3">
            <InArgument x:TypeArguments="x:TimeSpan">
              <mca:CSharpValue x:TypeArguments="x:TimeSpan">DelayDuration</mca:CSharpValue>
            </InArgument>
          </Delay>
        </PickBranch.Trigger>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
          <cba1:DeleteCDRTables sap2010:WorkflowViewState.IdRef="DeleteCDRTables_4">
            <cba1:DeleteCDRTables.TableKey>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
              </InArgument>
            </cba1:DeleteCDRTables.TableKey>
          </cba1:DeleteCDRTables>
          <cba1:ThrowTimeoutException sap2010:WorkflowViewState.IdRef="ThrowTimeoutException_3" />
        </Sequence>
      </PickBranch>
    </Pick>
    <cba1:DeleteCDRTables sap2010:WorkflowViewState.IdRef="DeleteCDRTables_1">
      <cba1:DeleteCDRTables.TableKey>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">TableKey</mca:CSharpValue>
        </InArgument>
      </cba1:DeleteCDRTables.TableKey>
    </cba1:DeleteCDRTables>
    <cba1:SaveCDRSourceConfigs sap2010:WorkflowViewState.IdRef="SaveCDRSourceConfigs_1">
      <cba1:SaveCDRSourceConfigs.PartnerCDRSource>
        <InArgument x:TypeArguments="ce:CDRSource">
          <mca:CSharpValue x:TypeArguments="ce:CDRSource">Input.PartnerCDRSource</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.PartnerCDRSource>
      <cba1:SaveCDRSourceConfigs.PartnerCDRSourceConfigId>
        <InArgument x:TypeArguments="s:Nullable(x:Int32)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(x:Int32)">Input.PartnerCDRSourceConfigId</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.PartnerCDRSourceConfigId>
      <cba1:SaveCDRSourceConfigs.PartnerCDRSourceConfigName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">SaveConfig.PartnerCDRSourceConfigName</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.PartnerCDRSourceConfigName>
      <cba1:SaveCDRSourceConfigs.SavePartnerCDRSourceConfig>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">SaveConfig.SavePartnerCDRSourceConfig</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.SavePartnerCDRSourceConfig>
      <cba1:SaveCDRSourceConfigs.SaveSystemCDRSourceConfig>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">SaveConfig.SaveSystemCDRSourceConfig</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.SaveSystemCDRSourceConfig>
      <cba1:SaveCDRSourceConfigs.SettingsTaskExecutionInfo>
        <InArgument x:TypeArguments="ce:SettingsTaskExecutionInfo">
          <mca:CSharpValue x:TypeArguments="ce:SettingsTaskExecutionInfo" xml:space="preserve">new Entities.SettingsTaskExecutionInfo()
{
    DurationMargin = ContinueExecution.DurationMargin,
    DurationMarginTimeUnit = ContinueExecution.DurationMarginTimeUnit,
    TimeMargin = ContinueExecution.TimeMargin,
    TimeMarginTimeUnit = ContinueExecution.TimeMarginTimeUnit,
    TimeOffset = ContinueExecution.TimeOffset,
    CompareCGPN = ContinueExecution.CompareCGPN
}</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.SettingsTaskExecutionInfo>
      <cba1:SaveCDRSourceConfigs.SystemCDRSource>
        <InArgument x:TypeArguments="ce:CDRSource">
          <mca:CSharpValue x:TypeArguments="ce:CDRSource">Input.SystemCDRSource</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.SystemCDRSource>
      <cba1:SaveCDRSourceConfigs.SystemCDRSourceConfigId>
        <InArgument x:TypeArguments="s:Nullable(x:Int32)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(x:Int32)">Input.SystemCDRSourceConfigId</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.SystemCDRSourceConfigId>
      <cba1:SaveCDRSourceConfigs.SystemCDRSourceConfigName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">SaveConfig.SystemCDRSourceConfigName</mca:CSharpValue>
        </InArgument>
      </cba1:SaveCDRSourceConfigs.SystemCDRSourceConfigName>
    </cba1:SaveCDRSourceConfigs>
    <sads:DebugSymbol.Symbol>dz9DOlxURlNcWGJvb3N0ZXJcQ29kZVxDRFJDb21wYXJpc29uLkJQXENEUkNvbXBhcmlzb25Qcm9jZXNzLnhhbWyPAUADjQUOAgEBSQtJmwECAQJVBVsdAwHyDlwFYhwDAeEOYwXEARADAcgMxQEF7gEMAwHvC+8BBfkDEAMB5gL6AwWjBAwDAY0CpAQFzQQMAwG0Ac4EBdQEHAMBowHVBAWLBSECARJYC1hgAwHzDl8LX1kDAeIOaAeXARIDAdsNmAEHsgEkAwGADbMBB8MBHAMByQzGAQfaARQDAZUM2wEH7QEUAwHwC/sBB4sCHgMBowuMAgfIAhoDAY8JyQIH4wIrAwGRCOQCB/QCIwMBxQf1AgePAzADAccGkAMHoAMoAwH7BaEDB7sDKwMB/QS8AwfMAyMDAbEEzQMH5wMrAwGzA+gDB/gDIwMB5wL7AwePBBQDAbMCkAQHogQUAwGOAqUEB7kEFAMB2gG6BAfMBBQDAbUB0QQL0QRRAwGkAYgFC4gFbQMBkwGDBQuDBXEDAYMB8QQL+QQUAgFz4gQL4gRuAgFj/gQL/gRiAgFT3QQL3QRyAgFD5wQL5wRvAgEz2AQL2ARjAgEj7AQL7ARuAgETaQl0EgMBvA51CYABGQMBlg6BAQmMARkDAfANjQEJlgESAwHcDaUBDaUBZwMByQ2bAQ2bAXIDAbcNqgENqgF8AwGlDaABDaABfAMBkw2vAQ2vAVMDAYENuwENuwF0AwHuDLYBDbYBfAMB3AzAAQ3AAVMDAcoMyAEL2AEcAwGWDN0BC+EBEwMBhAzjAQnsARQDAfELgwINgwJ2AwHWC/4BDf4BegMBvQuIAg2IAlMDAaQLoAINoAKAAQMBigu0Ag20Am4DAfEKmwINmwJ6AwHYCpQCDZYCQwMBvwqvAg2vAooBAwGmCsUCDcUCaQMBjQq5Ag25AnIDAfQJqgINqgKAAQMB2wm+Ag3AAj8DAcIJpQINpQKAAQMBqQmPAg2PAmkDAZAJ1gIN1gJqAwH2CMwCDcwCeAMB3QjbAg3bAnkDAcQI0QIN0QKDAQMBqwjgAg3gAlMDAZII7AIN7AJxAwH4B+cCDecCewMB3wfxAg3xAlMDAcYHggMNggNqAwGsB/gCDfgCggEDAZMHhwMNhwN+AwH6Bv0CDf0CiAEDAeEGjAMNjANTAwHIBpgDDZgDdgMBrgaTAw2TA4ABAwGVBp0DDZ0DUwMB/AWuAw2uA2oDAeIFpAMNpAN4AwHJBbMDDbMDeQMBsAWpAw2pA4MBAwGXBbgDDbgDUwMB/gTEAw3EA3EDAeQEvwMNvwN7AwHLBMkDDckDUwMBsgTaAw3aA2oDAZgE0AMN0AN4AwH/A98DDd8DeQMB5gPVAw3VA4MBAwHNA+QDDeQDUwMBtAPwAw3wA3EDAZoD6wMN6wN7AwGBA/UDDfUDUwMB6AL9AwuNBBwDAbQCkgQLlgQTAwGiApgECaEEFAMBjwKnBAu3BBwDAdsBvAQLwAQTAwHJAcIECcsEFAMBtgFxD3F0AwHPDmwPbHEDAb0OdWV1bAMBuw59D310AwGpDngPeGYDAZcOgQFlgQFrAwGVDokBD4kBdAMBgw6EAQ+EAWcDAfENlAE1lAE5AwHvDZABD5ABbwMB3Q3VARHVAYMBAwG4DNABEdABvQEDAagMyAGkAcgBvQEDAacMywERywGdAQMBlwzfAQ/fAVwDAYUM5AEL6gEiAwHzC+sBC+sBYwMB8guKBBGKBIoBAwHWAoUEEYUEiwEDAcYC/QOtAf0DxAEDAcUCgAQRgASdAQMBtQKUBA+UBFwDAaMCmQQLnwQiAwGRAqAEC6AEYwMBkAK0BBG0BIgBAwH9Aa8EEa8E7gEDAe0BpwSwAacEzgEDAewBqgQRqgSdAQMB3AG+BA++BFwDAcoBwwQLyQQiAwG4AcoEC8oEYwMBtwHnARHnAVcDAfQLnAQRnARXAwGSAsYEEcYEVwMBuQE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="SetDelayDuration_1" sap:VirtualizedContainerService.HintSize="636,22" />
      <sap2010:ViewStateData Id="CreateCDRTables_1" sap:VirtualizedContainerService.HintSize="636,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="LoadCDRs_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="LoadCDRs_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="264,412">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PrepareCDRsForDBApply_2" sap:VirtualizedContainerService.HintSize="200,412" />
      <sap2010:ViewStateData Id="ApplyCDRsToDB_2" sap:VirtualizedContainerService.HintSize="200,412" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="636,51" />
      <sap2010:ViewStateData Id="AssignTask`1_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="PickBranch_1" sap:VirtualizedContainerService.HintSize="230,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteCDRTables_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ThrowTimeoutException_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PickBranch_2" sap:VirtualizedContainerService.HintSize="252,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Pick_1" sap:VirtualizedContainerService.HintSize="636,512">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LoadOrderedCDRs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ProcessCDRs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareMissingCDRsForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyMissingCDRsToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PreparePartialMatchCDRsForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyPartialMatchCDRsToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareDisputeCDRsForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyDisputeCDRsToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareInvalidCDRsForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyInvalidCDRsToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="636,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssignTask`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="PickBranch_3" sap:VirtualizedContainerService.HintSize="230,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteCDRTables_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ThrowTimeoutException_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PickBranch_4" sap:VirtualizedContainerService.HintSize="252,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Pick_2" sap:VirtualizedContainerService.HintSize="636,512">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssignTask`1_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="PickBranch_5" sap:VirtualizedContainerService.HintSize="230,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DeleteCDRTables_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ThrowTimeoutException_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PickBranch_6" sap:VirtualizedContainerService.HintSize="252,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Pick_3" sap:VirtualizedContainerService.HintSize="636,512">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeleteCDRTables_1" sap:VirtualizedContainerService.HintSize="636,22" />
      <sap2010:ViewStateData Id="SaveCDRSourceConfigs_1" sap:VirtualizedContainerService.HintSize="636,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="658,2170">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CDRComparison.BP.CDRComparisonProcess_1" sap:VirtualizedContainerService.HintSize="698,2250">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>