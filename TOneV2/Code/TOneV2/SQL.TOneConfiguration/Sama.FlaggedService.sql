/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--Delete existing items generated manually or by Default Data script
Delete from [TOneWhS_BE].[ZoneServiceConfig]

--[TOneWhS_BE].[ZoneServiceConfig]----------------------------------------------------------------------------------------------------------------------------------------------------------------------set nocount on;set identity_insert [TOneWhS_BE].[ZoneServiceConfig] on;;with cte_data([ID],[Symbol],[Settings],[SourceID])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////(1,'WHS','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Wholesale","Color":"#C0C0C0","ParentId":2,"Description":"Wholesale Marker","Weight":1}','1'),(2,'RTL','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Retail","Color":"#0000FF","Description":"Retail Flagged Service","Weight":3}','3'),(3,'PRM','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Premium","Color":"#FFA500","Description":"Premium Quality Service","Weight":5}','5'),(4,'CLI','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"CLI","Color":"#FF0000","Description":"CLI Provided Service","Weight":9}','9'),(5,'DRC','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Direct","Color":"#00FF00","Description":"Direct Connection","Weight":17}','17'),(6,'TRS','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Transit","Color":"#FFFF00","Description":"Transit Connections (Like in Ministries)","Weight":33}','33'),(7,'VID','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Video","Color":"#800000","Description":"Video-Able Service","Weight":65}','65'),(8,'3GM','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"3GM Mobile Service","Color":"#000000","Description":"3rd Generation Mobile Able Service","Weight":129}','129')--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([ID],[Symbol],[Settings],[SourceID]))merge	[TOneWhS_BE].[ZoneServiceConfig] as tusing	cte_data as son		1=1 and t.[ID] = s.[ID]--when matched then--	update set--	[Symbol] = s.[Symbol],[Settings] = s.[Settings],[SourceID] = s.[SourceID]when not matched by target then	insert([ID],[Symbol],[Settings],[SourceID])	values(s.[ID],s.[Symbol],s.[Settings],s.[SourceID]);set identity_insert [TOneWhS_BE].[ZoneServiceConfig] off;