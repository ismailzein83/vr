/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--[sec].[Module]------------------------------1501 to 1600------------------------------------------------------
------------------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [sec].[Module] on;
;with cte_data([Id],[Name],[Url],[ParentId],[Icon],[Rank],[AllowDynamic])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(1501,'Analytics Management',null,1,null,40,0)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([Id],[Name],[Url],[ParentId],[Icon],[Rank],[AllowDynamic]))
merge	[sec].[Module] as t
using	cte_data as s
on		1=1 and t.[Id] = s.[Id]
when matched then
	update set
	[Name] = s.[Name],[Url] = s.[Url],[ParentId] = s.[ParentId],[Icon] = s.[Icon],[Rank] = s.[Rank],[AllowDynamic] = s.[AllowDynamic]
when not matched by target then
	insert([Id],[Name],[Url],[ParentId],[Icon],[Rank],[AllowDynamic])
	values(s.[Id],s.[Name],s.[Url],s.[ParentId],s.[Icon],s.[Rank],s.[AllowDynamic]);
set identity_insert [sec].[Module] off;

--[sec].[viewtype]------------------------------201 to 300------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Title],[Details])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(201,'VR_Analytic','Analytic','{"ViewTypeId":201,"Name":"VR_Analytic","Title":"Analytic","Editor":"/Client/Modules/Analytic/Views/GenericAnalytic/Definition/AnalyticReportSettingsEditor.html","EnableAdd":true}'),
(202,'VR_AnalyticReport','Analytic Report','{"ViewTypeId":201,"Name":"VR_Analytic","Title":"Analytic","Editor":"/Client/Modules/Analytic/Views/GenericAnalytic/Definition/AnalyticReportViewEditor.html","EnableAdd":true}')	
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Title],[Details]))
merge	[sec].[viewtype] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Title] = s.[Title],[Details] = s.[Details]
when not matched by target then
	insert([ID],[Name],[Title],[Details])
	values(s.[ID],s.[Name],s.[Title],s.[Details]);

--[sec].[View]-----------------------------15001 to 16000---------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [sec].[View] on;
;with cte_data([Id],[Name],[Title],[Url],[Module],[ActionNames],[Audience],[Content],[Settings],[Type],[Rank])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(15001,'Tables','Analytic Table Management','#/view/Analytic/Views/GenericAnalytic/Definition/AnalyticTableManagement',1501,null,null,null,null,0,1),
(15002,'Reports','Analytic Report Management','#/view/Analytic/Views/GenericAnalytic/Definition/AnalyticReportManagement',1501,null,null,null,null,0,2)

--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([Id],[Name],[Title],[Url],[Module],[ActionNames],[Audience],[Content],[Settings],[Type],[Rank]))
merge	[sec].[View] as t
using	cte_data as s
on		1=1 and t.[Id] = s.[Id]
when matched then
	update set
	[Name] = s.[Name],[Title] = s.[Title],[Url] = s.[Url],[Module] = s.[Module],[ActionNames] = s.[ActionNames],[Audience] = s.[Audience],[Content] = s.[Content],[Settings] = s.[Settings],[Type] = s.[Type],[Rank] = s.[Rank]
when not matched by target then
	insert([Id],[Name],[Title],[Url],[Module],[ActionNames],[Audience],[Content],[Settings],[Type],[Rank])
	values(s.[Id],s.[Name],s.[Title],s.[Url],s.[Module],s.[ActionNames],s.[Audience],s.[Content],s.[Settings],s.[Type],s.[Rank]);
set identity_insert [sec].[View] off;

--[common].[ExtensionConfiguration]-------------------1		to 1000----------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [common].[ExtensionConfiguration] on;
;with cte_data([ID],[Title],[ConfigType],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(1,'Grid','Analytic_AnalyticWidgetsSettings','{"Editor":"vr-analytic-widgets-grid-definition","RuntimeEditor":"vr-analytic-datagrid-analyticrecords"}'),
(3,'Top Chart','Analytic_AnalyticWidgetsSettings','{"Editor":"vr-analytic-widgets-chart-definition","RuntimeEditor":"vr-analytic-chart-toprecords"}'),
(4,'History','Analytic_AnalyticReportConfigType','{"Editor":"vr-analytic-analyticreport-history-definition","RuntimeEditor":"vr-analytic-analyticreport-history-runtime"}'),
(5,'Real Time','Analytic_AnalyticReportConfigType','{"Editor":"vr-analytic-analyticreport-realtime-definition","RuntimeEditor":"vr-analytic-analyticreport-realtime-runtime"}'),
(6,'Generic Search Settings','Analytic_AnalyticHistoryReportSettings','{"Editor":"vr-analytic-reportsearchsettings-genericsearch","RuntimeEditor":""}'),
(7,'Default Real Time Search','Analytic_RealTimeSearchSettings','{"Editor":"vr-analytic-analyticreport-realtime-searchsettings-defaultsearch","RuntimeEditor":""}'),
(8,'Real Time Chart','Analytic_RealTimeWidgetSettings','{"Editor":"vr-analytic-realtime-widgets-chart-definition","RuntimeEditor":"vr-analytic-realtime-chart-toprecords"}'),
(9,'Pie Chart','Analytic_AnalyticWidgetsSettings','{"Editor":"vr-analytic-widgets-piechart-definition","RuntimeEditor":"vr-analytic-piechart-toprecords"}'),
(10,'Time Variation','Analytic_RealTimeWidgetSettings','{"Editor":"vr-analytic-realtime-widgets-timevariation-definition","RuntimeEditor":"vr-analytic-realtime-chart-timevariation"}'),
(13,'Record Search','Analytic_AnalyticReportConfigType','{"Editor":"vr-analytic-analyticreport-recordsearch-definition","RuntimeEditor":"vr-analytic-analyticreport-recordsearch-runtime"}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Title],[ConfigType],[Settings]))
merge	[common].[ExtensionConfiguration] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Title] = s.[Title],[ConfigType] = s.[ConfigType],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Title],[ConfigType],[Settings])
	values(s.[ID],s.[Title],s.[ConfigType],s.[Settings]);
set identity_insert [common].[ExtensionConfiguration] off;

--[Analytic].[AnalyticTable]------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [Analytic].[AnalyticTable] on;
;with cte_data([ID],[Name],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(4,'Traffic Statistic','{"$type":"Vanrise.Analytic.Entities.AnalyticTableSettings, Vanrise.Analytic.Entities","ConnectionStringName":"TOneAnalyticsDBConnString","TableName":"[TOneWhS_Analytics].[TrafficStats15Min]","TimeColumnName":"BatchStart"}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Settings]))
merge	[Analytic].[AnalyticTable] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[Settings])
	values(s.[ID],s.[Name],s.[Settings]);
set identity_insert [Analytic].[AnalyticTable] off;

--[Analytic].[AnalyticItemConfig]-------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [Analytic].[AnalyticItemConfig] on;
;with cte_data([ID],[TableId],[ItemType],[Name],[Title],[Config])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(34,4,1,'Customer','Customer','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"CustomerID","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["CustomerProfile"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":2,"IsNullable":false,"ConfigId":9}}'),
(35,4,1,'SaleZone','Sale Zone','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"SaleZoneID","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Country","SellingNumberPlan"]},"RequiredParentDimension":"SellingNumberPlan","FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":4,"IsNullable":false,"ConfigId":9}}'),
(36,4,1,'Country','Country','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"CountryID","FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":16,"IsNullable":false,"ConfigId":9}}'),
(37,4,1,'OriginatingZone','Originating Zone','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"OriginatingZoneID","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Country","SellingNumberPlan"]},"RequiredParentDimension":"SellingNumberPlan","FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":4,"IsNullable":false,"ConfigId":9}}'),
(38,4,1,'Supplier','Supplier','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"SupplierId","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SupplierProfile"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":3,"IsNullable":false,"ConfigId":9}}'),
(39,4,1,'SupplierZone','Supplier Zone','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"SupplierZoneId","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Supplier","Country"]},"RequiredParentDimension":"Supplier","FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":17,"IsNullable":false,"ConfigId":9}}'),
(40,4,2,'DurationInMinutes','Duration (min)','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumDurationInSeconds\") / 60;","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumDurationInSeconds"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(41,4,2,'ACD','ACD','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"var successfulAttempts = context.GetAggregateValue(\"SumSuccessfulAttempts\");\nreturn successfulAttempts != 0 ? (context.GetAggregateValue(\"SumDurationInSeconds\") /60) / successfulAttempts : 0;","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumDurationInSeconds","SumSuccessfulAttempts"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(42,4,2,'PDDInSeconds','PDD (sec)','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"var sumSuccessfulAttempts = context.GetAggregateValue(\"SumSuccessfulAttempts\");\nreturn (Decimal)(sumSuccessfulAttempts >0 ? context.GetAggregateValue(\"SumOfPDDInSeconds\") / sumSuccessfulAttempts  :0);","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumOfPDDInSeconds"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(43,4,2,'MaxDurationInMinutes','Max Duration (min)','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"MaxDurationInSeconds\") / 60;","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["MaxDurationInSeconds"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(44,4,2,'LastAttempt','Last Attempt','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"MaxLastCDRAttempt\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["MaxLastCDRAttempt"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldDateTimeType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":3}}'),
(45,4,2,'SuccessfulAttempts','Successful Attempts','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumSuccessfulAttempts\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumSuccessfulAttempts"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":1,"IsNullable":false,"ConfigId":2}}'),
(46,4,2,'CeiledDurationInMinutes','Ceiled Duration (min)','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumCeiledDurationInSeconds\") / 60;","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumCeiledDurationInSeconds"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(47,4,2,'PGAD','PGAD','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"var sumSuccessfulAttempts = context.GetAggregateValue(\"SumSuccessfulAttempts\");\nreturn (Decimal)(sumSuccessfulAttempts >0 ? context.GetAggregateValue(\"SumOfPGADInSeconds\") / sumSuccessfulAttempts  :0);","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumOfPGADInSeconds"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(50,4,2,'Attempts','Attempts','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.IsGroupingDimensionIncluded(\"Supplier\")  || context.IsGroupingDimensionIncluded(\"PortOut\") || context.IsGroupingDimensionIncluded(\"GateWayOut\")  || context.IsFilterIncluded(\"Supplier\") || context.IsFilterIncluded(\"PortOut\") || context.IsFilterIncluded(\"GateWayOut\")? context.GetAggregateValue(\"SumAttempts\") : context.GetAggregateValue(\"SumNumberOfCalls\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumAttempts","SumNumberOfCalls"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":1,"IsNullable":false,"ConfigId":2}}'),
(114,4,1,'PortIn','Port In','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"PortIN","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["GatewayIn","GatewayOut"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":1}}'),
(115,4,1,'PortOut','Port Out','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"PortOUT","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["GatewayOut","GatewayIn"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":1}}'),
(117,4,2,'ABR','ABR','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.IsGroupingDimensionIncluded(\"Supplier\")  || context.IsGroupingDimensionIncluded(\"PortOut\") || context.IsGroupingDimensionIncluded(\"GateWayOut\")  || context.IsFilterIncluded(\"Supplier\") || context.IsFilterIncluded(\"PortOut\") || context.IsFilterIncluded(\"GateWayOut\") ? context.GetAggregateValue(\"SumSuccessfulAttempts\") * 100/ context.GetAggregateValue(\"SumAttempts\") : context.GetAggregateValue(\"SumSuccessfulAttempts\") * 100/ context.GetAggregateValue(\"SumNumberOfCalls\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumAttempts","SumSuccessfulAttempts","SumNumberOfCalls"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(118,4,2,'ASR','ASR','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.IsGroupingDimensionIncluded(\"Supplier\")  || context.IsGroupingDimensionIncluded(\"PortOut\") || context.IsGroupingDimensionIncluded(\"GateWayOut\")   || context.IsFilterIncluded(\"Supplier\") || context.IsFilterIncluded(\"PortOut\") || context.IsFilterIncluded(\"GateWayOut\")? context.GetAggregateValue(\"SumSuccessfulAttempts\") * 100/ context.GetAggregateValue(\"SumAttempts\") : context.GetAggregateValue(\"SumSuccessfulAttempts\") * 100/ context.GetAggregateValue(\"SumNumberOfCalls\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumAttempts","SumNumberOfCalls","SumSuccessfulAttempts"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(119,4,2,'FailedAttempts','Failed Attempts','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.IsGroupingDimensionIncluded(\"Supplier\")  || context.IsGroupingDimensionIncluded(\"PortOut\") || context.IsGroupingDimensionIncluded(\"GateWayOut\")   || context.IsFilterIncluded(\"Supplier\") || context.IsFilterIncluded(\"PortOut\") || context.IsFilterIncluded(\"GateWayOut\")  ? context.GetAggregateValue(\"SumAttempts\") - context.GetAggregateValue(\"SumSuccessfulAttempts\") : context.GetAggregateValue(\"SumNumberOfCalls\") - context.GetAggregateValue(\"SumSuccessfulAttempts\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumAttempts","SumNumberOfCalls","SumSuccessfulAttempts"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":1,"IsNullable":false,"ConfigId":2}}'),
(120,4,2,'NER','NER','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.IsGroupingDimensionIncluded(\"Supplier\")  || context.IsGroupingDimensionIncluded(\"PortOut\") || context.IsGroupingDimensionIncluded(\"GateWayOut\")   || context.IsFilterIncluded(\"Supplier\") || context.IsFilterIncluded(\"PortOut\") || context.IsFilterIncluded(\"GateWayOut\")? \ncontext.GetAggregateValue(\"SumDeliveredAttempts\") * 100/ context.GetAggregateValue(\"SumAttemptsNotNullSuppliers\") : context.GetAggregateValue(\"SumDeliveredNumberOfCalls\") * 100/ context.GetAggregateValue(\"SumNumberOfCallsNotNullSuppliers\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumDeliveredAttempts","SumDeliveredNumberOfCalls","CountSuppliersNull","SumAttemptsNotNullSuppliers","SumNumberOfCallsNotNullSuppliers"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(121,4,2,'NumberOfCalls','Number Of Calls','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumNumberOfCalls\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumNumberOfCalls"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(138,4,4,'MaxLastCDRAttempt','MaxLastCDRAttempt','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"LastCDRAttempt","AggregateType":3}'),
(139,4,4,'SumDurationInSeconds','SumDurationInSeconds','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"DurationInSeconds","AggregateType":2}'),
(140,4,4,'SumSuccessfulAttempts','SumSuccessfulAttempts','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"SuccessfulAttempts","AggregateType":2}'),
(141,4,4,'SumOfPDDInSeconds','SumOfPDDInSeconds','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"CASE WHEN NumberOfCalls > 0 THEN SumOfPDDInSeconds / NumberOfCalls ELSE 0 END","AggregateType":2}'),
(142,4,4,'MaxDurationInSeconds','MaxDurationInSeconds','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"DurationInSeconds","AggregateType":3}'),
(143,4,4,'SumCeiledDurationInSeconds','SumCeiledDurationInSeconds','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"CeiledDuration","AggregateType":2}'),
(144,4,4,'SumOfPGADInSeconds','SumOfPGADInSeconds','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"CASE WHEN [SuccessfulAttempts] > 0 THEN SumOfPGAD / [SuccessfulAttempts] ELSE 0 END","AggregateType":2}'),
(145,4,4,'SumAttempts','SumAttempts','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"Attempts","AggregateType":2}'),
(146,4,4,'SumNumberOfCalls','SumNumberOfCalls','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"NumberOfCalls","AggregateType":2}'),
(147,4,4,'SumDeliveredAttempts','SumDeliveredAttempts','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"DeliveredAttempts","AggregateType":2}'),
(148,4,4,'SumDeliveredNumberOfCalls','SumDeliveredNumberOfCalls','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"DeliveredNumberOfCalls","AggregateType":2}'),
(149,4,4,'SumPricedCalls','SumPricedCalls','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"PricedCalls","AggregateType":2}'),
(150,4,2,'PricedCalls','Priced Calls','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumPricedCalls\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumPricedCalls"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":1,"IsNullable":false,"ConfigId":2}}'),
(151,4,4,'SumSaleNet','SumSaleNet','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"SaleNet","AggregateType":2,"CurrencySQLColumnName":"SaleCurrencyID"}'),
(152,4,2,'SaleNet','Sale Net','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumSaleNet\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumSaleNet"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(153,4,4,'SumCostNet','SumCostNet','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"CostNet","AggregateType":2,"CurrencySQLColumnName":"CostCurrencyID"}'),
(154,4,2,'CostNet','Cost Net','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumCostNet\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumCostNet"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(155,4,2,'Profit','Profit','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"return context.GetAggregateValue(\"SumSaleNet\") - context.GetAggregateValue(\"SumCostNet\");","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumCostNet","SumSaleNet"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(156,4,2,'PercentageProfit','Profit %','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"var saleNet = context.GetAggregateValue(\"SumSaleNet\");\nif(saleNet != null)\n  return (saleNet - context.GetAggregateValue(\"SumCostNet\")) * 100 / saleNet;\nelse\n  return null;","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumCostNet","SumSaleNet"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(157,4,2,'MarkupPercentage','Markup %','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"var costNet = context.GetAggregateValue(\"SumCostNet\");\nif(costNet != null)\n   return (costNet - context.GetAggregateValue(\"SumSaleNet\")) * 100 / costNet;\nelse\n   return null;","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumCostNet","SumSaleNet"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(158,4,1,'SellingNumberPlan','Selling Number Plan','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"SellingNumberPlanID","FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":19,"IsNullable":false,"ConfigId":9}}'),
(159,4,1,'MasterZone','Master Zone','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"MasterPlanZoneID","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Country"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":25,"IsNullable":false,"ConfigId":9}}'),
(160,4,1,'OriginatingMasterZone','Originating Master Zone','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"MasterPlanOriginatingZoneID","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Country"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":4,"IsNullable":false,"ConfigId":9}}'),
(161,4,1,'DayHour','Day Hour','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"CONVERT(datetime, CONVERT(varchar(13), BatchStart, 121) + '':00'')","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Day"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldDateTimeType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":3}}'),
(162,4,1,'Day','Day','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"CONVERT(datetime, CONVERT(varchar(10), BatchStart, 121))","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["YearWeek"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldDateTimeType, Vanrise.GenericData.MainExtensions","DataType":2,"IsNullable":false,"ConfigId":3}}'),
(163,4,1,'GatewayIn','Gateway In','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","GetValueMethod":"var portIn = context.GetDimensionValue(\"PortIn\");\nif(!String.IsNullOrEmpty(portIn))\n{\n     var switchConnectivity = (new TOne.WhS.BusinessEntity.Business.SwitchConnectivityManager()).GetMatchConnectivity(portIn);\n     if(switchConnectivity != null)\n          return switchConnectivity.SwitchConnectivityId;\n}\n   return null;","DependentDimensions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["PortIn"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":22,"IsNullable":false,"ConfigId":9}}'),
(165,4,1,'GatewayOut','Gateway Out','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","GetValueMethod":"var portOut = context.GetDimensionValue(\"PortOut\");\nif(!String.IsNullOrEmpty(portOut ))\n{\n       var switchConnectivity = (new TOne.WhS.BusinessEntity.Business.SwitchConnectivityManager()).GetMatchConnectivity(portOut);\n     if(switchConnectivity != null)\n          return switchConnectivity.SwitchConnectivityId;\n}\n   return null;","DependentDimensions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["PortOut"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":22,"IsNullable":false,"ConfigId":9}}'),
(166,4,1,'SupplierProfile','Supplier Profile','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","GetValueMethod":"var supplierAccountId = context.GetDimensionValue(\"Supplier\");\nif(supplierAccountId != null)\n {\n    var account= (new TOne.WhS.BusinessEntity.Business.CarrierAccountManager()).GetCarrierAccount(supplierAccountId);\nreturn account.CarrierProfileId;\n}\nelse\n return null;","DependentDimensions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Supplier"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":1,"IsNullable":false,"ConfigId":9}}'),
(167,4,1,'Switch','Switch','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"SwitchID","FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":23,"IsNullable":false,"ConfigId":9}}'),
(168,4,4,'CountSuppliersNull','CountSuppliersNull','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"CASE WHEN SupplierID IS NULL THEN 1 ELSE 0 END","AggregateType":2}'),
(177,4,1,'CustomerProfile','Customer Profile','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","GetValueMethod":"var customerAccountId = context.GetDimensionValue(\"Customer\");\nif(customerAccountId != null)\n {\n    var account= (new TOne.WhS.BusinessEntity.Business.CarrierAccountManager()).GetCarrierAccount(customerAccountId );\nreturn account.CarrierProfileId;\n}\nelse\n return null;","DependentDimensions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Customer"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldBusinessEntityType, Vanrise.GenericData.MainExtensions","BusinessEntityDefinitionId":1,"IsNullable":false,"ConfigId":9}}'),
(183,4,1,'YearWeek','Week','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"''Week '' + RIGHT(''00'' + CONVERT(VARCHAR, DATEPART(wk, BatchStart)), 2) + '' '' +CONVERT(VARCHAR, DATEPART(YYYY, BatchStart))","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Month"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":1}}'),
(186,4,1,'Month','Month','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"CONVERT(VARCHAR(7), BatchStart, 120)","FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":1}}'),
(188,4,2,'PercGrayArea','% Gray Area','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"var supplierIds = context.GetAllDimensionValues(\"Supplier\");\nvar customerIds = context.GetAllDimensionValues(\"Customer\");\nvar allAccountIds = new System.Collections.Generic.List<dynamic>(supplierIds);\nallAccountIds.AddRange(customerIds);\nvar nominalCapacity = (new TOne.WhS.BusinessEntity.Business.CarrierAccountManager()).GetAccountsTotalNominalCapacity(allAccountIds.Select(itm => (int)itm));\nint periodLengthInMinutes = (int)(context.GetAggregateValue(\"MaxLastCDRAttempt\") - context.GetAggregateValue(\"MinBatchStart\")).TotalMinutes;\n/*if(context.IsGroupingDimensionIncluded(\"DayHour\"))\n    periodLengthInMinutes = 60;\t\nelse if(context.IsGroupingDimensionIncluded(\"Day\"))\n    periodLengthInMinutes = 24 * 60;\nelse if(context.IsGroupingDimensionIncluded(\"YearWeek\"))\n    periodLengthInMinutes = 7 * 24 * 60;\nelse if(context.IsGroupingDimensionIncluded(\"Month\"))\n    periodLengthInMinutes = 30 * 24 * 60;\nelse periodLengthInMinutes = (int)(context.GetQueryToTime() - context.GetQueryFromTime()).TotalMinutes;*/\nvar durationInMinutes = context.GetAggregateValue(\"SumDurationInSeconds\") / 60;\nvar utilisationInMinutes = context.GetAggregateValue(\"SumUtilizationInSeconds\") / 60;\nvar period = nominalCapacity * periodLengthInMinutes * 30;\nreturn (Decimal)(period != 0 ? (utilisationInMinutes - durationInMinutes) * 100 / period : 0);","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumDurationInSeconds","SumUtilizationInSeconds","MaxLastCDRAttempt","MinBatchStart"]},"DependentDimensions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Supplier","Customer"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(191,4,4,'SumUtilizationInSeconds','SumUtilizationInSeconds','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"UtilizationInSeconds","AggregateType":2}'),
(192,4,2,'PercGreenArea','% Green Area','{"$type":"Vanrise.Analytic.Entities.AnalyticMeasureConfig, Vanrise.Analytic.Entities","GetValueMethod":"var supplierIds = context.GetAllDimensionValues(\"Supplier\");\nvar customerIds = context.GetAllDimensionValues(\"Customer\");\nvar allAccountIds = new System.Collections.Generic.List<dynamic>(supplierIds);\nallAccountIds.AddRange(customerIds);\nvar nominalCapacity = (new TOne.WhS.BusinessEntity.Business.CarrierAccountManager()).GetAccountsTotalNominalCapacity(allAccountIds.Select(itm => (int)itm));\nint periodLengthInMinutes = (int)(context.GetAggregateValue(\"MaxLastCDRAttempt\") - context.GetAggregateValue(\"MinBatchStart\")).TotalMinutes;\n/*if(context.IsGroupingDimensionIncluded(\"DayHour\"))\n    periodLengthInMinutes = 60;\t\nelse if(context.IsGroupingDimensionIncluded(\"Day\"))\n    periodLengthInMinutes = 24 * 60;\nelse if(context.IsGroupingDimensionIncluded(\"YearWeek\"))\n    periodLengthInMinutes = 7 * 24 * 60;\nelse if(context.IsGroupingDimensionIncluded(\"Month\"))\n    periodLengthInMinutes = 30 * 24 * 60;\nelse periodLengthInMinutes = (int)(context.GetQueryToTime() - context.GetQueryFromTime()).TotalMinutes;*/\nvar durationInMinutes = context.GetAggregateValue(\"SumDurationInSeconds\") / 60;\nvar period = nominalCapacity * periodLengthInMinutes * 30;\nreturn (Decimal)(period != 0 ? durationInMinutes * 100 / period : 0);","DependentAggregateNames":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["SumDurationInSeconds","MaxLastCDRAttempt","MinBatchStart"]},"DependentDimensions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Customer","Supplier"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":0,"IsNullable":false,"ConfigId":2}}'),
(193,4,4,'MinBatchStart','MinBatchStart','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"BatchStart","AggregateType":4}'),
(194,4,4,'SumAttemptsNotNullSuppliers','Attempts Not Null Suppliers','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"Case when SupplierId is null then 0 else Attempts end","AggregateType":2}'),
(195,4,4,'SumNumberOfCallsNotNullSuppliers','Number of Calls Not Null Suppliers','{"$type":"Vanrise.Analytic.Entities.AnalyticAggregateConfig, Vanrise.Analytic.Entities","SQLColumn":"Case when SupplierId is null then 0 else NumberOfCalls end","AggregateType":2}'),
(196,4,1,'Hour','Hour','{"$type":"Vanrise.Analytic.Entities.AnalyticDimensionConfig, Vanrise.Analytic.Entities","SQLExpression":"DATEPART(HOUR, BatchStart)","Parents":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Day"]},"FieldType":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","DataType":1,"IsNullable":false,"ConfigId":2,"OrderType":0}}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[TableId],[ItemType],[Name],[Title],[Config]))
merge	[Analytic].[AnalyticItemConfig] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[TableId] = s.[TableId],[ItemType] = s.[ItemType],[Name] = s.[Name],[Title] = s.[Title],[Config] = s.[Config]
when not matched by target then
	insert([ID],[TableId],[ItemType],[Name],[Title],[Config])
	values(s.[ID],s.[TableId],s.[ItemType],s.[Name],s.[Title],s.[Config]);
set identity_insert [Analytic].[AnalyticItemConfig] off;

--[Analytic].[AnalyticReport]-----------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [Analytic].[AnalyticReport] on;
;with cte_data([ID],[UserID],[Name],[AccessType],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(30,1,'Traffic Monitor',0,'{"$type":"Vanrise.Analytic.Entities.AnalyticHistoryReportSettings, Vanrise.Analytic.Entities","AnalyticTableIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[4]},"SearchSettings":{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettings, Vanrise.Analytic.MainExtensions","IsRequiredGroupingDimensions":true,"ShowCurrency":false,"GroupingDimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"MasterZone","IsSelected":true},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Customer","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Supplier","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Country","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Switch","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayIn","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayOut","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortIn","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortOut","IsSelected":false}]},"ConfigId":6},"Widgets":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.AnalyticHistoryReportWidget, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidget, Vanrise.Analytic.MainExtensions","Dimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Country","Title":"Country"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Customer","Title":"Customer"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayIn","Title":"Gateway In"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayOut","Title":"Gateway Out"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"MasterZone","Title":"Master Zone"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortIn","Title":"Port In"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortOut","Title":"Port Out"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Supplier","Title":"Supplier"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Switch","Title":"Switch"}]},"Measures":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"Attempts","Title":"Attempts"}]},"OrderType":2,"TopRecords":10,"ChartType":"column","ConfigId":3,"AnalyticTableId":4,"WidgetTitle":"Top Attempts","ColumnWidth":2,"ShowTitle":true},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidget, Vanrise.Analytic.MainExtensions","Dimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Country","Title":"Country"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Customer","Title":"Customer"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayIn","Title":"Gateway In"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayOut","Title":"Gateway Out"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"MasterZone","Title":"Master Zone"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortIn","Title":"Port In"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortOut","Title":"Port Out"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Supplier","Title":"Supplier"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Switch","Title":"Switch"}]},"Measures":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"DurationInMinutes","Title":"Duration (min)"}]},"OrderType":2,"TopRecords":10,"ChartType":"column","ConfigId":3,"AnalyticTableId":4,"WidgetTitle":"Top Durations","ColumnWidth":2,"ShowTitle":true},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidget, Vanrise.Analytic.MainExtensions","RootDimensionsFromSearchSection":true,"Dimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"MasterZone","Title":"Master Zone","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"SupplierZone","Title":"Supplier Zone","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Customer","Title":"Customer","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Supplier","Title":"Supplier","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Country","Title":"Country","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Switch","Title":"Switch","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayIn","Title":"Gateway In","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"GatewayOut","Title":"Gateway Out","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortIn","Title":"Port In","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"PortOut","Title":"Port Out","IsRootDimension":false}]},"Measures":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"Attempts","Title":"Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"SuccessfulAttempts","Title":"Successful Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"FailedAttempts","Title":"Failed Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"DurationInMinutes","Title":"Duration (min)"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"CeiledDurationInMinutes","Title":"Ceiled Duration (min)"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ABR","Title":"ABR"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ASR","Title":"ASR"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ACD","Title":"ACD"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"NER","Title":"NER"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"PDDInSeconds","Title":"PDD (sec)"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"PGAD","Title":"PGAD"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"MaxDurationInMinutes","Title":"Max Duration (min)"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"LastAttempt","Title":"Last Attempt"}]},"MeasureStyleRules":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.MeasureStyleRule, Vanrise.Analytic.Entities]], mscorlib","$values":[]},"OrderType":1,"WithSummary":true,"ConfigId":1,"AnalyticTableId":4,"WidgetTitle":"Report","ColumnWidth":1,"ShowTitle":false}]},"ConfigId":4}'),
(33,1,'Traffic Summary',0,'{"$type":"Vanrise.Analytic.Entities.AnalyticHistoryReportSettings, Vanrise.Analytic.Entities","AnalyticTableIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[4]},"SearchSettings":{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettings, Vanrise.Analytic.MainExtensions","IsRequiredGroupingDimensions":true,"ShowCurrency":false,"GroupingDimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"MasterZone","IsSelected":true},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Customer","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Supplier","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"CustomerProfile","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"SupplierProfile","IsSelected":false}]},"ConfigId":6},"Widgets":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.AnalyticHistoryReportWidget, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidget, Vanrise.Analytic.MainExtensions","RootDimensionsFromSearchSection":true,"Dimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"MasterZone","Title":"Master Zone","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Customer","Title":"Customer","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Supplier","Title":"Supplier","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"CustomerProfile","Title":"Customer Profile","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"SupplierProfile","Title":"Supplier Profile","IsRootDimension":false}]},"Measures":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"Attempts","Title":"Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"SuccessfulAttempts","Title":"Successful Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"DurationInMinutes","Title":"Duration (min)"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ASR","Title":"ASR"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ACD","Title":"ACD"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"NER","Title":"NER"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"PDDInSeconds","Title":"PDD (sec)"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"PricedCalls","Title":"Priced Calls"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"SaleNet","Title":"Sale Amount"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"CostNet","Title":"Cost Amount"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"Profit","Title":"Profit"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"PercentageProfit","Title":"Profit %"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"MarkupPercentage","Title":"Markup %"}]},"OrderType":1,"WithSummary":true,"ConfigId":1,"AnalyticTableId":4,"WidgetTitle":"Traffic Summary","ColumnWidth":1,"ShowTitle":false}]},"ConfigId":4}'),
(35,1,'Traffic By Period',0,'{"$type":"Vanrise.Analytic.Entities.AnalyticHistoryReportSettings, Vanrise.Analytic.Entities","AnalyticTableIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[4]},"SearchSettings":{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettings, Vanrise.Analytic.MainExtensions","IsRequiredGroupingDimensions":true,"ShowCurrency":false,"GroupingDimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Hour","IsSelected":true},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Day","IsSelected":true},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"YearWeek","IsSelected":false},{"$type":"Vanrise.Analytic.MainExtensions.History.SearchSettings.GenericSearchSettingsDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Month","IsSelected":false}]},"ConfigId":6},"Widgets":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.AnalyticHistoryReportWidget, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidget, Vanrise.Analytic.MainExtensions","Dimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Month","Title":"Month"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"YearWeek","Title":"Week"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Day","Title":"Day"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Hour","Title":"Hour"}]},"Measures":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"Attempts","Title":"Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"DurationInMinutes","Title":"Duration (min)"}]},"OrderType":1,"ChartType":"line","ConfigId":3,"AnalyticTableId":4,"WidgetTitle":"Volume Variation Graph","ColumnWidth":1,"ShowTitle":true},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidget, Vanrise.Analytic.MainExtensions","Dimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Month","Title":"Month"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"YearWeek","Title":"Week"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Day","Title":"Day"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Hour","Title":"Hour"}]},"Measures":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ACD","Title":"ACD"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticChartWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ASR","Title":"ASR"}]},"OrderType":1,"ChartType":"line","ConfigId":3,"AnalyticTableId":4,"WidgetTitle":"Quality Variation Graph","ColumnWidth":1,"ShowTitle":true},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidget, Vanrise.Analytic.MainExtensions","RootDimensionsFromSearchSection":true,"Dimensions":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Month","Title":"Month","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"YearWeek","Title":"Week","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Day","Title":"Day","IsRootDimension":false},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetDimension, Vanrise.Analytic.MainExtensions","DimensionName":"Hour","Title":"Hour","IsRootDimension":false}]},"Measures":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"Attempts","Title":"Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"SuccessfulAttempts","Title":"Successful Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ASR","Title":"ASR"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"NER","Title":"NER"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"ACD","Title":"ACD"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"FailedAttempts","Title":"Failed Attempts"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"DurationInMinutes","Title":"Duration (min)"},{"$type":"Vanrise.Analytic.MainExtensions.History.Widgets.AnalyticGridWidgetMeasure, Vanrise.Analytic.MainExtensions","MeasureName":"LastAttempt","Title":"Last Attempt"}]},"OrderType":1,"WithSummary":true,"ConfigId":1,"AnalyticTableId":4,"WidgetTitle":"Report","ColumnWidth":1,"ShowTitle":false}]},"ConfigId":4}'),
(37,1,'CDR Report',0,'{"$type":"Vanrise.Analytic.Entities.DataRecordSearchPageSettings, Vanrise.Analytic.Entities","Sources":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.DRSearchPageStorageSource, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.Entities.DRSearchPageStorageSource, Vanrise.Analytic.Entities","Title":"All CDRs","DataRecordTypeId":43,"RecordStorageIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[45,46,48]},"GridColumns":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SwitchId","FieldTitle":"Switch"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SaleZoneId","FieldTitle":"Sale Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OriginatingZoneId","FieldTitle":"Originating Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"AttemptDateTime","FieldTitle":"Attempt Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CustomerId","FieldTitle":"Customer"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CGPN","FieldTitle":"CGPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPN","FieldTitle":"CDPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPNOut","FieldTitle":"CDPN Out"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"DurationInSeconds","FieldTitle":"Duration in Seconds"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseCode","FieldTitle":"Release Code"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseSource","FieldTitle":"Release Source"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierId","FieldTitle":"Supplier"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierZoneId","FieldTitle":"Supplier Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"IsRerouted","FieldTitle":"Rerouted"}]}},{"$type":"Vanrise.Analytic.Entities.DRSearchPageStorageSource, Vanrise.Analytic.Entities","Title":"Main CDRs","DataRecordTypeId":43,"RecordStorageIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[45]},"GridColumns":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SwitchId","FieldTitle":"Switch"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SaleZoneId","FieldTitle":"Sale Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OriginatingZoneId","FieldTitle":"Originating Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"AttemptDateTime","FieldTitle":"Attempt Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CustomerId","FieldTitle":"Customer"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CGPN","FieldTitle":"CGPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPN","FieldTitle":"CDPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPNOut","FieldTitle":"CDPN Out"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"DurationInSeconds","FieldTitle":"Duration in Seconds"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseCode","FieldTitle":"Release Code"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseSource","FieldTitle":"Release Source"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierId","FieldTitle":"Supplier"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierZoneId","FieldTitle":"Supplier Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"IsRerouted","FieldTitle":"Rerouted"}]}},{"$type":"Vanrise.Analytic.Entities.DRSearchPageStorageSource, Vanrise.Analytic.Entities","Title":"Failed CDRs","DataRecordTypeId":43,"RecordStorageIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[48]},"GridColumns":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SwitchId","FieldTitle":"Switch"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SaleZoneId","FieldTitle":"Sale Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OriginatingZoneId","FieldTitle":"Originating Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"AttemptDateTime","FieldTitle":"Attempt Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CGPN","FieldTitle":"CGPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPN","FieldTitle":"CDPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPNOut","FieldTitle":"CDPN Out"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CustomerId","FieldTitle":"Customer"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"DurationInSeconds","FieldTitle":"Duration in Seconds"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseCode","FieldTitle":"Release Code"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseSource","FieldTitle":"Release Source"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierId","FieldTitle":"Supplier"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierZoneId","FieldTitle":"Supplier Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"IsRerouted","FieldTitle":"Rerouted"}]}},{"$type":"Vanrise.Analytic.Entities.DRSearchPageStorageSource, Vanrise.Analytic.Entities","Title":"Invalid CDRs","DataRecordTypeId":43,"RecordStorageIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[46]},"GridColumns":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SwitchId","FieldTitle":"Switch"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SaleZoneId","FieldTitle":"Sale Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OriginatingZoneId","FieldTitle":"Originating Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"AttemptDateTime","FieldTitle":"Attempt Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CGPN","FieldTitle":"CGPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPN","FieldTitle":"CDPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPNOut","FieldTitle":"CDPN Out"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CustomerId","FieldTitle":"Customer"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"DurationInSeconds","FieldTitle":"Duration in Seconds"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseCode","FieldTitle":"Release Code"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ReleaseSource","FieldTitle":"Release Source"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierId","FieldTitle":"Supplier"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SupplierZoneId","FieldTitle":"Supplier Zone"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"IsRerouted","FieldTitle":"Rerouted"}]}},{"$type":"Vanrise.Analytic.Entities.DRSearchPageStorageSource, Vanrise.Analytic.Entities","Title":"Raw CDR Log","DataRecordTypeId":42,"RecordStorageIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[44]},"GridColumns":{"$type":"System.Collections.Generic.List`1[[Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities]], mscorlib","$values":[{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"SwitchId","FieldTitle":"Switch"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"IDonSwitch","FieldTitle":"ID on Switch"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"Tag","FieldTitle":"Tag"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"AttemptDateTime","FieldTitle":"Attempt Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"AlertDateTime","FieldTitle":"Alert Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"ConnectDateTime","FieldTitle":"Connect Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"DisconnectDateTime","FieldTitle":"Disconnect Time"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"DurationInSeconds","FieldTitle":"Duration in Seconds"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"InTrunk","FieldTitle":"In Trunk"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"InCircuit","FieldTitle":"In Circuit"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"InCarrier","FieldTitle":"In Carrier"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"InIP","FieldTitle":"In IP"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OutTrunk","FieldTitle":"Out Trunk"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OutCircuit","FieldTitle":"Out Circuit"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OutCarrier","FieldTitle":"Out Carrier"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"OutIP","FieldTitle":"Out IP"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CGPN","FieldTitle":"CGPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPN","FieldTitle":"CDPN"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CDPNOut","FieldTitle":"CDPN Out"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CauseFromReleaseCode","FieldTitle":"Cause from Release Code"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CauseFrom","FieldTitle":"Cause From"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CauseToReleaseCode","FieldTitle":"Cause to Release Code"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"CauseTo","FieldTitle":"Cause to"},{"$type":"Vanrise.Analytic.Entities.DRSearchPageGridColumn, Vanrise.Analytic.Entities","FieldName":"IsRerouted","FieldTitle":"Rerouted"}]}}]},"NumberOfRecords":100,"ConfigId":13}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[UserID],[Name],[AccessType],[Settings]))
merge	[Analytic].[AnalyticReport] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[UserID] = s.[UserID],[Name] = s.[Name],[AccessType] = s.[AccessType],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[UserID],[Name],[AccessType],[Settings])
	values(s.[ID],s.[UserID],s.[Name],s.[AccessType],s.[Settings]);
set identity_insert [Analytic].[AnalyticReport] off;