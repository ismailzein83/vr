/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--[genericdata].[DataRecordType]--------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[ParentID],[Fields],[ExtraFieldsEvaluator],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('599C4585-9C16-4D33-B688-8339AAFA036E','NokiaSiemens_WHS_CDR',null,'{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities]], mscorlib","$values":[{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"Id","Title":"Id","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","ConfigId":"75aef329-27bd-4108-b617-f5cc05ff2aa3","ViewerEditor":"vr-genericdata-fieldtype-number-viewereditor","RuntimeEditor":"vr-genericdata-fieldtype-number-runtimeeditor","DataPrecision":0,"DataType":2,"IsNullable":false,"CanRoundValue":true,"DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","OrderType":0,"StoreValueSerialized":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"BeginDate","Title":"Begin Date","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldDateTimeType, Vanrise.GenericData.MainExtensions","ConfigId":"b8712417-83ab-4d4b-9ee1-109d20ceb909","DataType":0,"IsNullable":true,"ViewerEditor":"vr-genericdata-fieldtype-datetime-viewereditor","DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","OrderType":0,"StoreValueSerialized":false,"CanRoundValue":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"EndDate","Title":"End Date","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldDateTimeType, Vanrise.GenericData.MainExtensions","ConfigId":"b8712417-83ab-4d4b-9ee1-109d20ceb909","DataType":0,"IsNullable":true,"ViewerEditor":"vr-genericdata-fieldtype-datetime-viewereditor","DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","OrderType":0,"StoreValueSerialized":false,"CanRoundValue":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"DurationInSeconds","Title":"Duration In Seconds","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","ConfigId":"75aef329-27bd-4108-b617-f5cc05ff2aa3","ViewerEditor":"vr-genericdata-fieldtype-number-viewereditor","RuntimeEditor":"vr-genericdata-fieldtype-number-runtimeeditor","DataPrecision":0,"DataType":1,"IsNullable":true,"CanRoundValue":true,"DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","OrderType":0,"StoreValueSerialized":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"CallingPartyNumber","Title":"Calling Party Number","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":"3f29315e-b542-43b8-9618-7de216cd9653","RuntimeEditor":"vr-genericdata-fieldtype-text-runtimeeditor","OrderType":1,"ViewerEditor":"vr-genericdata-fieldtype-text-viewereditor","DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","StoreValueSerialized":false,"CanRoundValue":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"CalledPartyNumber","Title":"Called Party Number","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":"3f29315e-b542-43b8-9618-7de216cd9653","RuntimeEditor":"vr-genericdata-fieldtype-text-runtimeeditor","OrderType":1,"ViewerEditor":"vr-genericdata-fieldtype-text-viewereditor","DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","StoreValueSerialized":false,"CanRoundValue":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"IncomingTrunkGroupNumber","Title":"Incoming Trunk Group Number","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":"3f29315e-b542-43b8-9618-7de216cd9653","RuntimeEditor":"vr-genericdata-fieldtype-text-runtimeeditor","OrderType":1,"ViewerEditor":"vr-genericdata-fieldtype-text-viewereditor","DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","StoreValueSerialized":false,"CanRoundValue":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"IncomingTrunkNumber","Title":"Incoming Trunk Number","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","ConfigId":"75aef329-27bd-4108-b617-f5cc05ff2aa3","ViewerEditor":"vr-genericdata-fieldtype-number-viewereditor","RuntimeEditor":"vr-genericdata-fieldtype-number-runtimeeditor","DataPrecision":0,"DataType":1,"IsNullable":true,"CanRoundValue":true,"DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","OrderType":0,"StoreValueSerialized":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"OutgoingTrunkGroupNumber","Title":"Outgoing Trunk Group Number","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":"3f29315e-b542-43b8-9618-7de216cd9653","RuntimeEditor":"vr-genericdata-fieldtype-text-runtimeeditor","OrderType":1,"ViewerEditor":"vr-genericdata-fieldtype-text-viewereditor","DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","StoreValueSerialized":false,"CanRoundValue":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"OutgoingTrunkNumber","Title":"Outgoing Trunk Number","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","ConfigId":"75aef329-27bd-4108-b617-f5cc05ff2aa3","ViewerEditor":"vr-genericdata-fieldtype-number-viewereditor","RuntimeEditor":"vr-genericdata-fieldtype-number-runtimeeditor","DataPrecision":0,"DataType":1,"IsNullable":true,"CanRoundValue":true,"DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","OrderType":0,"StoreValueSerialized":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"CauseValue","Title":"Cause Value","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldNumberType, Vanrise.GenericData.MainExtensions","ConfigId":"75aef329-27bd-4108-b617-f5cc05ff2aa3","ViewerEditor":"vr-genericdata-fieldtype-number-viewereditor","RuntimeEditor":"vr-genericdata-fieldtype-number-runtimeeditor","DataPrecision":0,"DataType":1,"IsNullable":true,"CanRoundValue":true,"DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","OrderType":0,"StoreValueSerialized":false}},{"$type":"Vanrise.GenericData.Entities.DataRecordField, Vanrise.GenericData.Entities","Name":"Zone","Title":"Zone","Type":{"$type":"Vanrise.GenericData.MainExtensions.DataRecordFields.FieldTextType, Vanrise.GenericData.MainExtensions","ConfigId":"3f29315e-b542-43b8-9618-7de216cd9653","RuntimeEditor":"vr-genericdata-fieldtype-text-runtimeeditor","OrderType":1,"ViewerEditor":"vr-genericdata-fieldtype-text-viewereditor","DetailViewerEditor":"vr-genericdata-datarecordfield-defaultdetailviewer","StoreValueSerialized":false,"CanRoundValue":false}}]}',null,'{"$type":"Vanrise.GenericData.Entities.DataRecordTypeSettings, Vanrise.GenericData.Entities","DateTimeField":"BeginDate","IdField":"Id"}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[ParentID],[Fields],[ExtraFieldsEvaluator],[Settings]))
merge	[genericdata].[DataRecordType] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[ParentID] = s.[ParentID],[Fields] = s.[Fields],[ExtraFieldsEvaluator] = s.[ExtraFieldsEvaluator],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[ParentID],[Fields],[ExtraFieldsEvaluator],[Settings])
	values(s.[ID],s.[Name],s.[ParentID],s.[Fields],s.[ExtraFieldsEvaluator],s.[Settings]);


--[genericdata].[DataRecordStorage]-----------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[DataRecordTypeID],[DataStoreID],[Settings],[State])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('35FB043F-5AD5-450A-827B-3968800C1AA2','Nokia Siemens CDR Record Storage','599C4585-9C16-4D33-B688-8339AAFA036E','DAFC9E00-12C6-48E5-95DB-F2FA073D131A','{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageSettings, Vanrise.GenericData.SQLDataStorage","TableName":"NokiaSiemensCDR","TableSchema":"Mediation_WHS","Columns":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage]], mscorlib","$values":[{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"Id","SQLDataType":"bigint","ValueExpression":"Id","IsUnique":true},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"BeginDate","SQLDataType":"datetime","ValueExpression":"BeginDate","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"EndDate","SQLDataType":"datetime","ValueExpression":"EndDate","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"DurationInSeconds","SQLDataType":"int","ValueExpression":"DurationInSeconds","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"CallingPartyNumber","SQLDataType":"varchar(50)","ValueExpression":"CallingPartyNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"CalledPartyNumber","SQLDataType":"varchar(50)","ValueExpression":"CalledPartyNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"IncomingTrunkGroupNumber","SQLDataType":"varchar(50)","ValueExpression":"IncomingTrunkGroupNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"IncomingTrunkNumber","SQLDataType":"int","ValueExpression":"IncomingTrunkNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"OutgoingTrunkGroupNumber","SQLDataType":"varchar(50)","ValueExpression":"OutgoingTrunkGroupNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"OutgoingTrunkNumber","SQLDataType":"int","ValueExpression":"OutgoingTrunkNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"CauseValue","SQLDataType":"int","ValueExpression":"CauseValue","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"Zone","SQLDataType":"varchar(50)","ValueExpression":"Zone","IsUnique":false}]},"NullableFields":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.SQLDataStorage.NullableField, Vanrise.GenericData.SQLDataStorage]], mscorlib","$values":[]},"IncludeQueueItemId":false,"DateTimeField":"BeginDate","EnableUseCaching":false,"RequiredPermission":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}',null),
('FAD79450-244E-464B-8A69-8B030EBCC975','Nokia Siemens Bad CDR Record Storage','599C4585-9C16-4D33-B688-8339AAFA036E','DAFC9E00-12C6-48E5-95DB-F2FA073D131A','{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageSettings, Vanrise.GenericData.SQLDataStorage","TableName":"NokiaSiemensBadCDR","TableSchema":"Mediation_WHS","Columns":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage]], mscorlib","$values":[{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"Id","SQLDataType":"bigint","ValueExpression":"Id","IsUnique":true},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"BeginDate","SQLDataType":"datetime","ValueExpression":"BeginDate","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"EndDate","SQLDataType":"datetime","ValueExpression":"EndDate","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"DurationInSeconds","SQLDataType":"int","ValueExpression":"DurationInSeconds","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"CallingPartyNumber","SQLDataType":"varchar(50)","ValueExpression":"CallingPartyNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"CalledPartyNumber","SQLDataType":"varchar(50)","ValueExpression":"CalledPartyNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"IncomingTrunkGroupNumber","SQLDataType":"varchar(50)","ValueExpression":"IncomingTrunkGroupNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"IncomingTrunkNumber","SQLDataType":"int","ValueExpression":"IncomingTrunkNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"OutgoingTrunkGroupNumber","SQLDataType":"varchar(50)","ValueExpression":"OutgoingTrunkGroupNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"OutgoingTrunkNumber","SQLDataType":"int","ValueExpression":"OutgoingTrunkNumber","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"CauseValue","SQLDataType":"int","ValueExpression":"CauseValue","IsUnique":false},{"$type":"Vanrise.GenericData.SQLDataStorage.SQLDataRecordStorageColumn, Vanrise.GenericData.SQLDataStorage","ColumnName":"Zone","SQLDataType":"varchar(50)","ValueExpression":"Zone","IsUnique":false}]},"NullableFields":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.SQLDataStorage.NullableField, Vanrise.GenericData.SQLDataStorage]], mscorlib","$values":[]},"IncludeQueueItemId":false,"DateTimeField":"BeginDate","EnableUseCaching":false,"RequiredPermission":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}',null)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[DataRecordTypeID],[DataStoreID],[Settings],[State]))
merge	[genericdata].[DataRecordStorage] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[DataRecordTypeID] = s.[DataRecordTypeID],[DataStoreID] = s.[DataStoreID],[Settings] = s.[Settings],[State] = s.[State]
when not matched by target then
	insert([ID],[Name],[DataRecordTypeID],[DataStoreID],[Settings],[State])
	values(s.[ID],s.[Name],s.[DataRecordTypeID],s.[DataStoreID],s.[Settings],s.[State]);


--[queue].[ExecutionFlowDefinition]-----------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([Id],[Name],[Title],[ExecutionTree],[Stages])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('52D18739-5371-4DAB-B922-F8C98563B7C9','NokiaSiemens_Execution_Flow','Nokia Siemens Execution Flow',null,'{"$type":"System.Collections.Generic.List`1[[Vanrise.Queueing.Entities.QueueExecutionFlowStage, Vanrise.Queueing.Entities]], mscorlib","$values":[{"$type":"Vanrise.Queueing.Entities.QueueExecutionFlowStage, Vanrise.Queueing.Entities","StageName":"NokiaSiemensStorageStage","QueueNameTemplate":"Queue_#FlowId#_#StageName#","QueueTitleTemplate":"#StageName# Queue (#FlowName#)","QueueItemType":{"$type":"Vanrise.GenericData.QueueActivators.DataRecordBatchQueueItemType, Vanrise.GenericData.QueueActivators","DataRecordTypeId":"599c4585-9c16-4d33-b688-8339aafa036e","BatchDescription":"#RECORDSCOUNT# of CDRs"},"QueueActivator":{"$type":"Vanrise.GenericData.QueueActivators.StoreBatchQueueActivator, Vanrise.GenericData.QueueActivators","DataRecordStorageId":"35fb043f-5ad5-450a-827b-3968800c1aa2","NbOfMaxConcurrentActivators":10,"ConfigId":"f6ced9a6-86c4-4fb9-b706-6e91d8f02908"},"IsSequential":false},{"$type":"Vanrise.Queueing.Entities.QueueExecutionFlowStage, Vanrise.Queueing.Entities","StageName":"CDRTransformationStage","QueueNameTemplate":"Queue_#FlowId#_#StageName#","QueueTitleTemplate":"#StageName# Queue (#FlowName#)","QueueItemType":{"$type":"Vanrise.GenericData.QueueActivators.DataRecordBatchQueueItemType, Vanrise.GenericData.QueueActivators","DataRecordTypeId":"599c4585-9c16-4d33-b688-8339aafa036e","BatchDescription":"#RECORDSCOUNT# of CDRs"},"QueueActivator":{"$type":"Vanrise.GenericData.QueueActivators.TransformBatchQueueActivator, Vanrise.GenericData.QueueActivators","DataTransformationDefinitionId":"b2bf05b3-4c79-4cd3-8d39-dd941f2f6970","SourceRecordName":"CDRs","NextStagesRecords":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.QueueActivators.TransformBatchNextStageRecord, Vanrise.GenericData.QueueActivators]], mscorlib","$values":[{"$type":"Vanrise.GenericData.QueueActivators.TransformBatchNextStageRecord, Vanrise.GenericData.QueueActivators","RecordName":"CookedCDRs","NextStages":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["NokiaSiemensStorageStage"]}},{"$type":"Vanrise.GenericData.QueueActivators.TransformBatchNextStageRecord, Vanrise.GenericData.QueueActivators","RecordName":"BadCDRs","NextStages":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["NokiaSiemensBadStorageStage"]}}]},"NbOfMaxConcurrentActivators":10,"ConfigId":"65db9db0-61ca-47da-af9e-7e9e0adb11d9"},"IsSequential":false},{"$type":"Vanrise.Queueing.Entities.QueueExecutionFlowStage, Vanrise.Queueing.Entities","StageName":"NokiaSiemensBadStorageStage","QueueNameTemplate":"Queue_#FlowId#_#StageName#","QueueTitleTemplate":"#StageName# Queue (#FlowName#)","QueueItemType":{"$type":"Vanrise.GenericData.QueueActivators.DataRecordBatchQueueItemType, Vanrise.GenericData.QueueActivators","DataRecordTypeId":"599c4585-9c16-4d33-b688-8339aafa036e","BatchDescription":"#RECORDSCOUNT# of CDRs"},"QueueActivator":{"$type":"Vanrise.GenericData.QueueActivators.StoreBatchQueueActivator, Vanrise.GenericData.QueueActivators","DataRecordStorageId":"fad79450-244e-464b-8a69-8b030ebcc975","NbOfMaxConcurrentActivators":10,"ConfigId":"f6ced9a6-86c4-4fb9-b706-6e91d8f02908"},"IsSequential":false}]}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([Id],[Name],[Title],[ExecutionTree],[Stages]))
merge	[queue].[ExecutionFlowDefinition] as t
using	cte_data as s
on		1=1 and t.[Id] = s.[Id]
when matched then
	update set
	[Name] = s.[Name],[Title] = s.[Title],[ExecutionTree] = s.[ExecutionTree],[Stages] = s.[Stages]
when not matched by target then
	insert([Id],[Name],[Title],[ExecutionTree],[Stages])
	values(s.[Id],s.[Name],s.[Title],s.[ExecutionTree],s.[Stages]);



--[queue].[ExecutionFlow]---------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([Id],[Name],[ExecutionFlowDefinitionID])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('4C38C49D-A35C-4875-B654-40996CC7A174','Nokia Siemens Execution Flow','52D18739-5371-4DAB-B922-F8C98563B7C9')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([Id],[Name],[ExecutionFlowDefinitionID]))
merge	[queue].[ExecutionFlow] as t
using	cte_data as s
on		1=1 and t.[Id] = s.[Id]
when matched then
	update set
	[Name] = s.[Name],[ExecutionFlowDefinitionID] = s.[ExecutionFlowDefinitionID]
when not matched by target then
	insert([Id],[Name],[ExecutionFlowDefinitionID])
	values(s.[Id],s.[Name],s.[ExecutionFlowDefinitionID]);


--[integration].[DataSource]----------------------------------------------------------------------------------------------------------------------------------------------------------------------------set nocount on;;with cte_data([ID],[Name],[AdapterID],[AdapterState],[TaskId],[Settings])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////('124A1280-31E8-4B0F-9023-E2DEF170F335','Nokia Siemens WHS Parser','396A4933-DF4F-49CD-9799-BF605B9F4597','null','354CA4ED-81CF-4AC4-A234-C01FB42903F1','{"$type":"Vanrise.Integration.Entities.DataSourceSettings, Vanrise.Integration.Entities","AdapterArgument":{"$type":"Vanrise.Integration.Adapters.FTPReceiveAdapter.Arguments.FTPAdapterArgument, Vanrise.Integration.Adapters.FTPReceiveAdapter.Arguments","Extension":".dat","Mask":"","Directory":"/Mediation/NokiaSiemensOgero","ServerIP":"192.168.110.185","UserName":"devftpuser","Password":"P@ssw0rd","ActionAfterImport":0,"BasedOnLastModifiedTime":false,"CompressedFiles":false,"CompressionType":0,"MaxParallelRuntimeInstances":1},"MapperCustomCode":"Vanrise.DataParser.Business.ExecuteParserOptions options = new Vanrise.DataParser.Business.ExecuteParserOptions { GenerateIds = true };\n            Vanrise.Integration.Entities.StreamReaderImportedData ImportedData = ((Vanrise.Integration.Entities.StreamReaderImportedData)(data));\n            Vanrise.DataParser.Business.ParserHelper.ExecuteParser(ImportedData.Stream, ImportedData.Name, new Guid(\"202c8508-a24c-4664-b769-be71c86fcd75\"), options, (parsedBatch) =>\n            {\n                Vanrise.Integration.Entities.MappedBatchItem batch = Vanrise.GenericData.QueueActivators.DataRecordBatch.CreateBatchFromRecords(parsedBatch.Records, \"#RECORDSCOUNT# of Nokia Siemens Parsed CDRs\", parsedBatch.RecordType);\n                switch (parsedBatch.RecordType)\n                {\n                    case \"NokiaSiemens_WHS_CDR\":\n                        mappedBatches.Add(\"CDRTransformationStage\", batch);\n                        break;\n                }\n\n            });\n            Vanrise.Integration.Entities.MappingOutput result = new Vanrise.Integration.Entities.MappingOutput();\n            result.Result = Vanrise.Integration.Entities.MappingResult.Valid;\n            LogVerbose(\"Finished\");\n            return result;","ExecutionFlowId":"4c38c49d-a35c-4875-b654-40996cc7a174"}')--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([ID],[Name],[AdapterID],[AdapterState],[TaskId],[Settings]))merge	[integration].[DataSource] as tusing	cte_data as son		1=1 and t.[ID] = s.[ID]when matched then	update set	[Name] = s.[Name],[AdapterID] = s.[AdapterID],[AdapterState] = s.[AdapterState],[TaskId] = s.[TaskId],[Settings] = s.[Settings]when not matched by target then	insert([ID],[Name],[AdapterID],[AdapterState],[TaskId],[Settings])	values(s.[ID],s.[Name],s.[AdapterID],s.[AdapterState],s.[TaskId],s.[Settings]);--[runtime].[ScheduleTask]------------------------------------------------------------------------------------------------------------------------------------------------------------------------------set nocount on;;with cte_data([Id],[Name],[IsEnabled],[TaskType],[TriggerTypeId],[ActionTypeId],[TaskSettings],[OwnerId])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////('354CA4ED-81CF-4AC4-A234-C01FB42903F1','Data Source Task',1,0,'295B4FAC-DBF9-456F-855E-60D0B176F86B','B7CF41B9-F1B3-4C02-980D-B9FAFB4CFF68','{"$type":"Vanrise.Runtime.Entities.SchedulerTaskSettings, Vanrise.Runtime.Entities","TaskTriggerArgument":{"$type":"Vanrise.Runtime.Triggers.TimeTaskTrigger.Arguments.IntervalTimeTaskTriggerArgument, Vanrise.Runtime.Triggers.TimeTaskTrigger.Arguments","Interval":30.0,"IntervalType":2,"TimerTriggerTypeFQTN":"Vanrise.Runtime.Triggers.TimeTaskTrigger.IntervalTimeSchedulerTaskTrigger, Vanrise.Runtime.Triggers.TimeTaskTrigger","IgnoreSkippedIntervals":false},"StartEffDate":"2018-02-08T14:14:58.504"}',-1)--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([Id],[Name],[IsEnabled],[TaskType],[TriggerTypeId],[ActionTypeId],[TaskSettings],[OwnerId]))merge	[runtime].[ScheduleTask] as tusing	cte_data as son		1=1 and t.[Id] = s.[Id]--when matched then--	update set--	[Name] = s.[Name],[IsEnabled] = s.[IsEnabled],[TaskType] = s.[TaskType],[TriggerTypeId] = s.[TriggerTypeId],[ActionTypeId] = s.[ActionTypeId],[TaskSettings] = s.[TaskSettings],[OwnerId] = s.[OwnerId]when not matched by target then	insert([Id],[Name],[IsEnabled],[TaskType],[TriggerTypeId],[ActionTypeId],[TaskSettings],[OwnerId])	values(s.[Id],s.[Name],s.[IsEnabled],s.[TaskType],s.[TriggerTypeId],s.[ActionTypeId],s.[TaskSettings],s.[OwnerId]);--[genericdata].[DataTransformationDefinition]------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Title],[Details])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('B2BF05B3-4C79-4CD3-8D39-DD941F2F6970','NokiaSiemensCDRTransformation','Nokia Siemens CDR Transformation','{"$type":"Vanrise.GenericData.Transformation.Entities.DataTransformationDefinition, Vanrise.GenericData.Transformation.Entities","DataTransformationDefinitionId":"b2bf05b3-4c79-4cd3-8d39-dd941f2f6970","Name":"NokiaSiemensCDRTransformation","Title":"Nokia Siemens CDR Transformation","RecordTypes":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.Transformation.Entities.DataTransformationRecordType, Vanrise.GenericData.Transformation.Entities]], mscorlib","$values":[{"$type":"Vanrise.GenericData.Transformation.Entities.DataTransformationRecordType, Vanrise.GenericData.Transformation.Entities","RecordName":"CDRs","DataRecordTypeId":"599c4585-9c16-4d33-b688-8339aafa036e","IsArray":true},{"$type":"Vanrise.GenericData.Transformation.Entities.DataTransformationRecordType, Vanrise.GenericData.Transformation.Entities","RecordName":"CookedCDRs","DataRecordTypeId":"599c4585-9c16-4d33-b688-8339aafa036e","IsArray":true},{"$type":"Vanrise.GenericData.Transformation.Entities.DataTransformationRecordType, Vanrise.GenericData.Transformation.Entities","RecordName":"BadCDRs","DataRecordTypeId":"599c4585-9c16-4d33-b688-8339aafa036e","IsArray":true}]},"MappingSteps":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.Transformation.Entities.MappingStep, Vanrise.GenericData.Transformation.Entities]], mscorlib","$values":[{"$type":"Vanrise.GenericData.Transformation.MainExtensions.MappingSteps.ForLoopStep, Vanrise.GenericData.Transformation.MainExtensions","ConfigId":"d7ce9698-2721-467e-9820-1ed44b446d0d","Steps":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.Transformation.Entities.MappingStep, Vanrise.GenericData.Transformation.Entities]], mscorlib","$values":[{"$type":"Vanrise.GenericData.Transformation.MainExtensions.MappingSteps.IfElseStep, Vanrise.GenericData.Transformation.MainExtensions","ConfigId":"9cf3c165-1921-4f83-990d-03b82a04aa5a","Condition":"cdr.BeginDate.HasValue && !string.IsNullOrEmpty(cdr.CalledPartyNumber)","ThenSteps":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.Transformation.Entities.MappingStep, Vanrise.GenericData.Transformation.Entities]], mscorlib","$values":[{"$type":"Vanrise.GenericData.Transformation.MainExtensions.MappingSteps.AddItemToArrayStep, Vanrise.GenericData.Transformation.MainExtensions","ConfigId":"9c158fa5-8516-4af7-aedd-1bc69d026afc","ArrayVariableName":"CookedCDRs","VariableName":"cdr"}]},"ElseSteps":{"$type":"System.Collections.Generic.List`1[[Vanrise.GenericData.Transformation.Entities.MappingStep, Vanrise.GenericData.Transformation.Entities]], mscorlib","$values":[{"$type":"Vanrise.GenericData.Transformation.MainExtensions.MappingSteps.AddItemToArrayStep, Vanrise.GenericData.Transformation.MainExtensions","ConfigId":"9c158fa5-8516-4af7-aedd-1bc69d026afc","ArrayVariableName":"BadCDRs","VariableName":"cdr"}]}}]},"ArrayVariableName":"CDRs","IterationVariableName":"cdr"}]}}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Title],[Details]))
merge	[genericdata].[DataTransformationDefinition] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Title] = s.[Title],[Details] = s.[Details]
when not matched by target then
	insert([ID],[Name],[Title],[Details])
	values(s.[ID],s.[Name],s.[Title],s.[Details]);--[dataparser].[ParserType]-------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('202C8508-A24C-4664-B769-BE71C86FCD75','Nokia Siemens WHS Parser', '{"$type":"Vanrise.DataParser.Entities.ParserTypeSettings, Vanrise.DataParser.Entities","UseRecordType":false,"ExtendedSettings":{"$type":"Vanrise.DataParser.Business.HexTLVParserType, Vanrise.DataParser.Business","ConfigId":"92ca6f6f-8901-4c86-9540-efa2941d25e2","RecordParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.HeaderRecordParser, Vanrise.DataParser.MainExtensions","ConfigId":"67b49d8e-0285-4926-9afb-8a63f6af8dd6","HeaderLength":8,"RecordLengthIndex":1,"RecordLengthByteLength":1,"PackageRecordParser":{"$type":"Vanrise.DataParser.Entities.HexTLVRecordParser, Vanrise.DataParser.Entities","Settings":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageRecordParser, Vanrise.DataParser.MainExtensions","ConfigId":"8396b755-d0ae-4d96-b3c5-d48b1cbf230e","RecordType":"NokiaSiemens_WHS_CDR","Packages":{"$type":"System.Collections.Generic.Dictionary`2[[System.Int32, mscorlib],[Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions]], mscorlib","100":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.DateTimePackageParser, Vanrise.DataParser.MainExtensions","ConfigId":"b60d9cc3-3c8c-494f-a272-4cadbf47bafe","BeginDateTimeFieldName":"BeginDate","EndDateTimeFieldName":"EndDate","DurationFieldName":"DurationInSeconds","YearIndex":0,"MonthIndex":1,"DayIndex":2,"HoursIndex":3,"MinutesIndex":4,"SecondsIndex":5,"FlagsMillisecondsIndex":6,"DurationIndex":7},"PackageTagLength":1,"PackageLength":11},"142":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.PartyNumberPackageParser, Vanrise.DataParser.MainExtensions","ConfigId":"d15f9394-e33a-4e13-bec2-77670b650b81","PartyNumberFieldName":"CallingPartyNumber"},"PackageTagLength":1},"168":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.PartyNumberPackageParser, Vanrise.DataParser.MainExtensions","ConfigId":"d15f9394-e33a-4e13-bec2-77670b650b81","PartyNumberFieldName":"CalledPartyNumber"},"PackageTagLength":1},"105":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.TrunkIdentificationPackageParser, Vanrise.DataParser.MainExtensions","ConfigId":"213c598d-8800-41b4-9bb9-5ffef706433a","TrunkGroupNumberFieldName":"IncomingTrunkGroupNumber","TrunkNumberFieldName":"IncomingTrunkNumber"},"PackageTagLength":1,"PackageLength":9},"106":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.TrunkIdentificationPackageParser, Vanrise.DataParser.MainExtensions","ConfigId":"213c598d-8800-41b4-9bb9-5ffef706433a","TrunkGroupNumberFieldName":"OutgoingTrunkGroupNumber","TrunkNumberFieldName":"OutgoingTrunkNumber"},"PackageTagLength":1,"PackageLength":9},"130":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.NumberFieldParser, Vanrise.DataParser.MainExtensions","ConfigId":"11fce310-6bff-43bd-acd8-f229c8f4ed8a","FieldName":"CauseValue","NumberType":1,"Reverse":true,"FieldIndex":0,"FieldBytesLength":2},"PackageTagLength":1},"102":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":4},"103":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":4},"107":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":10},"108":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":10},"116":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":8},"119":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":2},"120":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":2},"122":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.RecordParsers.PackageFieldParser, Vanrise.DataParser.MainExtensions","FieldParser":{"$type":"Vanrise.DataParser.MainExtensions.HexTLV.FieldParsers.SkipBlockParser, Vanrise.DataParser.MainExtensions","ConfigId":"a25fb305-71b0-4288-9196-7c0d3a6d2b8b"},"PackageTagLength":1,"PackageLength":3}},"PackageTagLength":1,"PackageLengthByteLength":1}}}}}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Settings]))
merge	[dataparser].[ParserType] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[Settings])
	values(s.[ID],s.[Name],s.[Settings]);