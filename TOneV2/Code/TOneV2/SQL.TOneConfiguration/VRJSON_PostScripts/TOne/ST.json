{
  "Scripts": [
    {
      "ConnectionId": "64a495ae-cc8d-4ee0-bd1a-bc93e35fdaa7",
      "Schema": "runtime",
      "TableName": "ScheduleTask",
      "Note": null,
      "Settings": {
        "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItem, Vanrise.DevTools.Business",
        "DataRows": [
          {
            "FieldValues": {
              "Id": "fc77ce29-9fcb-43dd-825d-97ae73222071",
              "Name": "Data Source Task",
              "IsEnabled": true,
              "TaskType": 0,
              "TriggerTypeId": "295b4fac-dbf9-456f-855e-60d0b176f86b",
              "ActionTypeId": "b7cf41b9-f1b3-4c02-980d-b9fafb4cff68",
              "TaskSettings": "{\"$type\":\"Vanrise.Runtime.Entities.SchedulerTaskSettings, Vanrise.Runtime.Entities\",\"TaskTriggerArgument\":{\"$type\":\"Vanrise.Runtime.Triggers.TimeTaskTrigger.Arguments.IntervalTimeTaskTriggerArgument, Vanrise.Runtime.Triggers.TimeTaskTrigger.Arguments\",\"Interval\":5.0,\"IntervalType\":2,\"TimerTriggerTypeFQTN\":\"Vanrise.Runtime.Triggers.TimeTaskTrigger.IntervalTimeSchedulerTaskTrigger, Vanrise.Runtime.Triggers.TimeTaskTrigger\",\"IgnoreSkippedIntervals\":true},\"StartEffDate\":\"2018-09-17T17:42:00\"}",
              "OwnerId": 95,
              "CreatedTime": "2019-09-18T12:06:48.677",
              "LastModifiedTime": "2019-09-20T18:34:29.567"
            }
          }
        ],
        "Columns": [
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "Id",
            "IsIdentifier": true,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "Name",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "IsEnabled",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "TaskType",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "TriggerTypeId",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "ActionTypeId",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "TaskSettings",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "OwnerId",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "CreatedTime",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "LastModifiedTime",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          }
        ],
        "IsIdentity": false,
        "Variables": [],
        "LastWhereCondition": "DevProjectID = 'db474d88-ea7f-4425-b7a5-c58c53fce16a'",
        "LastJoinStatement": null,
        "ConfigId": "9837cad1-1f8f-4edf-8aab-25864c4ef842"
      },
      "Title": "Merge"
    },
    {
      "ConnectionId": "64a495ae-cc8d-4ee0-bd1a-bc93e35fdaa7",
      "Schema": "integration",
      "TableName": "DataSource",
      "Note": null,
      "Settings": {
        "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItem, Vanrise.DevTools.Business",
        "DataRows": [
          {
            "FieldValues": {
              "ID": "1f40bff9-76cb-4c58-b896-d96161c544ae",
              "Name": "Import Nokia Siemens CDR - Sample DataSource",
              "AdapterID": "10323ccb-cbfd-4bbe-91f3-fc80e2d91630",
              "AdapterState": "{\"$type\":\"Vanrise.Integration.Adapters.DBReceiveAdapter.Arguments.DBAdapterState, Vanrise.Integration.Adapters.DBReceiveAdapter.Arguments\",\"LastImportedId\":0}",
              "TaskId": "fc77ce29-9fcb-43dd-825d-97ae73222071",
              "Settings": "{\"$type\":\"Vanrise.Integration.Entities.DataSourceSettings, Vanrise.Integration.Entities\",\"AdapterArgument\":{\"$type\":\"Vanrise.Integration.Adapters.DBReceiveAdapter.Arguments.DBAdapterArgument, Vanrise.Integration.Adapters.DBReceiveAdapter.Arguments\",\"ConnectionString\":\"Server=192.168.110.185;Database=NokiaSiemensMediator;User ID=Development;Password=dev!123\",\"Query\":\"SELECT #TopRows#[ID]\\n      ,[SessionID]\\n      ,[AttemptDateTime]\\n      ,[AlertDateTime]\\n      ,[ConnectDateTime]\\n      ,[DisconnectDateTime]\\n      ,[DurationInSeconds]\\n      ,[IN_TRUNK]\\n      ,[IN_CARRIER]\\n      ,[OUT_TRUNK]\\n      ,[OUT_CARRIER]\\n      ,[CGPN]\\n      ,[CDPN]\\n      ,[CAUSE_FROM_RELEASE_CODE]\\n      ,[CAUSE_TO_RELEASE_CODE]\\n      ,[CAUSE_FROM]\\n      ,[EXTRA_FIELDS]\\n  FROM [NokiaSiemensMediator].[dbo].[CookedCDR]\\nWhere (ID > ISNULL(@RangeStart, 0))\\nAND (ID <= ISNULL(@RangeEnd, 9999999999999999))\\nORDER BY ID\",\"IdentifierColumnName\":\"ID\",\"NumberOfParallelReader\":1,\"NumberOffSet\":1000000,\"MaxParallelRuntimeInstances\":1,\"CommandTimeoutInSeconds\":600},\"MapperCustomCode\":\"List<dynamic> cdrs = new List<dynamic>();\\n\\n            var dataRecordTypeManager = new Vanrise.GenericData.Business.DataRecordTypeManager();\\n            Type cdrRuntimeType = dataRecordTypeManager.GetDataRecordRuntimeType(\\\"CDR\\\");\\n\\n            var dataRecordVanriseType = new Vanrise.GenericData.Entities.DataRecordVanriseType(\\\"CDR\\\");\\n\\n            int rowCount = 0;\\n            int maximumBatchSize = 50000;\\n\\n            var importedData = ((Vanrise.Integration.Entities.DBReaderImportedData)(data));\\n            IDataReader reader = importedData.Reader;\\n\\n            while (reader.Read())\\n            {\\n                dynamic cdr = Activator.CreateInstance(cdrRuntimeType) as dynamic;\\n\\n                cdr.Tag = reader[\\\"SessionID\\\"] as string;\\n                cdr.IDonSwitch = (int)reader[\\\"ID\\\"];\\n                cdr.AttemptDateTime = (DateTime)reader[\\\"AttemptDateTime\\\"];\\n                cdr.AlertDateTime = Utils.GetReaderValue<DateTime?>(reader, \\\"AlertDateTime\\\");\\n                cdr.ConnectDateTime = Utils.GetReaderValue<DateTime?>(reader, \\\"ConnectDateTime\\\");\\n                cdr.DisconnectDateTime = Utils.GetReaderValue<DateTime?>(reader, \\\"DisconnectDateTime\\\");\\n                cdr.DurationInSeconds = Utils.GetReaderValue<Decimal>(reader, \\\"DurationInSeconds\\\");\\n                cdr.InTrunk = reader[\\\"IN_TRUNK\\\"] as string;\\n                cdr.InCarrier = reader[\\\"IN_CARRIER\\\"] as string;\\n                cdr.OutTrunk = reader[\\\"OUT_TRUNK\\\"] as string;\\n                cdr.OutCarrier = reader[\\\"OUT_CARRIER\\\"] as string;\\n                cdr.CGPN = reader[\\\"CGPN\\\"] as string;\\n                cdr.CDPN = reader[\\\"CDPN\\\"] as string;\\n                cdr.CauseFromReleaseCode = reader[\\\"CAUSE_FROM_RELEASE_CODE\\\"] as string;\\n                cdr.CauseFrom = reader[\\\"CAUSE_FROM\\\"] as string;\\n                cdr.CauseToReleaseCode = reader[\\\"CAUSE_TO_RELEASE_CODE\\\"] as string;\\n\\n                string extraFields = reader[\\\"EXTRA_FIELDS\\\"] as string;\\n                if (!string.IsNullOrEmpty(extraFields))\\n                {\\n                    var extraFieldKVP = extraFields.Split(':');\\n\\n                    cdr.ExtraFields = new Dictionary<string, string>();\\n                    cdr.ExtraFields[extraFieldKVP[0]] = extraFieldKVP[1];\\n                }\\n\\n                cdrs.Add(cdr);\\n                importedData.LastImportedId = reader[\\\"ID\\\"];\\n\\n                rowCount++;\\n                if (rowCount == maximumBatchSize)\\n                    break;\\n            }\\n\\n            if (cdrs.Count > 0)\\n            {\\n                long startingId;\\n                Vanrise.Common.Business.IDManager.Instance.ReserveIDRange(dataRecordVanriseType, rowCount, out startingId);\\n\\n                long currentId = startingId;\\n                foreach (var cdr in cdrs)\\n                {\\n                    cdr.Id = currentId;\\n                    currentId++;\\n                }\\n\\n                var batch = Vanrise.GenericData.QueueActivators.DataRecordBatch.CreateBatchFromRecords(cdrs, \\\"#RECORDSCOUNT# of Raw CDRs\\\", \\\"CDR\\\");\\n                mappedBatches.Add(\\\"Distribute Raw CDRs Stage\\\", batch);\\n            }\\n            else\\n            {\\n                importedData.IsEmpty = true;\\n            }\\n\\n            Vanrise.Integration.Entities.MappingOutput result = new Vanrise.Integration.Entities.MappingOutput();\\n            result.Result = Vanrise.Integration.Entities.MappingResult.Valid;\\n            LogVerbose(\\\"Finished\\\");\\n\\n            return result;\",\"ExecutionFlowId\":\"2799f9d0-8b71-47a1-861f-ab7c2850e8fc\"}",
              "LastModifiedTime": "2019-09-18T12:06:48.93",
              "CreatedTime": "2019-09-18T12:06:48.93"
            }
          }
        ],
        "Columns": [
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "ID",
            "IsIdentifier": true,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "Name",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "AdapterID",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "AdapterState",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "TaskId",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "Settings",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "LastModifiedTime",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          },
          {
            "$type": "Vanrise.DevTools.Business.MergeGeneratedScriptItemColumn, Vanrise.DevTools.Business",
            "ColumnName": "CreatedTime",
            "IsIdentifier": false,
            "IncludeInInsert": true,
            "IncludeInUpdate": true
          }
        ],
        "IsIdentity": false,
        "Variables": [],
        "LastWhereCondition": "DevProjectID = 'db474d88-ea7f-4425-b7a5-c58c53fce16a'",
        "LastJoinStatement": null,
        "ConfigId": "9837cad1-1f8f-4edf-8aab-25864c4ef842"
      },
      "Title": "Merge"
    }
  ]
}