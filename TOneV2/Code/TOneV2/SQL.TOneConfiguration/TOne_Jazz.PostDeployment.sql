/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


--[common].[VRComponentType]------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[ConfigID],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('57608C11-1C43-489B-997C-FF6E8B1314C0','Profile Message Type','80791C8A-5F81-4D2E-B3D7-4240CF967FA0','{"$type":"Vanrise.Entities.SMSMessageTypeSettings, Vanrise.Entities","Objects":{"$type":"Vanrise.Entities.VRObjectVariableCollection, Vanrise.Entities","Profile":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"Profile","VRObjectTypeDefinitionId":"dfeef80e-4e65-4232-8150-15fcb08826da"},"User":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"User","VRObjectTypeDefinitionId":"e3887cc9-1fbb-44d1-b1e3-7a0922400550"},"AccountBalance":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"AccountBalance","VRObjectTypeDefinitionId":"1c93042e-939b-4022-9f13-43c3718ef644"},"Threshold":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"Threshold","VRObjectTypeDefinitionId":"1c93042e-939b-4022-9f13-43c3718ef644"}},"VRComponentTypeConfigId":"80791c8a-5f81-4d2e-b3d7-4240cf967fa0"}'),
('6937C4EC-5377-4F71-97A1-AE5EE4710282','Customer Message Type','80791C8A-5F81-4D2E-B3D7-4240CF967FA0','{"$type":"Vanrise.Entities.SMSMessageTypeSettings, Vanrise.Entities","Objects":{"$type":"Vanrise.Entities.VRObjectVariableCollection, Vanrise.Entities","Customer":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"Customer","VRObjectTypeDefinitionId":"61b75db7-aae0-4ed2-846c-d0403c26d8d7"},"AccountBalance":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"AccountBalance","VRObjectTypeDefinitionId":"1c93042e-939b-4022-9f13-43c3718ef644"},"Threshold":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"Threshold","VRObjectTypeDefinitionId":"1c93042e-939b-4022-9f13-43c3718ef644"},"User":{"$type":"Vanrise.Entities.VRObjectVariable, Vanrise.Entities","ObjectName":"User","VRObjectTypeDefinitionId":"e3887cc9-1fbb-44d1-b1e3-7a0922400550"}},"VRComponentTypeConfigId":"80791c8a-5f81-4d2e-b3d7-4240cf967fa0"}'),
('653fc3f1-33cb-4831-826c-ef9848e67a90','Send SMS','d96f17c8-29d7-4c0c-88dc-9d5fbca2178f','{"$type":"Vanrise.Notification.Entities.VRActionDefinitionSettings, Vanrise.Notification.Entities","VRComponentTypeConfigId":"d96f17c8-29d7-4c0c-88dc-9d5fbca2178f","ExtendedSettings":{"$type":"TOne.WhS.AccountBalance.MainExtensions.VRBalanceAlertActions.SendCustomerSMSActionDefinition, TOne.WhS.AccountBalance.MainExtensions","AccountSMSMessageTypeId":"6937c4ec-5377-4f71-97a1-ae5ee4710282","ProfileSMSMessageTypeId":"57608c11-1c43-489b-997c-ff6e8b1314c0","ConfigId":"114ce0ac-4848-442a-b351-be031f22e130","RuntimeEditor":"whs-accountbalance-action-send-customer-sms"}}'),
('A5E581F3-5F22-401E-8184-402705CAE501','Final Namibia','92B03E4E-37FB-48A1-ACEE-841135C30B5E','{"$type":"Vanrise.Analytic.Business.ReportGenerationCustomCodeSettings, Vanrise.Analytic.Business","VRComponentTypeConfigId":"92b03e4e-37fb-48a1-acee-841135c30b5e","CustomCode":"string dimensionName = \"Zone\";\n                string durationMeasureName = \"Duration\";\n                string amountMeasureName = \"Amount\";\n                string monthDimension = \"Month\";\n                string costNetMeasure = \"CostNet\";\n                string costDurationMeasure = \"CostDuration\";\n                string saleNetMeasure = \"SaleNet\";\n                string saleDurationMeasure = \"SaleDuration\";\n\n                var vrExcelFile = context.CreateExcelFile();\n                var sheet = vrExcelFile.CreateSheet();\n\n                var incomingQueryItem1 = context.GetDataList(\"IncomingQuery1\", \"Main\");\n                string incomingDataListIdentifier1 = string.Format(\"{0}_{1}\", \"IncomingQuery1\", \"Main\");\n                incomingQueryItem1.ThrowIfNull(\"dataList\", incomingDataListIdentifier1);\n                incomingQueryItem1.Items.ThrowIfNull(\"dataList.Items\", incomingDataListIdentifier1);\n                incomingQueryItem1.FieldInfos.ThrowIfNull(\"dataList.FieldInfos\", incomingDataListIdentifier1);\n\n                #region Incoming\n                int rowIndexState = 0;\n                var incomingTable = sheet.CreateTable(rowIndexState, 0);\n                sheet.SetColumnConfig(new VRExcelColumnConfig\n                {\n                    ColumnIndex = 0,\n                    ColumnWidth = 20,\n                });\n\n\n                var incomingHeaderRow = incomingTable.CreateHeaderRow();\n                var incomingHeaderCell = incomingHeaderRow.CreateCell();\n                incomingHeaderCell.SetValue(\"Incoming\");\n                context.SetCellStyle(incomingHeaderCell, \"White\", \"Black\", 11, true, VRExcelContainerHorizontalAlignment.Left);\n\n                rowIndexState += 2;\n                var incomingHeaderTable = sheet.CreateTable(rowIndexState, 0);\n                incomingHeaderTable.EnableTableBorders();\n                incomingHeaderTable.EnableMergeHeaders();\n                var incomingHeadersRow = incomingHeaderTable.CreateHeaderRow();\n                var incomingZoneHeaderCell = incomingHeadersRow.CreateCell();\n                incomingZoneHeaderCell.SetValue(dimensionName);\n                context.SetCellStyle(incomingZoneHeaderCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                var currentDate = new DateTime(incomingQueryItem1.From.Year, incomingQueryItem1.From.Month, 1);\n                int count = 0;\n                VRExcelTable table;\n                VRExcelTableHeaderRow currentRow = incomingHeadersRow;\n                VRExcelTableDataRow currentMeasureRow = incomingHeaderTable.CreateDataRow();\n                currentMeasureRow.CreateCell();\n                int columnIndexState = 8;\n                List&lt;string&gt; incomingHeaders = new List&lt;string&gt;();\n                while (currentDate&lt;= incomingQueryItem1.To)\n                {\n                    var dateDescription = currentDate.ToString(\"yyyy-MM\");\n                    incomingHeaders.Add(dateDescription);\n                    if (count&gt;0 &amp;&amp; count % 3 == 0)\n                    {\n                        table = sheet.CreateTable(rowIndexState, columnIndexState);\n                        table.EnableMergeHeaders();\n                        table.EnableTableBorders();\n                        currentRow = table.CreateHeaderRow();\n                        currentMeasureRow = table.CreateDataRow();\n\n                        var dateCell1 = currentRow.CreateCell();\n                        dateCell1.SetValue(dateDescription);\n                        context.SetCellStyle(dateCell1, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var dateCell2 = currentRow.CreateCell();\n                        dateCell2.SetValue(dateDescription);\n                        context.SetCellStyle(dateCell2, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var durationCell = currentMeasureRow.CreateCell();\n                        durationCell.SetValue(durationMeasureName);\n                        context.SetCellStyle(durationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var amountCell = currentMeasureRow.CreateCell();\n                        amountCell.SetValue(amountMeasureName);\n                        context.SetCellStyle(amountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        columnIndexState += 7;\n\n                    }\n                    else\n                    {\n                        var cell = currentRow.CreateCell();\n                        cell.SetValue(dateDescription);\n                        context.SetCellStyle(cell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var cell2 = currentRow.CreateCell();\n                        context.SetCellStyle(cell2, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                        cell2.SetValue(dateDescription);\n\n                        var durationCell = currentMeasureRow.CreateCell();\n                        durationCell.SetValue(durationMeasureName);\n                        context.SetCellStyle(durationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var amountCell = currentMeasureRow.CreateCell();\n                        amountCell.SetValue(amountMeasureName);\n                        context.SetCellStyle(amountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                    }\n                    count++;\n                    currentDate = currentDate.AddMonths(1);\n                }\n\n                #region FirstItem\n\n                rowIndexState += 3;\n\n                var firstItemTable = sheet.CreateTable(rowIndexState, 0);\n                firstItemTable.EnableTableBorders();\n                var firstItemRow = firstItemTable.CreateDataRow();\n                var firstItemCell = firstItemRow.CreateCell();\n                firstItemCell.SetValue(\"Namibia (Domestic)\");\n                context.SetCellStyle(firstItemCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                count = 0;\n                VRExcelTable dataTable;\n                VRExcelTableDataRow currentDataRow = firstItemRow;\n\n                columnIndexState = 8;\n\n                decimal totalAmount = 0;\n                decimal totalDuration = 0;\n                currentDate = new DateTime(incomingQueryItem1.From.Year, incomingQueryItem1.From.Month, 1);\n                if(incomingQueryItem1.Items!=null &amp;&amp; incomingQueryItem1.Items.Count &gt; 0)\n                {\n                    for (int i = 0; i &lt; incomingQueryItem1.Items.Count; i++)\n                    {\n                        var item = incomingQueryItem1.Items[i];\n                        var monthItem = item.Fields.GetRecord(monthDimension);\n                        var monthItemDateTimeValue = (DateTime)monthItem.Value;\n                        DateTime toDate = monthItemDateTimeValue;\n                        if (i == incomingQueryItem1.Items.Count - 1)\n                            toDate = incomingQueryItem1.To;\n                        while (currentDate &lt;= toDate)\n                        {\n                            decimal saleNetValue = 0;\n                            decimal saleDurationValue = 0;\n\n                            if (currentDate.Year == monthItemDateTimeValue.Year &amp;&amp; currentDate.Month == monthItemDateTimeValue.Month)\n                            {\n                               var saleNetItem = item.Fields.GetRecord(saleNetMeasure);\n                                var saleDurationItem = item.Fields.GetRecord(saleDurationMeasure);\n                                if (saleNetItem.Value != null)\n                                    saleNetValue = (decimal)saleNetItem.Value;\n                                if (saleDurationItem.Value != null)\n                                    saleDurationValue = (decimal)saleDurationItem.Value;\n                            }\n\n                            if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                            {\n                                var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                                newTable.EnableTableBorders();\n                                var newRow = newTable.CreateDataRow();\n                                var newTableCell = newRow.CreateCell();\n                                newTableCell.SetValue(\"Total\");\n                                context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalDurationCell = newRow.CreateCell();\n                                totalDurationCell.SetValue(totalDuration);\n                                context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalAmountCell = newRow.CreateCell();\n                                totalAmountCell.SetValue(totalAmount);\n                                context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalDuration = 0;\n                                totalAmount = 0;\n\n                                dataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                                dataTable.EnableTableBorders();\n             currentDataRow = dataTable.CreateDataRow();\n\n                                var saleDurationValueCell = currentDataRow.CreateCell();\n                                saleDurationValueCell.SetValue(saleDurationValue);\n                                context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += saleDurationValue;\n\n                                var saleNetValueCell = currentDataRow.CreateCell();\n                                saleNetValueCell.SetValue(saleNetValue);\n                                context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += saleNetValue;\n                                columnIndexState += 7;\n\n                            }\n                            else\n                            {\n                                var saleDurationValueCell = currentDataRow.CreateCell();\n                                saleDurationValueCell.SetValue(saleDurationValue);\n                                context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += saleDurationValue;\n\n                                var saleNetValueCell = currentDataRow.CreateCell();\n                                saleNetValueCell.SetValue(saleNetValue);\n                                context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += saleNetValue;\n                            }\n                            count++;\n                            currentDate = currentDate.AddMonths(1);\n                        }\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n        {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                else\n                {\n                    decimal saleNetValue = 0;\n                    decimal saleDurationValue = 0;\n\n                    foreach (var header in incomingHeaders)\n                    {\n                        if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                        {\n                            var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                            newTable.EnableTableBorders();\n                            var newRow = newTable.CreateDataRow();\n                            var newTableCell = newRow.CreateCell();\n                            newTableCell.SetValue(\"Total\");\n                            context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n   var totalDurationCell = newRow.CreateCell();\n                            totalDurationCell.SetValue(totalDuration);\n                            context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalAmountCell = newRow.CreateCell();\n                            totalAmountCell.SetValue(totalAmount);\n                            context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalDuration = 0;\n                            totalAmount = 0;\n\n                            dataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                            dataTable.EnableTableBorders();\n                            currentDataRow = dataTable.CreateDataRow();\n\n                            var saleDurationValueCell = currentDataRow.CreateCell();\n                            saleDurationValueCell.SetValue(saleDurationValue);\n                            context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += saleDurationValue;\n\n                            var saleNetValueCell = currentDataRow.CreateCell();\n                            saleNetValueCell.SetValue(saleNetValue);\n                            context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += saleNetValue;\n                            columnIndexState += 7;\n\n                        }\n                        else\n                        {\n                            var saleDurationValueCell = currentDataRow.CreateCell();\n                            saleDurationValueCell.SetValue(saleDurationValue);\n                            context.SetCellStyle(saleDurationValueCell, \"White\",\"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += saleDurationValue;\n\n                            var saleNetValueCell = currentDataRow.CreateCell();\n                            saleNetValueCell.SetValue(saleNetValue);\n                            context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += saleNetValue;\n                        }\n                        count++;\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                \n                #endregion\n                #region Second Item\n                rowIndexState += 4;\n\n                var secondItemTable =sheet.CreateTable(rowIndexState, 0);\n                secondItemTable.EnableTableBorders();\n                var secondItemRow = secondItemTable.CreateDataRow();\n                var secondItemCell = secondItemRow.CreateCell();\n                secondItemCell.SetValue(\"SADC\");\n                context.SetCellStyle(secondItemCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                var incomingQueryItem2 = context.GetDataList(\"IncomingQuery2\", \"Main\");\n                string incomingDataListIdentifier2 = string.Format(\"{0}_{1}\", \"IncomingQuery2\", \"Main\");\n                incomingQueryItem2.ThrowIfNull(\"dataList\", incomingDataListIdentifier2);\n                incomingQueryItem2.Items.ThrowIfNull(\"dataList.Items\", incomingDataListIdentifier2);\n                incomingQueryItem2.FieldInfos.ThrowIfNull(\"dataList.FieldInfos\", incomingDataListIdentifier2);\n\n                count = 0;\n                dataTable = null;\n                currentDataRow = secondItemRow;\n\n                columnIndexState = 8;\n\n                totalAmount = 0;\n                totalDuration = 0;\n                currentDate = new DateTime(incomingQueryItem2.From.Year, incomingQueryItem2.From.Month, 1);\n\n                if(incomingQueryItem2.Items!=null &amp;&amp; incomingQueryItem2.Items.Count &gt; 0)\n                {\n                    for (int i = 0; i &lt; incomingQueryItem2.Items.Count; i++)\n                    {\n                        var item = incomingQueryItem2.Items[i];\n                        var monthItem = item.Fields.GetRecord(monthDimension);\n                        var monthItemDateTimeValue = (DateTime)monthItem.Value;\n\n                        DateTime toDate = monthItemDateTimeValue;\n                        if (i == incomingQueryItem2.Items.Count - 1)\n                            toDate = incomingQueryItem2.To;\n\n                        while (currentDate &lt;= toDate)\n  {\n                            decimal saleNetValue = 0;\n                            decimal saleDurationValue = 0;\n\n                            if (currentDate.Year == monthItemDateTimeValue.Year &amp;&amp; currentDate.Month == monthItemDateTimeValue.Month)\n                            {\n                                var saleNetItem = item.Fields.GetRecord(saleNetMeasure);\n                                var saleDurationItem = item.Fields.GetRecord(saleDurationMeasure);\n                                if (saleNetItem.Value != null)\n                                    saleNetValue = (decimal)saleNetItem.Value;\n                                if (saleDurationItem.Value != null)\n                                    saleDurationValue = (decimal)saleDurationItem.Value;\n                            }\n\n                            if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                            {\n                                var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                                newTable.EnableTableBorders();\n                                var newRow = newTable.CreateDataRow();\n                                var newTableCell = newRow.CreateCell();\n                                newTableCell.SetValue(\"Total\");\n                                context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalDurationCell = newRow.CreateCell();\n                                totalDurationCell.SetValue(totalDuration);\n                                context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalAmountCell = newRow.CreateCell();\n                                totalAmountCell.SetValue(totalAmount);\n                                context.SetCellStyle(totalAmountCell,\"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalDuration = 0;\n                                totalAmount = 0;\n\n                                dataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                                dataTable.EnableTableBorders();\n                                currentDataRow = dataTable.CreateDataRow();\n\n                                var saleDurationValueCell = currentDataRow.CreateCell();\n                                saleDurationValueCell.SetValue(saleDurationValue);\n                                context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += saleDurationValue;\n\n                                var saleNetValueCell = currentDataRow.CreateCell();\n                                saleNetValueCell.SetValue(saleNetValue);\n                                context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += saleNetValue;\n                                columnIndexState += 7;\n\n                            }\n                            else\n                            {\n                                var saleDurationValueCell = currentDataRow.CreateCell();\n                                saleDurationValueCell.SetValue(saleDurationValue);\n                                context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += saleDurationValue;\n\n                                var saleNetValueCell = currentDataRow.CreateCell();\n                                saleNetValueCell.SetValue(saleNetValue);\n                                context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += saleNetValue;\n                            }\n                            count++;\n                            currentDate = currentDate.AddMonths(1);\n                        }\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                else\n                {\n                    decimal saleNetValue = 0;\n                    decimal saleDurationValue = 0;\n\n                    foreach (var header in incomingHeaders)\n                    {\n                        if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                        {\n                            var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                            newTable.EnableTableBorders();\n                            var newRow = newTable.CreateDataRow();\n                            var newTableCell = newRow.CreateCell();\n                            newTableCell.SetValue(\"Total\");\n                            context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalDurationCell = newRow.CreateCell();\n                            totalDurationCell.SetValue(totalDuration);\n                            context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalAmountCell = newRow.CreateCell();\n                            totalAmountCell.SetValue(totalAmount);\n                            context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalDuration = 0;\n                            totalAmount = 0;\n\n                            dataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                            dataTable.EnableTableBorders();\n                            currentDataRow = dataTable.CreateDataRow();\n\n                            var saleDurationValueCell = currentDataRow.CreateCell();\n                            saleDurationValueCell.SetValue(saleDurationValue);\n                            context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += saleDurationValue;\n\n                            var saleNetValueCell = currentDataRow.CreateCell();\n                            saleNetValueCell.SetValue(saleNetValue);\n                            context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += saleNetValue;\n                            columnIndexState += 7;\n\n                        }\n                        else\n                        {\n                            var saleDurationValueCell = currentDataRow.CreateCell();\n                            saleDurationValueCell.SetValue(saleDurationValue);\n                            context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += saleDurationValue;\n\n                            var saleNetValueCell = currentDataRow.CreateCell();\n                            saleNetValueCell.SetValue(saleNetValue);\n                            context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += saleNetValue;\n                        }\n                        count++;\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                  context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                #endregion\n                #region Third Item\n\n                rowIndexState += 4;\n\n                var thirdItemTable = sheet.CreateTable(rowIndexState, 0);\n                thirdItemTable.EnableTableBorders();\n                var thirdItemRow = thirdItemTable.CreateDataRow();\n                var thirdItemCell = thirdItemRow.CreateCell();\n                thirdItemCell.SetValue(\"Rest of the World\");\n                context.SetCellStyle(thirdItemCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                var incomingQueryItem3 = context.GetDataList(\"IncomingQuery3\", \"Main\");\n                string incomingDataListIdentifier3 = string.Format(\"{0}_{1}\", \"IncomingQuery3\", \"Main\");\n                incomingQueryItem3.ThrowIfNull(\"dataList\", incomingDataListIdentifier3);\n                incomingQueryItem3.Items.ThrowIfNull(\"dataList.Items\", incomingDataListIdentifier3);\n                incomingQueryItem3.FieldInfos.ThrowIfNull(\"dataList.FieldInfos\", incomingDataListIdentifier3);\n\n                count = 0;\n                dataTable = null;\n                currentDataRow = thirdItemRow;\n\n                columnIndexState = 8;\n\n                totalAmount = 0;\n                totalDuration = 0;\n\n               
currentDate = new DateTime(incomingQueryItem3.From.Year, incomingQueryItem3.From.Month,1);\n                if(incomingQueryItem3.Items!=null &amp;&amp; incomingQueryItem3.Items.Count &gt; 0)\n                {\n                    for (int i = 0; i &lt; incomingQueryItem3.Items.Count; i++)\n                    {\n                        var item = incomingQueryItem3.Items[i];\n                        var monthItem = item.Fields.GetRecord(monthDimension);\n                        var monthItemDateTimeValue = (DateTime)monthItem.Value;\n\n                        DateTime toDate = monthItemDateTimeValue;\n                        if (i == incomingQueryItem3.Items.Count - 1)\n                            toDate = incomingQueryItem3.To;\n                        while (currentDate &lt;= toDate)\n                        {\n                            decimal saleNetValue = 0;\n                            decimal saleDurationValue = 0;\n\n                            if (currentDate.Year == monthItemDateTimeValue.Year &amp;&amp; currentDate.Month == monthItemDateTimeValue.Month)\n                            {\n                                var saleNetItem = item.Fields.GetRecord(saleNetMeasure);\n                                var saleDurationItem = item.Fields.GetRecord(saleDurationMeasure);\n                                if (saleNetItem.Value != null)\n                                    saleNetValue = (decimal)saleNetItem.Value;\n                                if (saleDurationItem.Value != null)\n                                    saleDurationValue = (decimal)saleDurationItem.Value;\n                            }\n\n                            if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                            {\n                                var newTable = sheet.CreateTable(rowIndexState + 2,columnIndexState - 4);\n                                newTable.EnableTableBorders();\n                                var newRow = newTable.CreateDataRow();\n                                var newTableCell = newRow.CreateCell();\n                                newTableCell.SetValue(\"Total\");\n                                context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalDurationCell = newRow.CreateCell();\n                                totalDurationCell.SetValue(totalDuration);\n                                context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalAmountCell = newRow.CreateCell();\n                                totalAmountCell.SetValue(totalAmount);\n                                context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalDuration = 0;\n                                totalAmount = 0;\n\n                                dataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                                dataTable.EnableTableBorders();\n                                currentDataRow = dataTable.CreateDataRow();\n\n                                var saleDurationValueCell = currentDataRow.CreateCell();\n                                saleDurationValueCell.SetValue(saleDurationValue);\n                                context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += saleDurationValue;\n\n                                var saleNetValueCell = currentDataRow.CreateCell();\n                                saleNetValueCell.SetValue(saleNetValue);\n                                context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += saleNetValue;\n                                columnIndexState += 7;\n\n                            }\n                            else\n                            {\n                                var saleDurationValueCell = currentDataRow.CreateCell();\n                                saleDurationValueCell.SetValue(saleDurationValue);\n                                context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += saleDurationValue;\n\n                                var saleNetValueCell = currentDataRow.CreateCell();\n                                saleNetValueCell.SetValue(saleNetValue);\n                                context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += saleNetValue;\n                            }\n                            count++;\n                            currentDate = currentDate.AddMonths(1);\n                        }\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                else\n                {\n                    decimal saleNetValue = 0;\n                    decimal saleDurationValue = 0;\n\n                    foreach (var header in incomingHeaders)\n                    {\n                        if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                        {\n                            var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                            newTable.EnableTableBorders();\n                            var newRow = newTable.CreateDataRow();\n                            var newTableCell = newRow.CreateCell();\n                            newTableCell.SetValue(\"Total\");\n                            context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalDurationCell = newRow.CreateCell();\n                            totalDurationCell.SetValue(totalDuration);\n                            context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalAmountCell = newRow.CreateCell();\n                            totalAmountCell.SetValue(totalAmount);\n                            context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalDuration = 0;\n                            totalAmount = 0;\n\n                            dataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                            dataTable.EnableTableBorders();\n                            currentDataRow = dataTable.CreateDataRow();\n\n                            var saleDurationValueCell = currentDataRow.CreateCell();\n                            saleDurationValueCell.SetValue(saleDurationValue);\n                            context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += saleDurationValue;\n\n                            var saleNetValueCell = currentDataRow.CreateCell();\n                            saleNetValueCell.SetValue(saleNetValue);\n                            context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += saleNetValue;\n                            columnIndexState += 7;\n\n                        }\n                        else\n                        {\n                            var saleDurationValueCell = currentDataRow.CreateCell();\n                            saleDurationValueCell.SetValue(saleDurationValue);\n                            context.SetCellStyle(saleDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += saleDurationValue;\n\n                            var saleNetValueCell = currentDataRow.CreateCell();\n                            saleNetValueCell.SetValue(saleNetValue);\n                            context.SetCellStyle(saleNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += saleNetValue;\n                        }\n                        count++;\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                \n                #endregion\n                #endregion\n\n\n                #region Outgoing\n\n                var outgoingQueryItem1 = context.GetDataList(\"OutgoingQuery1\", \"Main\");\n                string outgoingDataListIdentifier1 = string.Format(\"{0}_{1}\", \"OutgoingQuery1\", \"Main\");\n                outgoingQueryItem1.ThrowIfNull(\"dataList\", outgoingDataListIdentifier1);\n                outgoingQueryItem1.Items.ThrowIfNull(\"dataList.Items\", outgoingDataListIdentifier1);\n                outgoingQueryItem1.FieldInfos.ThrowIfNull(\"dataList.FieldInfos\", outgoingDataListIdentifier1);\n\n\n                rowIndexState += 4;\n                var outgoingTable = sheet.CreateTable(rowIndexState, 0);\n\n                var outgoingHeaderRow = outgoingTable.CreateHeaderRow();\n                var outgoingHeaderCell = outgoingHeaderRow.CreateCell();\n                outgoingHeaderCell.SetValue(\"Outgoing\");\n                context.SetCellStyle(outgoingHeaderCell, \"White\", \"Black\", 11, true, VRExcelContainerHorizontalAlignment.Left);\n\n                rowIndexState += 2;\n                var outgoingHeaderTable = sheet.CreateTable(rowIndexState, 0);\n                outgoingHeaderTable.EnableTableBorders();\n                outgoingHeaderTable.EnableMergeHeaders();\n                var outgoingHeadersRow = outgoingHeaderTable.CreateHeaderRow();\n                var outgoingZoneHeaderCell = outgoingHeadersRow.CreateCell();\n                outgoingZoneHeaderCell.SetValue(dimensionName);\n                context.SetCellStyle(outgoingZoneHeaderCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                currentDate = new DateTime(outgoingQueryItem1.From.Year, outgoingQueryItem1.From.Month, 1);\n                count = 0;\n\n                VRExcelTable currentTable;\n                VRExcelTableHeaderRow currentOutgiongHeadersRow = outgoingHeadersRow;\n                VRExcelTableDataRow currentOutgoingMeasureRow = outgoingHeaderTable.CreateDataRow();\n                currentOutgoingMeasureRow.CreateCell();\n                columnIndexState = 8;\n                List&lt;string&gt; outgoingHeaders = new List&lt;string&gt;();\n                while (currentDate &lt;= outgoingQueryItem1.To)\n                {\n                    var dateDescription = currentDate.ToString(\"yyyy-MM\");\n                    outgoingHeaders.Add(dateDescription);\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        currentTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                        currentTable.EnableMergeHeaders();\n                        currentTable.EnableTableBorders();\n                        currentOutgiongHeadersRow = currentTable.CreateHeaderRow();\n                        currentOutgoingMeasureRow = currentTable.CreateDataRow();\n\n                        var dateCell1 = currentOutgiongHeadersRow.CreateCell();\n                        dateCell1.SetValue(dateDescription);\n                        context.SetCellStyle(dateCell1, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var dateCell2 = currentOutgiongHeadersRow.CreateCell();\n                        dateCell2.SetValue(dateDescription);\n                        context.SetCellStyle(dateCell2, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var durationCell = currentOutgoingMeasureRow.CreateCell();\n                        durationCell.SetValue(durationMeasureName);\n                        context.SetCellStyle(durationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var amountCell = currentOutgoingMeasureRow.CreateCell();\n                        amountCell.SetValue(amountMeasureName);\n                        context.SetCellStyle(amountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        columnIndexState += 7;\n\n                    }\n                    else\n                    {\n                        var cell = currentOutgiongHeadersRow.CreateCell();\n                        cell.SetValue(dateDescription);\n                        context.SetCellStyle(cell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var cell2 = currentOutgiongHeadersRow.CreateCell();\n                        context.SetCellStyle(cell2, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                        cell2.SetValue(dateDescription);\n\n                        var durationCell = currentOutgoingMeasureRow.CreateCell();\n                        durationCell.SetValue(durationMeasureName);\n                        context.SetCellStyle(durationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var amountCell = currentOutgoingMeasureRow.CreateCell();\n                        amountCell.SetValue(amountMeasureName);\n                        context.SetCellStyle(amountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                    }\n                    count++;\n                    currentDate = currentDate.AddMonths(1);\n                }\n\n\n                #region First Item\n\n                rowIndexState += 3;\n\n                var firstItemOutgoingTable = sheet.CreateTable(rowIndexState, 0);\n                firstItemOutgoingTable.EnableTableBorders();\n                var firstItemOutgoingRow = firstItemOutgoingTable.CreateDataRow();\n                var firstItemOutgoingCell = firstItemOutgoingRow.CreateCell();\n                firstItemOutgoingCell.SetValue(\"Namibia (Domestic)\");\n                context.SetCellStyle(firstItemOutgoingCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                count = 0;\n                VRExcelTable outgoingDataTable;\n                VRExcelTableDataRow currentOutgoingDataRow = firstItemOutgoingRow;\n\n                columnIndexState = 8;\n\n                totalAmount = 0;\n                totalDuration = 0;\n                currentDate = new DateTime(outgoingQueryItem1.From.Year, outgoingQueryItem1.From.Month, 1);\n                if(outgoingQueryItem1.Items!=null &amp;&amp; outgoingQueryItem1.Items.Count &gt; 0)\n                {\n                    for (int i = 0; i &lt; outgoingQueryItem1.Items.Count; i++)\n                    {\n                        var item = outgoingQueryItem1.Items[i];\n                        var monthItem = item.Fields.GetRecord(monthDimension);\n                        var monthItemDateTimeValue = (DateTime)monthItem.Value;\n                        DateTime toDate = monthItemDateTimeValue;\n                        if (i == outgoingQueryItem1.Items.Count - 1)\n                            toDate = outgoingQueryItem1.To;\n                        while (currentDate &lt;= toDate)\n                        {\n                            decimal costNetValue = 0;\n                            decimal costDurationValue = 0;\n\n                            if (currentDate.Year == monthItemDateTimeValue.Year &amp;&amp; currentDate.Month == monthItemDateTimeValue.Month)\n                            {\n                                var costNetItem = item.Fields.GetRecord(costNetMeasure);\n                                var costDurationItem = item.Fields.GetRecord(costDurationMeasure);\n                                if (costNetItem.Value != null)\n                                    costNetValue = (decimal)costNetItem.Value;\n                                if (costDurationItem.Value != null)\n                                    costDurationValue = (decimal)costDurationItem.Value;\n                            }\n\n                            if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                            {\n                                var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                                newTable.EnableTableBorders();\n                                var newRow = newTable.CreateDataRow();\n                                var newTableCell = newRow.CreateCell();\n                                newTableCell.SetValue(\"Total\");\n                                context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalDurationCell = newRow.CreateCell();\n                                totalDurationCell.SetValue(totalDuration);\n                                context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalAmountCell = newRow.CreateCell();\n                                totalAmountCell.SetValue(totalAmount);\n                                context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalDuration = 0;\n                                totalAmount = 0;\n\n                                outgoingDataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                                outgoingDataTable.EnableTableBorders();\n                                currentOutgoingDataRow = outgoingDataTable.CreateDataRow();\n\n                                var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                                costDurationValueCell.SetValue(costDurationValue);\n                                context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += costDurationValue;\n\n                                var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                                costNetValueCell.SetValue(costNetValue);\n                                context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += costNetValue;\n                                columnIndexState += 7;\n\n                            }\n                            else\n                            {\n                                var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                                costDurationValueCell.SetValue(costDurationValue);\n                                context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += costDurationValue;\n\n                                var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                                costNetValueCell.SetValue(costNetValue);\n                                context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += costNetValue;\n                            }\n                            count++;\n                            currentDate = currentDate.AddMonths(1);\n                           \n                        }\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                else\n                {\n                    decimal costNetValue = 0;\n                    decimal costDurationValue = 0;\n\n                    foreach (var header in outgoingHeaders)\n                    {\n                        if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                        {\n                            var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                            newTable.EnableTableBorders();\n                            var newRow = newTable.CreateDataRow();\n                            var newTableCell = newRow.CreateCell();\n                            newTableCell.SetValue(\"Total\");\n                            context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalDurationCell = newRow.CreateCell();\n                            totalDurationCell.SetValue(totalDuration);\n                            context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalAmountCell = newRow.CreateCell();\n                            totalAmountCell.SetValue(totalAmount);\n                            context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalDuration = 0;\n                            totalAmount = 0;\n\n                            outgoingDataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                            outgoingDataTable.EnableTableBorders();\n                            currentOutgoingDataRow = outgoingDataTable.CreateDataRow();\n\n                            var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                            costDurationValueCell.SetValue(costDurationValue);\n                            context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += costDurationValue;\n\n                            var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                            costNetValueCell.SetValue(costNetValue);\n                            context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += costNetValue;\n                            columnIndexState += 7;\n\n                        }\n                        else\n                        {\n                            var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                            costDurationValueCell.SetValue(costDurationValue);\n                            context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += costDurationValue;\n\n                            var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                            costNetValueCell.SetValue(costNetValue);\n                            context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += costNetValue;\n                        }\n                        count++;\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n               \n                #endregion\n\n                #region Second Item\n\n                rowIndexState += 4;\n\n                var secondItemOutgoingTable = sheet.CreateTable(rowIndexState, 0);\n                secondItemOutgoingTable.EnableTableBorders();\n                var secondItemOutgoingRow = secondItemOutgoingTable.CreateDataRow();\n                var secondItemOutgoingCell = secondItemOutgoingRow.CreateCell();\n                secondItemOutgoingCell.SetValue(\"SADC\");\n                context.SetCellStyle(secondItemOutgoingCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                var outgoingQueryItem2 = context.GetDataList(\"OutgoingQuery2\", \"Main\");\n                string outgoingDataListIdentifier2 = string.Format(\"{0}_{1}\", \"OutgoingQuery2\", \"Main\");\n                outgoingQueryItem2.ThrowIfNull(\"dataList\", outgoingDataListIdentifier2);\n                outgoingQueryItem2.Items.ThrowIfNull(\"dataList.Items\", outgoingDataListIdentifier2);\n                outgoingQueryItem2.FieldInfos.ThrowIfNull(\"dataList.FieldInfos\", outgoingDataListIdentifier2);\n\n                count = 0;\n                outgoingDataTable = null;\n                currentOutgoingDataRow = secondItemOutgoingRow;\n\n                columnIndexState = 8;\n\n                totalAmount = 0;\n                totalDuration = 0;\n                currentDate = new DateTime(outgoingQueryItem2.From.Year, outgoingQueryItem2.From.Month, 1);\n\n                if(outgoingQueryItem2.Items!=null &amp;&amp; outgoingQueryItem2.Items.Count &gt; 0)\n                {\n                    for (int i = 0; i &lt; outgoingQueryItem2.Items.Count; i++)\n                    {\n                        var item = outgoingQueryItem2.Items[i];\n                        var monthItem = item.Fields.GetRecord(monthDimension);\n                        var monthItemDateTimeValue = (DateTime)monthItem.Value;\n\n                        DateTime toDate = monthItemDateTimeValue;\n                        if (i == outgoingQueryItem2.Items.Count - 1)\n                            toDate = outgoingQueryItem2.To;\n\n                        while (currentDate &lt;= toDate)\n                        {\n                            decimal costNetValue = 0;\n                            decimal costDurationValue = 0;\n\n                            if (currentDate.Year == monthItemDateTimeValue.Year &amp;&amp; currentDate.Month == monthItemDateTimeValue.Month)\n                            {\n                                var costNetItem = item.Fields.GetRecord(costNetMeasure);\n                                var costDurationItem = item.Fields.GetRecord(costDurationMeasure);\n                                if (costNetItem.Value != null)\n                                    costNetValue = (decimal)costNetItem.Value;\n                                if (costDurationItem.Value != null)\n                                    costDurationValue = (decimal)costDurationItem.Value;\n                            }\n\n                    
if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                            {\n                                var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                                newTable.EnableTableBorders();\n                                var newRow = newTable.CreateDataRow();\n                                var newTableCell = newRow.CreateCell();\n                                newTableCell.SetValue(\"Total\");\n                                context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalDurationCell = newRow.CreateCell();\n                                totalDurationCell.SetValue(totalDuration);\n                                context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalAmountCell = newRow.CreateCell();\n                                totalAmountCell.SetValue(totalAmount);\n                                context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalDuration = 0;\n                                totalAmount = 0;\n\n                                outgoingDataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                                outgoingDataTable.EnableTableBorders();\n                                currentOutgoingDataRow = outgoingDataTable.CreateDataRow();\n\n                                var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                                costDurationValueCell.SetValue(costDurationValue);\n                                context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += costDurationValue;\n\n                                var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                                costNetValueCell.SetValue(costNetValue);\n                                context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += costNetValue;\n                                columnIndexState += 7;\n\n                            }\n                            else\n                            {\n                                var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                                costDurationValueCell.SetValue(costDurationValue);\n                                context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += costDurationValue;\n\n                                var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                                costNetValueCell.SetValue(costNetValue);\n                                context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += costNetValue;\n                            }\n                            count++;\n                            currentDate = currentDate.AddMonths(1);\n                        }\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                else\n                {\n                    decimal costNetValue = 0;\n                    decimal costDurationValue = 0;\n\n                    foreach (var header in outgoingHeaders)\n                    {\n                        if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                        {\n                            var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                            newTable.EnableTableBorders();\n                            var newRow = newTable.CreateDataRow();\n                            var newTableCell = newRow.CreateCell();\n                            newTableCell.SetValue(\"Total\");\n                            context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalDurationCell = newRow.CreateCell();\n                            totalDurationCell.SetValue(totalDuration);\n                            context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalAmountCell = newRow.CreateCell();\n                            totalAmountCell.SetValue(totalAmount);\n                            context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalDuration = 0;\n                            totalAmount = 0;\n\n                            outgoingDataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                            outgoingDataTable.EnableTableBorders();\n                            currentOutgoingDataRow = outgoingDataTable.CreateDataRow();\n\n                            var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                            costDurationValueCell.SetValue(costDurationValue);\n                            context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += costDurationValue;\n\n                            var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                            costNetValueCell.SetValue(costNetValue);\n                            context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += costNetValue;\n                            columnIndexState += 7;\n\n                        }\n                        else\n                        {\n                            var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                            costDurationValueCell.SetValue(costDurationValue);\n                            context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += costDurationValue;\n\n                            var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                            costNetValueCell.SetValue(costNetValue);\n                            context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += costNetValue;\n                        }\n                        count++;\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n\n                }\n\n                #endregion\n\n                #region Third Item\n                rowIndexState += 4;\n\n                var thirdItemOutgoingTable = sheet.CreateTable(rowIndexState, 0);\n                thirdItemOutgoingTable.EnableTableBorders();\n                var thirdItemOutgoingRow = thirdItemOutgoingTable.CreateDataRow();\n                var thirdItemOutgoingCell = thirdItemOutgoingRow.CreateCell();\n                thirdItemOutgoingCell.SetValue(\"Rest of the World\");\n                context.SetCellStyle(thirdItemOutgoingCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                var outgoingQueryItem3 = context.GetDataList(\"OutgoingQuery3\", \"Main\");\n                string outgoingDataListIdentifier3 = string.Format(\"{0}_{1}\", \"OutgoingQuery3\", \"Main\");\n                outgoingQueryItem3.ThrowIfNull(\"dataList\", outgoingDataListIdentifier3);\n                outgoingQueryItem3.Items.ThrowIfNull(\"dataList.Items\", outgoingDataListIdentifier3);\n                outgoingQueryItem3.FieldInfos.ThrowIfNull(\"dataList.FieldInfos\", outgoingDataListIdentifier3);\n\n                count = 0;\n                outgoingDataTable = null;\n                currentOutgoingDataRow = thirdItemOutgoingRow;\n\n                columnIndexState = 8;\n\n                totalAmount = 0;\n                totalDuration = 0;\n                currentDate = new DateTime(outgoingQueryItem3.From.Year, outgoingQueryItem3.From.Month, 1);\n                if(outgoingQueryItem3.Items!=null &amp; outgoingQueryItem3.Items.Count &gt; 0)\n                {\n                    for (int i = 0; i &lt; outgoingQueryItem3.Items.Count; i++)\n                    {\n                        var item = outgoingQueryItem3.Items[i];\n                        var monthItem = item.Fields.GetRecord(monthDimension);\n                        var monthItemDateTimeValue = (DateTime)monthItem.Value;\n\n                        DateTime toDate = monthItemDateTimeValue;\n                        if (i == outgoingQueryItem3.Items.Count - 1)\n                            toDate = outgoingQueryItem3.To;\n\n                        while (currentDate &lt;= toDate)\n                        {\n                            decimal costNetValue = 0;\n                            decimal costDurationValue = 0;\n\n                            if (currentDate.Year == monthItemDateTimeValue.Year &amp;&amp; currentDate.Month == monthItemDateTimeValue.Month)\n                            {\n                                var costNetItem = item.Fields.GetRecord(costNetMeasure);\n                                var costDurationItem = item.Fields.GetRecord(costDurationMeasure);\n                                if (costNetItem.Value != null)\n                                    costNetValue = (decimal)costNetItem.Value;\n                                if (costDurationItem.Value != null)\n                                    costDurationValue = (decimal)costDurationItem.Value;\n                            }\n\n                            if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                            {\n                                var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                                newTable.EnableTableBorders();\n                                var newRow = newTable.CreateDataRow();\n                                var newTableCell = newRow.CreateCell();\n                                newTableCell.SetValue(\"Total\");\n                                context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalDurationCell = newRow.CreateCell();\n                                totalDurationCell.SetValue(totalDuration);\n                                context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                var totalAmountCell = newRow.CreateCell();\n                                totalAmountCell.SetValue(totalAmount);\n                                context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalDuration = 0;\n                                totalAmount = 0;\n\n                                outgoingDataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                                outgoingDataTable.EnableTableBorders();\n                                currentOutgoingDataRow = outgoingDataTable.CreateDataRow();\n\n                                var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                                costDurationValueCell.SetValue(costDurationValue);\n                                context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += costDurationValue;\n\n                                var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                                costNetValueCell.SetValue(costNetValue);\n                                context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += costNetValue;\n                                columnIndexState += 7;\n\n                            }\n                            else\n                            {\n                                var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                                costDurationValueCell.SetValue(costDurationValue);\n                                context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                                totalDuration += costDurationValue;\n\n                                var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                                costNetValueCell.SetValue(costNetValue);\n                                context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                                totalAmount += costNetValue;\n                            }\n                            count++;\n                            currentDate = currentDate.AddMonths(1);\n                        }\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                else\n                {\n                    decimal costNetValue = 0;\n                    decimal costDurationValue = 0;\n\n                    foreach (var header in outgoingHeaders)\n                    {\n                        if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                        {\n                            var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                            newTable.EnableTableBorders();\n                            var newRow = newTable.CreateDataRow();\n                            var newTableCell = newRow.CreateCell();\n                            newTableCell.SetValue(\"Total\");\n                            context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalDurationCell = newRow.CreateCell();\n                            totalDurationCell.SetValue(totalDuration);\n                            context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            var totalAmountCell = newRow.CreateCell();\n                            totalAmountCell.SetValue(totalAmount);\n                            context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalDuration = 0;\n                            totalAmount = 0;\n\n                            outgoingDataTable = sheet.CreateTable(rowIndexState, columnIndexState);\n                            outgoingDataTable.EnableTableBorders();\n                            currentOutgoingDataRow = outgoingDataTable.CreateDataRow();\n\n                            var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                            costDurationValueCell.SetValue(costDurationValue);\n                            context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += costDurationValue;\n\n                            var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                            costNetValueCell.SetValue(costNetValue);\n                            context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += costNetValue;\n                            columnIndexState += 7;\n\n                        }\n                        else\n                        {\n                            var costDurationValueCell = currentOutgoingDataRow.CreateCell();\n                            costDurationValueCell.SetValue(costDurationValue);\n                            context.SetCellStyle(costDurationValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n                            totalDuration += costDurationValue;\n\n                            var costNetValueCell = currentOutgoingDataRow.CreateCell();\n                            costNetValueCell.SetValue(costNetValue);\n                            context.SetCellStyle(costNetValueCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                            totalAmount += costNetValue;\n                        }\n                        count++;\n                    }\n                    if (count &gt; 0 &amp;&amp; count % 3 == 0)\n                    {\n                        var newTable = sheet.CreateTable(rowIndexState + 2, columnIndexState - 4);\n                        newTable.EnableTableBorders();\n                        var newRow = newTable.CreateDataRow();\n                        var newTableCell = newRow.CreateCell();\n                        newTableCell.SetValue(\"Total\");\n                        context.SetCellStyle(newTableCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalDurationCell = newRow.CreateCell();\n                        totalDurationCell.SetValue(totalDuration);\n                        context.SetCellStyle(totalDurationCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        var totalAmountCell = newRow.CreateCell();\n                        totalAmountCell.SetValue(totalAmount);\n                        context.SetCellStyle(totalAmountCell, \"White\", \"Black\", 8, true, VRExcelContainerHorizontalAlignment.Center);\n\n                        totalDuration = 0;\n                        totalAmount = 0;\n                    }\n                }\n                \n                #endregion\n\n                #endregion\n\nreturn vrExcelFile.GenerateExcelFile();"}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[ConfigID],[Settings]))
merge	[common].[VRComponentType] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[ConfigID] = s.[ConfigID],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[ConfigID],[Settings])
	values(s.[ID],s.[Name],s.[ConfigID],s.[Settings]);



		
--[common].[Connection]-----------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('86D4A5E8-804A-4461-B3AE-7CDE32DBE6DF','SMS Integration Connection','{"$type":"Vanrise.Common.Business.SQLConnection, Vanrise.Common.Business","ConfigId":"8224b27c-c128-4150-a4e4-5e2034bb3a36","ConnectionString":"Server=xxxx;Database=xxxx;User ID=xxxxx;Password=xxxxx"}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Settings]))
merge	[common].[Connection] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Name] = s.[Name],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[Settings])
	values(s.[ID],s.[Name],s.[Settings]);


--[common].[Setting]---------------------------------------101 to 200----------------------------------------

;with cte_data([ID],[Name],[Type],[Category],[Settings],[Data],[IsTechnical])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('26AA64F9-67C3-4BF6-BE94-6D59030B9BE3','System SMS','VR_Common_SMS','General','{"Editor":"vr-common-smstemplate-settings-editor"}','{"$type":"Vanrise.Entities.SMSSettingData, Vanrise.Entities","SMSSendHandler":{"$type":"Vanrise.Entities.SMSSendHandler, Vanrise.Entities","Settings":{"$type":"Vanrise.Common.MainExtensions.SMSSendHandler.ExecuteDatabaseCommandSMSHandler, Vanrise.Common.MainExtensions","ConfigId":"44e97625-1b35-478a-918e-60f9c58678b4","VRConnectionId":"86d4a5e8-804a-4461-b3ae-7cde32dbe6df","CommandQuery":"insert into [dbo].[cg_subs_sms_instant] ([mobilenum],[message], [timein], [status],[type])\nvalues(''#MobileNumber#'',''#Message#'',getDate(),''N'',''R'')"}}}',0)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Type],[Category],[Settings],[Data],[IsTechnical]))
merge	[common].[Setting] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Name] = s.[Name],[Type] = s.[Type],[Category] = s.[Category],[Settings] = s.[Settings],[Data] = s.[Data],[IsTechnical] = s.[IsTechnical]
when not matched by target then
	insert([ID],[Name],[Type],[Category],[Settings],[Data],[IsTechnical])
	values(s.[ID],s.[Name],s.[Type],s.[Category],s.[Settings],s.[Data],s.[IsTechnical]);



	--[common].[SMSMessageTemplate]---------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[SMSMessageTypeId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('41924F3E-2DDF-41AE-B75A-84052CF9993D','Account Balance SMS','6937C4EC-5377-4F71-97A1-AE5EE4710282','{"$type":"Vanrise.Entities.SMSMessageTemplateSettings, Vanrise.Entities","MobileNumber":{"$type":"Vanrise.Entities.VRExpression, Vanrise.Entities","ExpressionString":"@Model.GetVal(\"Customer\",\"SMS Phone Numbers\")"},"Message":{"$type":"Vanrise.Entities.VRExpression, Vanrise.Entities","ExpressionString":"Dear @Model.GetVal(\"Customer\",\"Customer Name\"),\nYour balance is: @Model.GetVal(\"AccountBalance\",\"Value\")"}}',95,95,'2018-05-03 11:10:53.667'),
('59B232A4-BAF1-4D49-8CAC-BFFCC6006230','Profile Balance SMS','57608C11-1C43-489B-997C-FF6E8B1314C0','{"$type":"Vanrise.Entities.SMSMessageTemplateSettings, Vanrise.Entities","MobileNumber":{"$type":"Vanrise.Entities.VRExpression, Vanrise.Entities","ExpressionString":"@Model.GetVal(\"Profile\",\"SMS Phone Numbers\")"},"Message":{"$type":"Vanrise.Entities.VRExpression, Vanrise.Entities","ExpressionString":"Dear @Model.GetVal(\"Profile\",\"Carrier Name\"),\nYour balance is: @Model.GetVal(\"AccountBalance\",\"Value\")"}}',95,95,'2018-05-03 11:12:05.407')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[SMSMessageTypeId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime]))
merge	[common].[SMSMessageTemplate] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Name] = s.[Name],[SMSMessageTypeId] = s.[SMSMessageTypeId],[Settings] = s.[Settings],[CreatedBy] = s.[CreatedBy],[LastModifiedBy] = s.[LastModifiedBy],[LastModifiedTime] = s.[LastModifiedTime]
when not matched by target then
	insert([ID],[Name],[SMSMessageTypeId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime])
	values(s.[ID],s.[Name],s.[SMSMessageTypeId],s.[Settings],s.[CreatedBy],s.[LastModifiedBy],s.[LastModifiedTime]);



