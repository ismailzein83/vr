/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
delete from [common].[extensionconfiguration] where [ConfigType] = 'WhS_RouteSync_SwitchRouteSynchronizer'
--[common].[extensionconfiguration]---------------------------------------------------------------------beginset nocount on;;with cte_data([ID],[Name],[Title],[ConfigType],[Settings])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////('1EE51230-FE31-4D01-9289-0E27E24D3601','WhS_RouteSync_SwitchRouteSynchronizer_BuiltInIVSwitch','CloudXPoint Switch Synchronizer','WhS_RouteSync_SwitchRouteSynchronizer','{"Editor":"whs-routesync-builtinivswitch-swsync"}')--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([ID],[Name],[Title],[ConfigType],[Settings]))merge	[common].[extensionconfiguration] as tusing	cte_data as son		1=1 and t.[ID] = s.[ID]when matched then	update set	[Name] = s.[Name],[Title] = s.[Title],[ConfigType] = s.[ConfigType],[Settings] = s.[Settings]when not matched by target then	insert([ID],[Name],[Title],[ConfigType],[Settings])	values(s.[ID],s.[Name],s.[Title],s.[ConfigType],s.[Settings]);----------------------------------------------------------------------------------------------------endDelete from [TOneWhS_BE].[Switch] where [ID]>1--[TOneWhS_BE].[Switch]---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------set nocount on;set identity_insert [TOneWhS_BE].[Switch] on;;with cte_data([ID],[Name],[Settings],[SourceID])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////(1,'IVSwitch','{"$type":"TOne.WhS.BusinessEntity.Entities.SwitchSettings, TOne.WhS.BusinessEntity.Entities","RouteSynchronizer":{"$type":"TOne.WhS.RouteSync.IVSwitch.BuiltInIVSwitchSWSync, TOne.WhS.RouteSync.IVSwitch","ConfigId":"1ee51230-fe31-4d01-9289-0e27e24d3601","OwnerName":"postgres","MasterConnectionString":"Server=192.168.110.185;Database=ustn_master;Userid=postgres;Password=postgres;","RouteConnectionString":"Server=192.168.110.185;Database=ustn_route_tables;Userid=postgres;Password=postgres;","TariffConnectionString":"Server=192.168.110.185;Database=ustn_tariffs;Userid=postgres;Password=postgres;","NumberOfOptions":4,"BlockedAccountMapping":"941","Uid":"23ae4765-bbf5-4466-0ef3-c953e562a82d"},"SwitchCDRMappingConfiguration":{"$type":"TOne.WhS.BusinessEntity.Entities.SwitchCDRMappingConfiguration, TOne.WhS.BusinessEntity.Entities"}}',null)--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([ID],[Name],[Settings],[SourceID]))merge	[TOneWhS_BE].[Switch] as tusing	cte_data as son		1=1 and t.[ID] = s.[ID]when matched then	update set	[Name] = s.[Name],[Settings] = s.[Settings],[SourceID] = s.[SourceID]when not matched by target then	insert([ID],[Name],[Settings],[SourceID])	values(s.[ID],s.[Name],s.[Settings],s.[SourceID]);set identity_insert [TOneWhS_BE].[Switch] off;