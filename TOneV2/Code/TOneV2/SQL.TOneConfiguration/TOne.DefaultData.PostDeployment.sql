/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--default data

--[common].[Currency]-------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [common].[Currency] on;
;with cte_data([ID],[Symbol],[Name],[SourceID])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(155,'USD','United States Dollars','USD')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Symbol],[Name],[SourceID]))
merge	[common].[Currency] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Symbol] = s.[Symbol],[Name] = s.[Name],[SourceID] = s.[SourceID]
when not matched by target then
	insert([ID],[Symbol],[Name],[SourceID])
	values(s.[ID],s.[Symbol],s.[Name],s.[SourceID]);
set identity_insert [common].[Currency] off;

UPDATE  [common].[Setting] 
SET		[Data] = '{"$type":"Vanrise.Entities.CurrencySettingData, Vanrise.Entities","CurrencyId":155}'
WHERE	ID='1C833B2D-8C97-4CDD-A1C1-C1B4D9D299DE' and [Data] is null

--declare @TariffRuleTypeIdTable as table
--(ID int)
--insert into @TariffRuleTypeIdTable 
--exec [rules].[sp_RuleType_InsertIfNotExistsAndGetID] 'Vanrise.GenericData.Pricing.TariffRule' 

--declare @TariffRuleTypeId int
--select @TariffRuleTypeId=ID from @TariffRuleTypeIdTable
----[rules].[Rule]------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
--set nocount on;
--;with cte_data([TypeID],[RuleDetails],[BED],[EED],[SourceID])
--as (select * from (values
----//////////////////////////////////////////////////////////////////////////////////////////////////
--(@TariffRuleTypeId,'{"$type":"Vanrise.GenericData.Pricing.TariffRule, Vanrise.GenericData.Pricing","Settings":{"$type":"Vanrise.Rules.Pricing.MainExtensions.Tariff.RegularTariffSettings, Vanrise.Rules.Pricing.MainExtensions","ConfigId":"35acc9c2-0675-4347-ba3e-a81025c1be12","CallFee":0.0,"FirstPeriod":0,"FirstPeriodRate":0.0,"FractionUnit":0,"PricingUnit":60,"CurrencyId":155},"DefinitionId":"f24cb510-0b65-48c8-a723-1f6ebfeea9e8","RuleId":0,"Description":"Default Sale Tariff Rule","BeginEffectiveTime":"2016-12-23T00:00:00","RefreshTimeSpan":"01:00:00"}','2010-01-01 00:00:00.000',null,null),
--(@TariffRuleTypeId,'{"$type":"Vanrise.GenericData.Pricing.TariffRule, Vanrise.GenericData.Pricing","Settings":{"$type":"Vanrise.Rules.Pricing.MainExtensions.Tariff.RegularTariffSettings, Vanrise.Rules.Pricing.MainExtensions","ConfigId":"35acc9c2-0675-4347-ba3e-a81025c1be12","CallFee":0.0,"FirstPeriod":0,"FirstPeriodRate":0.0,"FractionUnit":0,"PricingUnit":60,"CurrencyId":155},"DefinitionId":"5aeb0dad-4bb8-44b4-acbe-c8c917e88b58","RuleId":0,"Description":"Default Purchase Tariff Rule","BeginEffectiveTime":"2016-12-23T00:00:00","RefreshTimeSpan":"01:00:00"}','2010-01-01 00:00:00.000',null,null)
----\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
--)c([TypeID],[RuleDetails],[BED],[EED],[SourceID]))
--merge	[rules].[Rule] as t
--using	cte_data as s
--on		1=1 and t.[RuleDetails] = s.[RuleDetails]
----when matched then
----	update set
----	[TypeID] = s.[TypeID],[RuleDetails] = s.[RuleDetails],[BED] = s.[BED],[EED] = s.[EED],[SourceID] = s.[SourceID]
--when not matched by target then
--	insert([TypeID],[RuleDetails],[BED],[EED],[SourceID])
--	values(s.[TypeID],s.[RuleDetails],s.[BED],s.[EED],s.[SourceID]);

--[TOneWhS_BE].[ZoneServiceConfig]------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [TOneWhS_BE].[ZoneServiceConfig] on;
;with cte_data([ID],[Symbol],[Settings],[SourceID])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(1,'WHS','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Wholesale","Color":"#C0C0C0","Description":"Wholesale Marker","Weight":1}','1'),
(2,'RTL','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Retail","Color":"#0000FF","Description":"Retail Flagged Service","Weight":2}','2'),
(3,'PRM','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Premium","Color":"#FFA500","Description":"Premium Quality Service","Weight":4}','4'),
(4,'CLI','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"CLI","Color":"#FF0000","Description":"CLI Provided Service","Weight":8}','8'),
(5,'DRC','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Direct","Color":"#000C00","Description":"Direct Connection","Weight":16}','16'),
(6,'TRS','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Transit","Color":"#FFFF00","Description":"Transit Connections (Like in Ministries)","Weight":32}','32'),
(7,'VID','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"Video","Color":"#800000","Description":"Video-Able Service","Weight":64}','64'),
(8,'3GM','{"$type":"TOne.WhS.BusinessEntity.Entities.ServiceConfigSetting, TOne.WhS.BusinessEntity.Entities","Name":"3GM Mobile Service","Color":"#000000","Description":"3rd Generation Mobile Able Service","Weight":128}','128')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Symbol],[Settings],[SourceID]))
merge	[TOneWhS_BE].[ZoneServiceConfig] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Symbol] = s.[Symbol],[Settings] = s.[Settings],[SourceID] = s.[SourceID]
when not matched by target then
	insert([ID],[Symbol],[Settings],[SourceID])
	values(s.[ID],s.[Symbol],s.[Settings],s.[SourceID]);
set identity_insert [TOneWhS_BE].[ZoneServiceConfig] off;

--[TOneWhS_BE].[SellingNumberPlan]------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [TOneWhS_BE].[SellingNumberPlan] on;
;with cte_data([ID],[Name])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(1,'Default')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name]))
merge	[TOneWhS_BE].[SellingNumberPlan] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Name] = s.[Name]
when not matched by target then
	insert([ID],[Name])
	values(s.[ID],s.[Name]);
set identity_insert [TOneWhS_BE].[SellingNumberPlan] off;

--[TOneWhS_BE].[SellingProduct]---------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [TOneWhS_BE].[SellingProduct] on;
;with cte_data([ID],[Name],[DefaultRoutingProductID],[SellingNumberPlanID],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(1,'Default',null,1,'{"$type":"TOne.WhS.BusinessEntity.Entities.SellingProductSettings, TOne.WhS.BusinessEntity.Entities","CurrencyId":155}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[DefaultRoutingProductID],[SellingNumberPlanID],[Settings]))
merge	[TOneWhS_BE].[SellingProduct] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Name] = s.[Name],[DefaultRoutingProductID] = s.[DefaultRoutingProductID],[SellingNumberPlanID] = s.[SellingNumberPlanID],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[DefaultRoutingProductID],[SellingNumberPlanID],[Settings])
	values(s.[ID],s.[Name],s.[DefaultRoutingProductID],s.[SellingNumberPlanID],s.[Settings]);
set identity_insert [TOneWhS_BE].[SellingProduct] off;

--[TOneWhS_BE].[RoutingProduct]---------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
set identity_insert [TOneWhS_BE].[RoutingProduct] on;
;with cte_data([ID],[Name],[SellingNumberPlanID],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(1,'LCR',1,'{"$type":"TOne.WhS.BusinessEntity.Entities.RoutingProductSettings, TOne.WhS.BusinessEntity.Entities","DefaultServiceIds":{"$type":"System.Collections.Generic.HashSet`1[[System.Int32, mscorlib]], System.Core","$values":[1]},"ZoneRelationType":0,"SupplierRelationType":0}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[SellingNumberPlanID],[Settings]))
merge	[TOneWhS_BE].[RoutingProduct] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
--when matched then
--	update set
--	[Name] = s.[Name],[SellingNumberPlanID] = s.[SellingNumberPlanID],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[SellingNumberPlanID],[Settings])
	values(s.[ID],s.[Name],s.[SellingNumberPlanID],s.[Settings]);
set identity_insert [TOneWhS_BE].[RoutingProduct] off;


DECLARE	@SaleEntityRoutingProductTypeId int
declare @SaleEntityRoutingProductTypeIdTable as table (TypeId int)
insert into @SaleEntityRoutingProductTypeIdTable exec [common].[sp_Type_InsertIfNotExistsAndGetID] 'TOne.WhS.BusinessEntity.Business.SaleEntityRoutingProductManager, TOne.WhS.BusinessEntity.Business, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
SELECT	@SaleEntityRoutingProductTypeId = TypeId from @SaleEntityRoutingProductTypeIdTable

declare @SaleEntityRoutingProductIdTable as table
(ID bigint)
insert into @SaleEntityRoutingProductIdTable 
exec [common].[sp_IDManager_ReserveIDRange] @SaleEntityRoutingProductTypeId, 1

declare @SaleEntityRoutingProductId bigint
select @SaleEntityRoutingProductId=ID from @SaleEntityRoutingProductIdTable

--[TOneWhS_BE].[SaleEntityRoutingProduct]-----------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[OwnerType],[OwnerID],[ZoneID],[RoutingProductID],[BED],[EED])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(@SaleEntityRoutingProductId,0,1,null,1,'2000-01-01 00:00:00.000',null)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[OwnerType],[OwnerID],[ZoneID],[RoutingProductID],[BED],[EED]))
merge	[TOneWhS_BE].[SaleEntityRoutingProduct] as t
using	cte_data as s
on		1=1 and t.[OwnerType]=s.[OwnerType] and t.[RoutingProductID] = s.[RoutingProductID] and t.[ZoneID] is null
--when matched then
--	update set
--	[OwnerType] = s.[OwnerType],[OwnerID] = s.[OwnerID],[ZoneID] = s.[ZoneID],[RoutingProductID] = s.[RoutingProductID],[BED] = s.[BED],[EED] = s.[EED]
when not matched by target then
	insert([ID],[OwnerType],[OwnerID],[ZoneID],[RoutingProductID],[BED],[EED])
	values(s.[ID],s.[OwnerType],s.[OwnerID],s.[ZoneID],s.[RoutingProductID],s.[BED],s.[EED]);

declare @RouteRuleTypeIdTable as table
(ID int)
insert into @RouteRuleTypeIdTable 
exec [rules].[sp_RuleType_InsertIfNotExistsAndGetID] 'TOne.WhS.Routing.Entities.RouteRule' 

declare @RouteRuleTypeId int
select @RouteRuleTypeId=ID from @RouteRuleTypeIdTable
--[rules].[Rule]------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([TypeID],[RuleDetails],[BED],[EED],[SourceID])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
(@RouteRuleTypeId,'{"$type":"TOne.WhS.Routing.Entities.RouteRule, TOne.WhS.Routing.Entities","Criteria":{"$type":"TOne.WhS.Routing.Entities.RouteRuleCriteria, TOne.WhS.Routing.Entities","ConfigId":"6fd3f59f-33f1-4d42-8364-7030ae79b249","RoutingProductId":1,"ExcludedCodes":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":[]}},"Settings":{"$type":"TOne.WhS.Routing.Business.LCRRouteRule, TOne.WhS.Routing.Business","ConfigId":"31b3226e-a2b2-40d5-8c33-83c6601e8730","UseOrderedExecution":true,"CorrespondentType":3},"CorrespondentType":3,"BED":"2000-01-01T00:00:00","RuleId":0,"BeginEffectiveTime":"2000-01-01T00:00:00","RefreshTimeSpan":"01:00:00"}','2000-01-01 00:00:00.000',null,'Default route rule (from script)')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([TypeID],[RuleDetails],[BED],[EED],[SourceID]))
merge	[rules].[Rule] as t
using	cte_data as s
on		1=1 and t.[SourceID] = s.[SourceID]
--when matched then
--	update set
--	[TypeID] = s.[TypeID],[RuleDetails] = s.[RuleDetails],[BED] = s.[BED],[EED] = s.[EED],[SourceID] = s.[SourceID]
when not matched by target then
	insert([TypeID],[RuleDetails],[BED],[EED],[SourceID])
	values(s.[TypeID],s.[RuleDetails],s.[BED],s.[EED],s.[SourceID]);

--[TOneWhS_BE].[SalePriceListTemplate]--------------------------------------------------------------
----------------------------------------------------------------------------------------------------
DECLARE @DefaultSalePriceListTemplate_identity bigint
SELECT @DefaultSalePriceListTemplate_identity = [ID] FROM [common].[File] WHERE [Name] = 'Sale Pricelist Template.xlsx'
IF @DefaultSalePriceListTemplate_identity IS NULL
BEGIN
	insert into [common].[File] ([Name],[Extension],[Content],[IsUsed])
	values('Sale Pricelist Template.xlsx','xlsx', 

	select @DefaultSalePriceListTemplate_identity = SCOPE_IDENTITY()
END

set nocount on;
;with cte_data([Name],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('Pricelist Template (Default)','{"$type":"TOne.WhS.BusinessEntity.MainExtensions.BasicSalePriceListTemplateSettings, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"9da89204-193a-4fe1-8416-98f1620848b0","TemplateFileId":'+CONVERT(varchar(50), @DefaultSalePriceListTemplate_identity) +',"MappedTables":{"$type":"System.Collections.Generic.List`1[[TOne.WhS.BusinessEntity.MainExtensions.MappedTable, TOne.WhS.BusinessEntity.MainExtensions]], mscorlib","$values":[{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedTable, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"4ebe3013-2a48-41bd-97d6-57286759b907","SheetIndex":0,"FirstRowIndex":2,"MappedColumns":{"$type":"System.Collections.Generic.List`1[[TOne.WhS.BusinessEntity.MainExtensions.MappedColumn, TOne.WhS.BusinessEntity.MainExtensions]], mscorlib","$values":[{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":0},"ColumnIndex":0},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":1},"ColumnIndex":1},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":2},"ColumnIndex":2},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":3},"ColumnIndex":3},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":4},"ColumnIndex":4},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":5},"ColumnIndex":5},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":6},"ColumnIndex":6},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":7},"ColumnIndex":7},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":8},"ColumnIndex":8},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":11},"ColumnIndex":9},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowBEFieldMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"930fb07f-e599-4324-ac59-baab800adc0e","BEField":9},"ColumnIndex":10},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowOtherRatesMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"70500270-0bfd-4aea-a20a-969ba0f6489b","RateTypeId":-1},"ColumnIndex":11},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowOtherRatesMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"70500270-0bfd-4aea-a20a-969ba0f6489b","RateTypeId":-2},"ColumnIndex":12},{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowMappedColumn, TOne.WhS.BusinessEntity.MainExtensions","MappedValue":{"$type":"TOne.WhS.BusinessEntity.MainExtensions.CodeOnEachRowOtherRatesMappedValue, TOne.WhS.BusinessEntity.MainExtensions","ConfigId":"70500270-0bfd-4aea-a20a-969ba0f6489b","RateTypeId":-3},"ColumnIndex":13}]}}]},"DateTimeFormat":"yyyy-MM-dd"}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([Name],[Settings]))
merge	[TOneWhS_BE].[SalePriceListTemplate] as t
using	cte_data as s
on		1=1 and t.[Name] = s.[Name]
--when matched then
--	update set
--	[Name] = s.[Name],[Settings] = s.[Settings]
when not matched by target then
	insert([Name],[Settings])
	values(s.[Name],s.[Settings]);

--update template id in 'Sale Area' setting
DECLARE @Setting_Sale_Area_identity int
SELECT @Setting_Sale_Area_identity=ID FROM [TOneWhS_BE].[SalePriceListTemplate] WHERE [Name] = 'Pricelist Template (Default)'

UPDATE  [common].[Setting] 
SET		[Data] = Replace([Data],'DefaultSalePLTemplateId":null','DefaultSalePLTemplateId":'+CONVERT(nvarchar(50), @Setting_Sale_Area_identity))
where	[ID] = '1ED6B46A-8541-4059-A42F-CDD62B0927E2'

--[runtime].[ScheduleTask]------------------------------------------------------------------------------------------------------------------------------------------------------------------------------set nocount on;;with cte_data([Id],[Name],[IsEnabled],[TaskType],[TriggerTypeId],[ActionTypeId],[TaskSettings],[OwnerId])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////('AF00B1E8-D232-4175-9093-FE54688E483D','Update ExchangeRate On CDR and Analytics Databases',1,1,'295B4FAC-DBF9-456F-855E-60D0B176F86B','0A15BC35-A3A7-4ED3-B09B-1B41A7A9DDC9','{"$type":"Vanrise.Runtime.Entities.SchedulerTaskSettings, Vanrise.Runtime.Entities","TaskActionArgument":{"$type":"Vanrise.Common.MainExtensions.ExchangeRateTaskActionArgument, Vanrise.Common.MainExtensions","ConnectionStrings":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.ConnectionStringSetting, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.ConnectionStringSetting, Vanrise.Entities","ConnectionStringName":"TOneCDRDBConnString"},{"$type":"Vanrise.Entities.ConnectionStringSetting, Vanrise.Entities","ConnectionStringName":"TOneAnalyticsDBConnString"}]},"EnableRateUpdate":false},"TaskTriggerArgument":{"$type":"Vanrise.Runtime.Triggers.TimeTaskTrigger.Arguments.IntervalTimeTaskTriggerArgument, Vanrise.Runtime.Triggers.TimeTaskTrigger.Arguments","Interval":5.0,"IntervalType":0,"TimerTriggerTypeFQTN":"Vanrise.Runtime.Triggers.TimeTaskTrigger.IntervalTimeSchedulerTaskTrigger, Vanrise.Runtime.Triggers.TimeTaskTrigger","IgnoreSkippedIntervals":true},"StartEffDate":"2018-01-01T00:00:00"}',1)--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([Id],[Name],[IsEnabled],[TaskType],[TriggerTypeId],[ActionTypeId],[TaskSettings],[OwnerId]))merge	[runtime].[ScheduleTask] as tusing	cte_data as son		1=1 and t.[Id] = s.[Id]--when matched then--	update set--	[Name] = s.[Name],[IsEnabled] = s.[IsEnabled],[TaskType] = s.[TaskType],[TriggerTypeId] = s.[TriggerTypeId],[ActionTypeId] = s.[ActionTypeId],[TaskSettings] = s.[TaskSettings],[OwnerId] = s.[OwnerId]when not matched by target then	insert([Id],[Name],[IsEnabled],[TaskType],[TriggerTypeId],[ActionTypeId],[TaskSettings],[OwnerId])	values(s.[Id],s.[Name],s.[IsEnabled],s.[TaskType],s.[TriggerTypeId],s.[ActionTypeId],s.[TaskSettings],s.[OwnerId]);

--end Default data