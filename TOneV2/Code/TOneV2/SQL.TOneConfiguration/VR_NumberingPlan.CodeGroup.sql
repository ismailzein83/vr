/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--[VR_NumberingPlan].[CodeGroup]-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------set nocount on;set identity_insert [VR_NumberingPlan].[CodeGroup] on;;with cte_data([ID],[CountryID],[Code])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////(1,1,'93'),(2,2,'355'),(3,3,'213'),(4,4,'1684'),(5,5,'376'),(6,6,'244'),(7,7,'1264'),(8,8,'88234'),(9,9,'672'),(10,10,'1268'),(11,11,'54'),(12,12,'374'),(13,13,'297'),(14,14,'247'),(15,15,'43'),(16,16,'994'),(17,17,'1242'),(18,18,'973'),(19,19,'880'),(20,20,'1246'),(21,21,'375'),(22,22,'32'),(23,23,'501'),(24,24,'229'),(25,25,'1441'),(26,26,'975'),(27,27,'591'),(28,28,'387'),(29,29,'267'),(30,30,'55'),(31,31,'246'),(32,32,'1284'),(33,33,'673'),(34,34,'359'),(35,35,'226'),(36,36,'257'),(37,37,'855'),(38,38,'237'),(39,39,'238'),(40,40,'1345'),(41,41,'236'),(42,42,'235'),(43,43,'56'),(44,44,'86'),(45,45,'61'),(46,46,'57'),(47,47,'269'),(48,48,'682'),(49,49,'506'),(50,50,'385'),(51,51,'53'),(52,52,'599'),(53,53,'357'),(54,54,'420'),(55,55,'243'),(56,56,'45'),(57,57,'253'),(58,58,'1767'),(59,59,'1809'),(60,59,'1829'),(61,59,'1849'),(62,60,'670'),(63,61,'593'),(64,62,'20'),(65,63,'503'),(66,64,'8812'),(67,64,'8813'),(68,65,'88213'),(69,66,'240'),(70,67,'291'),(71,68,'372'),(72,69,'251'),(73,70,'388'),(74,71,'500'),(75,72,'298'),(76,73,'679'),(77,74,'358'),(78,75,'33'),(79,76,'596'),(80,77,'594'),(81,78,'689'),(82,79,'241'),(83,80,'220'),(84,81,'995'),(85,82,'49'),(86,83,'233'),(87,84,'350'),(88,85,'881'),(89,86,'882'),(90,87,'8818'),(91,87,'8819'),(92,88,'30'),(93,89,'299'),(94,90,'1473'),(95,91,'590'),(96,92,'1671'),(97,93,'5399'),(98,94,'502'),(99,95,'224'),(100,96,'245'),(101,97,'592'),(102,98,'509'),(103,99,'504'),(104,100,'852'),(105,101,'36'),(106,102,'354'),(107,103,'8810'),(108,104,'91'),(109,105,'62'),(110,106,'871'),(111,107,'874'),(112,108,'873'),(113,109,'872'),(114,110,'87'),(115,111,'870'),(116,112,'800'),(117,113,'883'),(118,114,'98'),(119,115,'964'),(120,116,'353'),(121,117,'225'),(122,118,'1876'),(123,119,'81'),(124,120,'962'),(125,121,'254'),(126,122,'686'),(127,123,'850'),(128,124,'82'),(129,125,'965'),(130,126,'996'),(131,127,'856'),(132,128,'371'),(133,129,'961'),(134,130,'266'),(135,131,'231'),(136,132,'218'),(137,133,'423'),(138,134,'370'),(139,135,'352'),(140,136,'853'),(141,137,'389'),(142,138,'261'),(143,139,'265'),(144,140,'60'),(145,141,'960'),(146,142,'223'),(147,143,'356'),(148,144,'692'),(149,145,'222'),(150,146,'230'),(151,147,'52'),(152,148,'691'),(153,149,'6998'),(154,150,'373'),(155,151,'377'),(156,152,'976'),(157,153,'382'),(158,154,'1664'),(159,155,'212'),(160,156,'258'),(161,157,'95'),(162,158,'264'),(163,159,'674'),(164,160,'977'),(165,161,'31'),(166,162,'687'),(167,163,'64'),(168,164,'505'),(169,165,'227'),(170,166,'234'),(171,167,'683'),(172,168,'969'),(173,169,'1670'),(174,170,'47'),(175,171,'968'),(176,172,'92'),(177,173,'972'),(178,174,'680'),(179,175,'970'),(180,176,'507'),(181,177,'675'),(182,178,'595'),(183,179,'51'),(184,180,'63'),(185,181,'48'),(186,182,'351'),(187,183,'1787'),(188,183,'1939'),(189,184,'974'),(190,185,'242'),(191,186,'262'),(192,187,'40'),(193,188,'7'),(194,189,'250'),(195,190,'685'),(196,191,'378'),(197,192,'239'),(198,193,'966'),(199,194,'221'),(200,195,'381'),(201,196,'248'),(202,197,'232'),(203,198,'65'),(204,199,'421'),(205,200,'386'),(206,201,'677'),(207,202,'252'),(208,203,'27'),(209,204,'211'),(210,205,'34'),(211,206,'94'),(212,207,'290'),(213,208,'1869'),(214,209,'1758'),(215,210,'508'),(216,211,'1784'),(217,212,'249'),(218,213,'597'),(219,214,'268'),(220,215,'46'),(221,216,'41'),(222,217,'963'),(223,218,'886'),(224,219,'992'),(225,220,'255'),(226,221,'888'),(227,222,'83'),(228,223,'3'),(229,224,'66'),(230,225,'88216'),(231,226,'228'),(232,227,'690'),(233,228,'676'),(234,229,'1868'),(235,230,'289'),(236,231,'216'),(237,232,'90'),(238,233,'993'),(239,234,'1649'),(240,235,'688'),(241,236,'256'),(242,237,'380'),(243,238,'971'),(244,239,'44'),(245,240,'1'),(246,241,'878'),(247,242,'-'),(248,243,'598'),(249,244,'1340'),(250,245,'998'),(251,246,'678'),(252,247,'379'),(253,247,'39'),(254,248,'58'),(255,249,'84'),(256,250,'808'),(257,251,'681'),(258,252,'967'),(259,253,'260'),(260,254,'263')--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([ID],[CountryID],[Code]))merge	[VR_NumberingPlan].[CodeGroup] as tusing	cte_data as son		1=1 and t.[ID] = s.[ID]--when matched then--	update set--	[CountryID] = s.[CountryID],[Code] = s.[Code]when not matched by target then	insert([ID],[CountryID],[Code])	values(s.[ID],s.[CountryID],s.[Code]);set identity_insert [VR_NumberingPlan].[CodeGroup] off;