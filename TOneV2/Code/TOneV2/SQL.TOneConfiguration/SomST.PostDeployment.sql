--[common].[VRDynamicAPI]---------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[ModuleId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('CD269DE9-6D54-4609-B92C-E5620724A4AF','Inventory','6DD49F76-2CBA-4E9F-A297-A58A9979493F','{"$type":"Vanrise.Entities.VRDynamicAPISettings, Vanrise.Entities","Security":{"$type":"Vanrise.Entities.VRDynamicAPISecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetTechnicalDetails","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetTechnicalDetails","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetTemporaryTechnicalReservation","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetTemporaryTechnicalReservation","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetFreeDPPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetFreeDPPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetCabinetSecondaryPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetCabinetSecondaryPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetAvailableNumbers","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetAvailableNumbers","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetFreeDevices","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetFreeDevices","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetCabinetPrimaryPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetCabinetPrimaryPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDSLAMPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDSLAMPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"CheckADSL","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"CheckADSL","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetISPs","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetISPs","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetISPDSLAMPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetISPDSLAMPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"IsManualSwitch","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"IsManualSwitch","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ReserveCPT","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"ReserveCPT","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"DeleteCPTReservation","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"DeleteCPTReservation","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ReservePhoneNumber","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"ReservePhoneNumberCustomCode","MethodName":"ReservePhoneNumber","MethodType":2},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDeviceID","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDeviceID","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetTechnicalDetailsByPath","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetTechnicalDetailsByPath","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDeviceIDs","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDeviceIDs","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"CreateFullPath","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"CreateFullPath","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ReserveNumber","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"ReserveNumber","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDPPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDPPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetNumberCategory","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetNumberCategory","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}}]}}',-1,-1,'2019-03-11 16:58:45.743'),
('7645AD0B-381D-4A6A-B231-8DDB1CB728A8','Common','6DD49F76-2CBA-4E9F-A297-A58A9979493F','{"$type":"Vanrise.Entities.VRDynamicAPISettings, Vanrise.Entities","Security":{"$type":"Vanrise.Entities.VRDynamicAPISecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetCustomerNextId","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCustomCodeDynamicAPIMethod, Vanrise.Common.MainExtensions","ConfigId":"4eb2746b-5368-4d05-b6d3-efd075be2dcf","MethodBody":"//long newId;\n//var customerType = new SOM.ST.Common.IdHelper().GetBPMCustomerType();\n//Vanrise.Common.Business.IDManager.Instance.ReserveIDRange(customerType , 1, out newId);\n//return newId;\n\nList<string> customerIds = new List<string>(){ \"2408EDDB-ABAB-4507-905C-20386B7EC106\",\"C0A5D017-9343-43B9-9820-0D813C74B1F4\",\"448C0FB8-536E-41D0-A178-1218261E6252\"};\n\nRandom rnd = new Random();\nint index = rnd.Next(0, 2);\n\nreturn customerIds[index];","MethodType":1,"InParameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities]], mscorlib","$values":[]},"ReturnType":"string"},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetRequestNextId","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCustomCodeDynamicAPIMethod, Vanrise.Common.MainExtensions","ConfigId":"4eb2746b-5368-4d05-b6d3-efd075be2dcf","MethodBody":"long newId;\nvar requestType = new SOM.ST.Common.IdHelper().GetBPMRequestType();\nVanrise.Common.Business.IDManager.Instance.ReserveIDRange(requestType , 1, out newId);\nreturn newId;","MethodType":1,"InParameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities]], mscorlib","$values":[]},"ReturnType":"long"},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}}]}}',-1,-1,'2019-03-27 15:12:26.230'),
('F294793E-50F3-4997-8A2F-991517E0EBD8','Billing','6DD49F76-2CBA-4E9F-A297-A58A9979493F','{"$type":"Vanrise.Entities.VRDynamicAPISettings, Vanrise.Entities","Security":{"$type":"Vanrise.Entities.VRDynamicAPISecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetCustomerCategories","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"CommonServiceProxy","MethodName":"GetCustomerCategories","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetRatePlans","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"CommonServiceProxy","MethodName":"GetRatePlans","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetServicesDefinition","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"CommonServiceProxy","MethodName":"GetServicesDefinition","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetServicesByRateplanAndPackage","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"CommonServiceProxy","MethodName":"GetServicesByRateplanAndPackage","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetContractServices","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"CommonServiceProxy","MethodName":"GetContractServices","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"TestGetCustomerCategories","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"TestProxy","MethodName":"TestGetCustomerCategories","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetPOSServices","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"CommonServiceProxy","MethodName":"GetServicesDefinition","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetPaymentPlanTemplates","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"22608a4f-bad6-48c0-97fd-350976253e9a","ClassName":"InstalmentServiceProxy","MethodName":"GetPaymentPlanTemplates","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"SimulatePaymentPlan","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCustomCodeDynamicAPIMethod, Vanrise.Common.MainExtensions","ConfigId":"4eb2746b-5368-4d05-b6d3-efd075be2dcf","MethodBody":"var proxy = new SOM.ST.Billing.Business.InstalmentServiceProxy();\nvar wfEntityId = proxy.WorkflowEntitySearch(invoiceId);\n\nreturn proxy.WritePaymentPlan(wfEntityId,paymentPlanTemplateIdPub,true,''A'');","MethodType":1,"InParameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"invoiceId","ParameterType":"string"},{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"paymentPlanTemplateIdPub","ParameterType":"string"}]},"ReturnType":"List<SOM.ST.Billing.Business.Installment>"},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ApplyPaymentPlan","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCustomCodeDynamicAPIMethod, Vanrise.Common.MainExtensions","ConfigId":"4eb2746b-5368-4d05-b6d3-efd075be2dcf","MethodBody":"var proxy = new SOM.ST.Billing.Business.InstalmentServiceProxy();\n\nproxy.FinancialAllocationWrite(customerId,discountAmount);\nvar wfEntityId = proxy.WorkflowEntitySearch(invoiceId);\n\nproxy.WritePaymentPlan(wfEntityId,paymentPlanTemplateIdPub,false,''A'');","MethodType":1,"InParameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"invoiceId","ParameterType":"string"},{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"paymentPlanTemplateIdPub","ParameterType":"string"},{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"customerId","ParameterType":"string"},{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"discountAmount","ParameterType":"decimal"}]},"ReturnType":"void"},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"DeletePaymentPlan","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCustomCodeDynamicAPIMethod, Vanrise.Common.MainExtensions","ConfigId":"4eb2746b-5368-4d05-b6d3-efd075be2dcf","MethodBody":"var proxy = new SOM.ST.Billing.Business.InstalmentServiceProxy();\nvar wfEntityId = proxy.WorkflowEntitySearch(invoiceId);\nproxy.WritePaymentPlan(wfEntityId,paymentPlanTemplateIdPub,false,''D'');","MethodType":1,"InParameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"invoiceId","ParameterType":"string"},{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"paymentPlanTemplateIdPub","ParameterType":"string"}]},"ReturnType":"void"},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ReadPaymentPlan","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCustomCodeDynamicAPIMethod, Vanrise.Common.MainExtensions","ConfigId":"4eb2746b-5368-4d05-b6d3-efd075be2dcf","MethodBody":"var proxy = new SOM.ST.Billing.Business.InstalmentServiceProxy();\nvar wfEntityId = proxy.WorkflowEntitySearch(invoiceId);\n\nreturn proxy.ReadPaymentPlan(paymentPlanId,wfEntityId);","MethodType":1,"InParameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"invoiceId","ParameterType":"string"},{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"paymentPlanId","ParameterType":"string"}]},"ReturnType":"List<SOM.ST.Billing.Business.PaymentPlanReadInstallment>"},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetRatePlanCoreServices","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCustomCodeDynamicAPIMethod, Vanrise.Common.MainExtensions","ConfigId":"4eb2746b-5368-4d05-b6d3-efd075be2dcf","MethodBody":"var proxy = new SOM.ST.Billing.Business.CommonServiceProxy();\nreturn proxy.GetServicesByRateplanAndPackage(rateplanId,\"CORE\");","MethodType":1,"InParameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethodParameter, Vanrise.Entities","ParameterName":"rateplanId","ParameterType":"string"}]},"ReturnType":"List<SOM.ST.Billing.Business.Service>"},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}}]}}',-1,-1,'2019-04-02 13:46:02.413')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[ModuleId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime]))
merge	[common].[VRDynamicAPI] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
update set
[Name] = s.[Name],[ModuleId] = s.[ModuleId],[Settings] = s.[Settings],[CreatedBy] = s.[CreatedBy],[LastModifiedBy] = s.[LastModifiedBy],[LastModifiedTime] = s.[LastModifiedTime]
when not matched by target then
insert([ID],[Name],[ModuleId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime])
values(s.[ID],s.[Name],s.[ModuleId],s.[Settings],s.[CreatedBy],s.[LastModifiedBy],s.[LastModifiedTime]);
--[common].[VRDynamicAPIModule]---------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('6DD49F76-2CBA-4E9F-A297-A58A9979493F','SOM',1,'2018-12-14 10:52:56.010',-1)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[CreatedBy],[LastModifiedTime],[LastModifiedBy]))
merge	[common].[VRDynamicAPIModule] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
update set
[Name] = s.[Name],[CreatedBy] = s.[CreatedBy],[LastModifiedTime] = s.[LastModifiedTime],[LastModifiedBy] = s.[LastModifiedBy]
when not matched by target then
insert([ID],[Name],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
values(s.[ID],s.[Name],s.[CreatedBy],s.[LastModifiedTime],s.[LastModifiedBy]);



	--[common].[VRNamespace]----------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[CreatedTime])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('7DB4F2C0-89A5-446A-B8A8-624EC4F9EAF5','Inventory.Business',null),
('8E50592A-7CD8-41F9-8D9C-1CE271301571','SOM.ST.Entities',null),
('22608A4F-BAD6-48C0-97FD-350976253E9A','SOM.ST.Billing.Business',null),
('A38C3CAD-3AD4-4068-9ACC-65F4886DD82C','SOM.ST.Billing.Entities',null),
('6D79D839-8A27-40CD-9DA6-73FB38916513','SOM.ST.Common',null)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[CreatedTime]))
merge	[common].[VRNamespace] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
update set
[Name] = s.[Name],[CreatedTime] = s.[CreatedTime]
when not matched by target then
insert([ID],[Name],[CreatedTime])
values(s.[ID],s.[Name],s.[CreatedTime]);
--[common].[VRNamespaceItem]------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[VRNamespaceId],[Name],[Settings],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('8A9B2D71-F8AB-4D59-B8BF-11368FE430D7','A38C3CAD-3AD4-4068-9ACC-65F4886DD82C','IBSCSRequestBody','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"public interface IBSCSRequestBody\n{\n     Dictionary<string, string> NameSpaces { get; }\n}"}}',-1,null,-1),
('850163E0-9528-4E60-9988-2AF4EA6C48B1','22608A4F-BAD6-48C0-97FD-350976253E9A','Common Service Proxy','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"5f14d26d-7b43-41be-9a3a-6ba0a7eb8316","ConnectionId":"91e342c4-3ac0-42b6-8007-a57949f79155","ClassName":"CommonServiceProxy","Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetCustomerCategories","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/CustomerGroupsReadService","ReturnType":"List<CustomerCategory>","Body":"CustomerGroupsReadRequestBody customerGroupsReadRequestBody = new CustomerGroupsReadRequestBody {\n    customerGroupsReadRequest = new CustomerGroupsReadRequest {\n    inputAttributes = new CustomerGroupsReadInputAttributes {\n    ignoreBuInd = false\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest6 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<CustomerGroupsReadRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<CustomerGroupsReadRequestBody> (customerGroupsReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"customerGroupsReadResponse responseResult = (customerGroupsReadResponse) response.DeserializeResponse<customerGroupsReadResponse> ();\nList<CustomerCategory> result = new List<CustomerCategory> ();\nif (responseResult != null && responseResult.listOfCustomerGroups != null && responseResult.listOfCustomerGroups.Count > 0) {\n    result = responseResult.listOfCustomerGroups.Select (item => new CustomerCategory {\n        Id = item.prgCode,\n            Description = item.prgDes\n    }).ToList ();\n}\nreturn result;","ClassMembers":"public class CustomerGroupsReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody\n{\n     [System.Xml.Serialization.XmlElement(\"customerGroupsReadRequest\",Namespace=\"http://ericsson.com/services/ws_CIL_6/customergroupsread\")]\n     public CustomerGroupsReadRequest customerGroupsReadRequest{ get; set; }\n\n     [System.Xml.Serialization.XmlIgnore]\n     Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string>() {\n     { \"cus\", \"http://ericsson.com/services/ws_CIL_6/customergroupsread\" },\n     { \"ses\", \"http://ericsson.com/services/ws_CIL_6/sessionchange\" }\n      };\n}\n\npublic  class CustomerGroupsReadRequest\n{\n\tpublic CustomerGroupsReadInputAttributes inputAttributes { get; set; }\n\n\tpublic SOM.ST.Billing.Entities.SessionChangeRequest6 sessionChangeRequest { get; set; }\n}\n\npublic class CustomerGroupsReadInputAttributes\n{\n\tpublic bool ignoreBuInd { get; set; }\n}\n\n//Response\npublic class customerGroupsReadResponse\n{\n    public List<CustomerGroups> listOfCustomerGroups {get; set;}\n    public int prgCodeDef {get; set;}\n}\n\npublic class CustomerGroups\n{\npublic string prgCode {get; set;}\npublic string prgDes {get; set;}\npublic List<ReleasedRateplans> listOfReleasedRateplans {get; set;}\npublic List<string> billcycles {get; set;}\npublic List<int> familygroups  {get; set;}\n}\n\npublic class ReleasedRateplans\n{\n}","NamespaceMembers":"public class CustomerCategory\n    {\n        public string Id { get; set; }\n\n        public string Description { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetRatePlans","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/allowedRateplansReadRequest","ReturnType":"List<RatePlanResponse>","Body":"RatePlanReadRequestBody ratePlanReadRequestBody = new RatePlanReadRequestBody {\n    allowedRateplansReadRequest = new RatePlanReadRequest {\n    inputAttributes = new RatePlanReadInputAttributes {\n    contractTypeIdPub = \"\",\n    prgCode = \"\"\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<RatePlanReadRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<RatePlanReadRequestBody> (ratePlanReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"allowedRateplansReadResponse responseResult = (allowedRateplansReadResponse) response.DeserializeResponse<allowedRateplansReadResponse> ();\nList<RatePlanResponse> result = new List<RatePlanResponse> ();\nif (responseResult != null && responseResult.numRp != null && responseResult.numRp.Count > 0) {\n    result = responseResult.numRp.Select (item => new RatePlanResponse {\n        RatePlanId = item.rpcodePub,\n            Name = item.rpDes\n    }).ToList ();\n};\nreturn result;","ClassMembers":"public  class RatePlanReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (\"allowedRateplansReadRequest\", Namespace = \"http://ericsson.com/services/ws_CIL_7/allowedrateplansread\")]\n    public RatePlanReadRequest allowedRateplansReadRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"all\", \"http://ericsson.com/services/ws_CIL_7/allowedrateplansread\" }\n    };\n}\n\npublic class RatePlanReadRequest {\n    public RatePlanReadInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class RatePlanReadInputAttributes {\n    public string contractTypeIdPub { get; set; }\n\n    public string prgCode { get; set; }\n}\n\n//Response\npublic class allowedRateplansReadResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<RatePlan> numRp { get; set; }\n}\n\npublic class RatePlan {\n    public string rpcode { get; set; }\n    public string rpcodePub { get; set; }\n    public string rpVscode { get; set; }\n    public string rpShdes { get; set; }\n    public string rpDes { get; set; }\n}","NamespaceMembers":"public class RatePlanResponse\n    {\n        public string RatePlanId { get; set; }\n        public string Name { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetServicesDefinition","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/GetServicesDefinition","ReturnType":"List<ServiceDefinition>","Body":"ServicesReadRequestBody servicesReadRequestBody = new ServicesReadRequestBody {\n    servicesReadRequest = new ServicesReadRequest {\n    inputAttributes = new ServicesReadInputAttributes (),\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<ServicesReadRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<ServicesReadRequestBody> (servicesReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"ServicesDefinitionReadResponse  responseResult = (ServicesDefinitionReadResponse ) response.DeserializeResponse<ServicesDefinitionReadResponse > ();\nList<ServiceDefinition> result = new List<ServiceDefinition> ();\nif (responseResult != null && responseResult.numSv != null && responseResult.numSv.Count > 0) {\n    result = responseResult.numSv.Select (item => new ServiceDefinition {\n        Id = item.sncode,\n            PublicId = item.sncodePub,\n            Title = item.svShdes,\n            Description = item.svDes\n    }).ToList ();\n};\nreturn result;","ClassMembers":"public class ServicesDefinitionReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (\"servicesReadRequest\", Namespace = \"http://ericsson.com/services/ws_CMI_7/servicesread\")]\n    public ServicesDefinitionReadRequest servicesReadRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"ser\", \"http://ericsson.com/services/ws_CMI_7/servicesread\" }\n    };\n}\n\npublic class ServicesDefinitionReadRequest {\n    public ServicesDefinitionReadInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic  class ServicesDefinitionReadInputAttributes { }\n\n//Response\n[System.Xml.Serialization.XmlType (\"servicesReadResponse\")]\npublic class ServicesDefinitionReadResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<ServiceDefinitionResponse> numSv { get; set; }\n}\n\npublic class ServiceDefinitionResponse {\n    public int sncode { get; set; }\n    public string sncodePub { get; set; }\n    public string svShdes { get; set; }\n    public string svDes { get; set; }\n}","NamespaceMembers":"public class ServiceDefinition {\n    public int Id { get; set; }\n    public string PublicId { get; set; }\n    public string Title { get; set; }\n    public string Description { get; set; }\n}"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetServicesByRateplanAndPackage","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/servicesReadRequest","ReturnType":"List<Service>","Body":"ServicesReadRequestBody servicesReadRequestBody = new ServicesReadRequestBody {\n    servicesReadRequest = new ServicesReadRequest {\n    inputAttributes = new ServicesReadInputAttributes () {\n    rpcodePub = rateplanId,\n    spcodePub = packageId\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<ServicesReadRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<ServicesReadRequestBody> (servicesReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"rateplanId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"packageId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"ServicesReadResponse responseResult = (ServicesReadResponse) response.DeserializeResponse<ServicesReadResponse> ();\nList<Service> result = new List<Service> ();\nif (responseResult != null && responseResult.numSv != null && responseResult.numSv.Count > 0) {\n    result = responseResult.numSv.Select (item => new Service {\n            Id = item.sncode,\n            PublicId = item.sncodePub,\n            Title = item.svShdes,\n            Description = item.svDes\n    }).ToList ();\n};\nreturn result;","ClassMembers":"public class ServicesReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (Namespace = \"http://ericsson.com/services/ws_CMI_7/servicesread\")]\n    public ServicesReadRequest servicesReadRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"ser\", \"http://ericsson.com/services/ws_CMI_7/servicesread\" }\n    };\n}\n\npublic class ServicesReadRequest {\n    public ServicesReadInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class ServicesReadInputAttributes {\n    public string rpcodePub { get; set; }\n    public string spcodePub { get; set; }\n}\n\n//Response\n[System.Xml.Serialization.XmlType(\"servicesReadResponse\")]\npublic class ServicesReadResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<ServiceResponse> numSv { get; set; }\n}\n\npublic class ServiceResponse {\n    public string sncode { get; set; }\n    public string sncodePub { get; set; }\n    public string svShdes { get; set; }\n    public string svDes { get; set; }\n}","NamespaceMembers":"public class Service {\n    public string Id { get; set; }\n    public string PublicId { get; set; }\n    public string Title { get; set; }\n    public string Description { get; set; }\n}"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetContractServices","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/contractServicesReadRequest","ReturnType":"List<ContractService>","Body":"ContractServicesReadRequestBody contractServicesReadRequestBody = new ContractServicesReadRequestBody {\n    contractServicesReadRequest = new ContractServicesReadRequest {\n    inputAttributes = new ContractServicesReadInputAttributes () {\n    coIdPub = contractId\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<ContractServicesReadRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<ContractServicesReadRequestBody> (contractServicesReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"contractId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"ContractServicesReadResponse responseResult = (ContractServicesReadResponse) response.DeserializeResponse<ContractServicesReadResponse> ();\nList<ContractService> result = new List<ContractService> ();\nif (responseResult != null && responseResult.services != null && responseResult.services.Count > 0) {\n    result = responseResult.services.Select (item => new ContractService {\n            Id = item.sncode,\n            PublicId = item.sncodePub\n    }).ToList ();\n};\nreturn result;","ClassMembers":"public class ContractServicesReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (Namespace = \"http://ericsson.com/services/ws_CIL_7/contractservicesread\")]\n    public ContractServicesReadRequest contractServicesReadRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"con\", \"http://ericsson.com/services/ws_CIL_7/contractservicesread\" }\n    };\n}\n\npublic class ContractServicesReadRequest {\n    public ContractServicesReadInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class ContractServicesReadInputAttributes {\n    public string coIdPub { get; set; }\n}\n\n//Response\n[System.Xml.Serialization.XmlType (\"contractServicesReadResponse\")]\npublic class ContractServicesReadResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<ContractServiceResponse> services { get; set; }\n}\n\npublic class ContractServiceResponse {\n    public string sncode { get; set; }\n    public string sncodePub { get; set; }\n}","NamespaceMembers":"public class ContractService {\n    public string Id { get; set; }\n    public string PublicId { get; set; }\n}"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetRateplanAllowedServices","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/allowedServicesReadRequest","Body":"var allowedServicesReadRequestBody = new AllowedServicesReadRequestBody {\n    allowedServicesReadRequest = new AllowedServicesReadRequest {\n    inputAttributes = new AllowedServicesReadInputAttributes () {\n    rpcodePub = rateplanId\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nvar request = new SOM.ST.Billing.Entities.BSCSRequest<AllowedServicesReadRequestBody> (allowedServicesReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"rateplanId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"AllowedServicesReadResponse responseResult = (AllowedServicesReadResponse) response.DeserializeResponse<AllowedServicesReadResponse> ();\nList<RateplantService> result = new List<RateplantService> ();\nif (responseResult != null && responseResult.listSpCode != null && responseResult.listSpCode.Count > 0) {\n    foreach (var package in responseResult.listSpCode) {\n        if (package != null && package.listSnCode != null && package.listSnCode.Count > 0) {\n            result.AddRange (package.listSnCode.Select (item => new RateplantService {\n                Id = item.sncode,\n                    PublicId = item.sncodePub\n            }).ToList ());\n        }\n    }\n};\nreturn result;","ClassMembers":"public class AllowedServicesReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (Namespace = \"http://ericsson.com/services/ws_CIL_7/allowedservicesread\")]\n    public AllowedServicesReadRequest allowedServicesReadRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"all\", \"http://ericsson.com/services/ws_CIL_7/allowedservicesread\" }\n    };\n}\n\npublic class AllowedServicesReadRequest {\n    public AllowedServicesReadInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class AllowedServicesReadInputAttributes {\n    public string rpcodePub { get; set; }\n}\n\n//Response\n[System.Xml.Serialization.XmlType (\"allowedServicesReadResponse\")]\npublic class AllowedServicesReadResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<ServicePackageResponse> listSpCode { get; set; }\n}\n\npublic class ServicePackageResponse {\n    public int spcode { get; set; }\n    public string spcodePub { get; set; }\n\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<RateplanServiceResponse> listSpCode { get; set; }\n}\n\npublic class RateplanServiceResponse {\n    public string sncode { get; set; }\n    public string sncodePub { get; set; }\n}","NamespaceMembers":"public class RateplantService {\n    public string Id { get; set; }\n    public string PublicId { get; set; }\n}"}]}}}',-1,'2019-03-22 09:27:31.717',-1),
('36A83C61-BF6A-4FE7-AEBC-352EB0D77999','22608A4F-BAD6-48C0-97FD-350976253E9A','Helper','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"public static class Helper {\n    public static SOM.ST.Billing.Entities.SessionChangeRequest6 GetSessionChangeRequest6 () {\n        return new SOM.ST.Billing.Entities.SessionChangeRequest6 {\n            values = new List<SOM.ST.Billing.Entities.SessionChangeRequestValue> {\n                new SOM.ST.Billing.Entities.SessionChangeRequestValue {\n                    key = \"BU_ID\",\n                        value = \"2\"\n                }\n            }\n        };\n    }\n\npublic static SOM.ST.Billing.Entities.SessionChangeRequest7 GetSessionChangeRequest7 () {\n        return new SOM.ST.Billing.Entities.SessionChangeRequest7 {\n            values = new List<SOM.ST.Billing.Entities.SessionChangeRequestValue> {\n                new SOM.ST.Billing.Entities.SessionChangeRequestValue {\n                    key = \"BU_ID\",\n                        value = \"2\"\n                }\n            }\n        };\n    }\n\n}"}}',-1,'2019-03-26 10:51:13.300',-1),
('1138C045-EAB2-4D48-95D9-39D62CFB8CBF','22608A4F-BAD6-48C0-97FD-350976253E9A','Test Proxy','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"5f14d26d-7b43-41be-9a3a-6ba0a7eb8316","ConnectionId":"56a5d484-180a-4d7b-a5ef-513c33ecdd52","ClassName":"TestProxy","Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"TestGetCustomerCategories","MethodType":1,"MessageFormat":2,"ActionPath":"wsi/services/CustomerGroupsReadService","ReturnType":"List<TestCustomerCategory>","Body":"CustomerGroupsReadRequestBody customerGroupsReadRequestBody = new CustomerGroupsReadRequestBody {\n    customerGroupsReadRequest = new CustomerGroupsReadRequest {\n    inputAttributes = new CustomerGroupsReadInputAttributes {\n    ignoreBuInd = false\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest6 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<CustomerGroupsReadRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<CustomerGroupsReadRequestBody> (customerGroupsReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","SOAPAction":"\"http://ericsson.com/services/ws_CIL_6/customergroupsread\""},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"customerGroupsReadResponse responseResult = (customerGroupsReadResponse) response.DeserializeResponse<customerGroupsReadResponse> ();\nList<TestCustomerCategory> result = new List<TestCustomerCategory> ();\nif (responseResult != null && responseResult.listOfCustomerGroups != null && responseResult.listOfCustomerGroups.Count > 0) {\n    result = responseResult.listOfCustomerGroups.Select (item => new TestCustomerCategory {\n        Id = item.prgCode,\n            Description = item.prgDes\n    }).ToList ();\n}\nreturn result;","ClassMembers":"public class CustomerGroupsReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody\n{\n     [System.Xml.Serialization.XmlElement(\"customerGroupsReadRequest\",Namespace=\"http://ericsson.com/services/ws_CIL_6/customergroupsread\")]\n     public CustomerGroupsReadRequest customerGroupsReadRequest{ get; set; }\n\n     [System.Xml.Serialization.XmlIgnore]\n     Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string>() {\n     { \"cus\", \"http://ericsson.com/services/ws_CIL_6/customergroupsread\" },\n     { \"ses\", \"http://ericsson.com/services/ws_CIL_6/sessionchange\" }\n      };\n}\n\npublic  class CustomerGroupsReadRequest\n{\n\tpublic CustomerGroupsReadInputAttributes inputAttributes { get; set; }\n\n\tpublic SOM.ST.Billing.Entities.SessionChangeRequest6 sessionChangeRequest { get; set; }\n}\n\npublic class CustomerGroupsReadInputAttributes\n{\n\tpublic bool ignoreBuInd { get; set; }\n}\n\n//Response\npublic class customerGroupsReadResponse\n{\n    public List<CustomerGroups> listOfCustomerGroups {get; set;}\n    public int prgCodeDef {get; set;}\n}\n\npublic class CustomerGroups\n{\npublic string prgCode {get; set;}\npublic string prgDes {get; set;}\npublic List<ReleasedRateplans> listOfReleasedRateplans {get; set;}\npublic List<string> billcycles {get; set;}\npublic List<int> familygroups  {get; set;}\n}\n\npublic class ReleasedRateplans\n{\n}","NamespaceMembers":"public class TestCustomerCategory\n    {\n        public string Id { get; set; }\n\n        public string Description { get; set; }\n    }"}]}}}',-1,'2019-03-25 18:30:14.053',-1),
('A4272C6E-0C66-46AB-8723-3B3BCEF8B3C5','8E50592A-7CD8-41F9-8D9C-1CE271301571','Input Arguments','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"public class CommonInputArgument\n    {\n        public string ContactId { get; set; }\n\n        public string AccountId { get; set; }\n\n        public string ContractId { get; set; }\n    }"}}',-1,null,-1),
('EFE5F718-96ED-48AD-B1D5-43C87C17926F','6D79D839-8A27-40CD-9DA6-73FB38916513','Common','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"public class IdHelper {\n\n    const string BPMCustomer = \"BPMCustomer\";\n    const string BPMRequest = \"BPMRequest\";\n\n    public Vanrise.Entities.VanriseType GetBPMCustomerType () {\n        return new Vanrise.Entities.VanriseType (BPMCustomer);\n    }\n\n    public Vanrise.Entities.VanriseType GetBPMRequestType () {\n        return new Vanrise.Entities.VanriseType (BPMRequest);\n    }\n}"}}',-1,'2019-04-01 18:41:52.990',-1),
('E0897B85-93F6-240F-CFFA-6F4B199B2B4F','7DB4F2C0-89A5-446A-B8A8-624EC4F9EAF5','ReservePhoneNumber','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"public class ReserveLineRequestInput\n    {\n        public string PhoneNumber { get; set; }\n\n        public string PrimaryPort { get; set; }\n\n        public string SecondaryPort { get; set; }\n    }\n\n    public class ReserveLineRequestOutput\n    {\n        public string Message { get; set; }\n    }\n\npublic class ReservePhoneNumberCustomCode{\npublic ReserveLineRequestOutput ReservePhoneNumber(ReserveLineRequestInput input)\n        {\n            return new ReserveLineRequestOutput\n            {\n                Message = string.Format(\"Phone Number {0} is Reserved\", input.PhoneNumber)\n            };\n        }\n}"}}',1,'2018-12-31 10:02:18.240',1),
('012DF33E-A878-4326-988D-A0C47F901ECC','A38C3CAD-3AD4-4068-9ACC-65F4886DD82C','BSCSRequest','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"[System.Xml.Serialization.XmlRoot(\"Envelope\", Namespace = \"http://schemas.xmlsoap.org/soap/envelope/\")]\npublic class BSCSRequest<T> where T : IBSCSRequestBody\n{\n\t[System.Xml.Serialization.XmlElement(Namespace = \"http://schemas.xmlsoap.org/soap/envelope/\")]\n\tpublic BSCSRequestHeader Header { get; set; }\n\n\t[System.Xml.Serialization.XmlElement(Namespace = \"http://schemas.xmlsoap.org/soap/envelope/\")]\n\tpublic T Body { get; set; }\n\n\t[System.Xml.Serialization.XmlIgnore]\n\tpublic Dictionary<string, string> NameSpaces\n\t{\n\t\tget\n\t\t{\n\t\t\tvar namespaces = new Dictionary<string, string>() { { \"soapenv\", \"http://schemas.xmlsoap.org/soap/envelope/\" } };\n\t\t\tif (this.Body != null)\n\t\t\t{\n\t\t\t\tvar bodyNS = this.Body.NameSpaces;\n\t\t\t\tif (bodyNS != null && bodyNS.Count > 0)\n\t\t\t\t{\n\t\t\t\t\tforeach (var namespaceKVP in bodyNS)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!namespaces.ContainsKey(namespaceKVP.Key))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnamespaces.Add(namespaceKVP.Key, namespaceKVP.Value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn namespaces;\n\t\t}\n\t}\n\n        public BSCSRequest(T body)\n        {\n            Header = new BSCSRequestHeader();\n            Body = body;\n        }\n\n        public BSCSRequest()\n        {\n            Header = new BSCSRequestHeader();\n        }\n}\n\npublic class BSCSRequestHeader\n{    }\n\npublic class SessionChangeRequest6\n{\n\t[System.Xml.Serialization.XmlArray(Namespace = \"http://ericsson.com/services/ws_CIL_6/sessionchange\")]\n\t[System.Xml.Serialization.XmlArrayItem(\"Item\")]\n\tpublic List<SessionChangeRequestValue> values { get; set; }\n}\n\npublic class SessionChangeRequest7\n{\n\t[System.Xml.Serialization.XmlArray(Namespace = \"http://ericsson.com/services/ws_CIL_7/sessionchange\")]\n\t[System.Xml.Serialization.XmlArrayItem(\"Item\")]\n\tpublic List<SessionChangeRequestValue> values { get; set; }\n}\n\npublic class SessionChangeRequestValue\n{\n\tpublic string key { get; set; }\n\n\tpublic string value { get; set; }\n}"}}',-1,'2019-04-01 18:42:44.330',-1),
('1E395209-06AD-4FC8-8D85-BF477A27A3D8','22608A4F-BAD6-48C0-97FD-350976253E9A','Serializing Manager','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"public static class SerializingManager\n{\n\tpublic static string SerializeFunction<T>(SOM.ST.Billing.Entities.BSCSRequest<T> request) where T : SOM.ST.Billing.Entities.IBSCSRequestBody\n\t{\n                return new Vanrise.Common.VRXmlSerializer().Serialize(request,request.NameSpaces);\n\t}\n}"}}',-1,null,-1),
('582A001C-9ABD-FC77-5BE7-DBF5377CA8EA','7DB4F2C0-89A5-446A-B8A8-624EC4F9EAF5','Inventory Service Proxy','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"5f14d26d-7b43-41be-9a3a-6ba0a7eb8316","ConnectionId":"12221745-b7ec-4862-ad1d-28e6a500c49d","ClassName":"InventoryServiceProxy","Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetTechnicalDetails","MethodType":0,"MessageFormat":0,"ActionPath":"/Techdetails/Get","ReturnType":"InventoryPhoneItem","Body":"throw new Exception(\"body excep\");","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"phoneNumber"},"ResponseLogic":"InventoryPhoneItem result = null;\nvar data = response.DeserializeResponse<List<TechnicalReservationDetail>>();\nif (data != null && data.Count > 0)\n            {\n                TechnicalReservationDetail detail = data[0];\n                result = new InventoryPhoneItem\n                {\n                    Cabinet = detail.CABINET_NAME,\n                    Transmitter = detail.TRANSMITTER_NAME,\n                    TransmitterPort = detail.TRANSMITTER_PORT,\n                    DP = detail.DP_NAME,\n                    PhoneID = detail.PHONE_ID,\n                    Switch = detail.SWITCH_NAME,\n                    SWITCH_TYPE = detail.SWITCH_TYPE,\n                    SwitchOMC = detail.SWITCH_OMC,\n                    MDFPort = detail.MDF_PORT,\n                    VerticalMDF = detail.MDF_VERT,\n                    Receiver = detail.RECEIVER_NAME,\n                    ReceiverPort = detail.RECEIVER_PORT,\n                    DPPortId = detail.DP_PORT_ID,\n                    DPId = detail.DP_ID,\n                    SwitchId = detail.SWITCH_ID,\n                    CabinetPrimaryPort = detail.PRIMARY_PORT,\n                    CabinetSecondaryPort = detail.SECONDARY_PORT,\n                    PATH_TYPE = detail.PATH_TYPE,\n                    PhoneType = detail.PATH_TYPE.ToLower().Contains(\"wll\") ? PhoneType.WLL : detail.PATH_TYPE == \"PSTN_LINK\" ? PhoneType.PSTN : PhoneType.ISDN,\nSwitchStatus= detail.SWITCH_STATUS,\nMDFStatus= detail.MDF_STATUS ,\nCabinetStatus= detail.CABINET_STATUS ,\nDPStatus= detail.DP_STATUS ,\nMDF = detail.MDF_NAME,\n\nPathId= detail.PATH_ID,\nCabinetId= detail.CABINET_ID,\nMDFId = detail.MDF_ID,\n\n IsSwitchFaulty= detail.SWITCH_STATUS==null || detail.SWITCH_STATUS.ToLower()==\"faulty\" || detail.SWITCH_STATUS.ToLower()==\"not_connected\" ? \"true\" : \"false\",\n\n IsMDFFaulty= detail.MDF_STATUS==null || detail.MDF_STATUS.ToLower()==\"faulty\" || detail.MDF_STATUS.ToLower()==\"not_connected\" ? \"true\" : \"false\",\n\n IsCabinetFaulty= detail.CABINET_STATUS==null || detail.CABINET_STATUS.ToLower()==\"faulty\" || detail.CABINET_STATUS.ToLower()==\"not_connected\" ? \"true\" : \"false\",\n\n IsDPFaulty= detail.DP_STATUS==null || detail.DP_STATUS.ToLower()==\"faulty\" || detail.DP_STATUS.ToLower()==\"not_connected\" ? \"true\" : \"false\"\n                };\n\n            }\n\nreturn result;","NamespaceMembers":"public class InventoryPhoneItem\n    {\n\n        public PhoneType PhoneType { get; set; }\n        public string PATH_TYPE { get; set; }\n        public PhoneStatus PhoneStatus { get; set; }\n        public string PhoneID { get; set; }\n        public string VerticalMDF { get; set; }\n        public string MDFPort { get; set; }\n        public string Cabinet { get; set; }\n        public string CabinetPrimaryPort { get; set; }\n        public string CabinetSecondaryPort { get; set; }\n        public string DP { get; set; }\n        public List<string> DPPorts { get; set; }\n        public List<string> DPSecondaryPorts { get; set; }\n        public string Switch { get; set; }\n        public string SwitchId { get; set; }\n        public string SwitchOMC { get; set; }\n        public string SWITCH_TYPE { get; set; }\n\n        public string DPPortId { get; set; }\n\n        public string DSlam { get; set; }\n        public string DSlamPort { get; set; }\n        public string DSlamOMC { get; set; }\n\n\n        public string Transmitter { get; set; }\n        public string TransmitterPort { get; set; }\n        public string Receiver { get; set; }\n        public string ReceiverPort { get; set; }\n\n\n        public string MSAN_EID { get; set; }\n        public string MSAN_TID { get; set; }\n        public string MSANType { get; set; }\n\n\n        public bool IsMultiplexed { get; set; }\n\n\n        public string DPId { get; set; }\n       public string SwitchStatus{ get; set; }\n       public string MDFStatus{ get; set; }\n       public string CabinetStatus{ get; set; }\n       public string DPStatus{ get; set; }\n\n       public string IsSwitchFaulty{ get; set; }\n       public string IsMDFFaulty{ get; set; }\n       public string IsCabinetFaulty{ get; set; }\n       public string IsDPFaulty{ get; set; }\n       public string MDF{ get; set; }\n\npublic string PathId{ get; set; }\npublic string MDFId{ get; set; }\npublic string CabinetId{ get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetTemporaryTechnicalReservation","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeReservation/GET","ReturnType":"TechnicalReservationPhoneItem","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","number":"phoneNumber","Override":"\"1\""},"ResponseLogic":"TechnicalReservationPhoneItem result = null;\n\n           var data = response.DeserializeResponse<List<FreeReservationDetail>>();\n\n            if (data != null && data.Count > 0)\n            {\n                FreeReservationDetail detail = data[0];\n                result = new TechnicalReservationPhoneItem\n                {\n                    Cabinet = detail.CABINET_NAME,\n                    Transmitter = detail.WLL_TRANSMITTER_NAME,\n                    TransmitterPort = detail.WLL_TRANSMITTER_PORT_NAME,\n                    DP = detail.DP_NAME,\n                    Switch = detail.SWITCH_NAME,\n                    MDFPort = detail.MDF_PORT,\n                    VerticalMDF = detail.MDF_VERT,\n                    DPPortId = detail.DP_PORT_ID,\n                    DPId = detail.DP_ID,\n                    SwitchId = detail.SWITCH_ID,\n                    TransmitterId = detail.WLL_TRANSMITTER_ID,\n                    TransmitterPortId = detail.WLL_TRANSMITTER_PORT_ID,\n                    TransmitterModuleId = detail.WLL_TRANSMITTER_MODULE_ID,\n                    TransmitterModule = detail.WLL_TRANSMITTER_MODULE_NAME,\n                    Threshold = detail.THRESHOLD,\n                    SecondaryPortId = detail.SECONDARY_PORT_ID,\n                    SecondaryPort = detail.SECONDARY_PORT,\n                    ReceiverPortId = detail.WLL_RECEIVER_ID,\n                    ReceiverId = detail.WLL_RECEIVER_ID,\n                    Receiver = detail.WLL_RECEIVER_NAME,\n                    ReceiverPort = detail.WLL_RECEIVER_PORT_NAME,\n                    CabinetId = detail.CABINET_ID,\n                    CanReserve = detail.CAN_RESERVE,\n                    CurrentUtilization = detail.CURRENT_UTILIZATION,\n                    DIDExist = detail.EXIST_DID,\n                    DPMUXPort = detail.DP_MUX_PORT_NAME,\n                    DPMUXPortId = detail.DP_MUX_PORT_ID,\n                    DPPort = detail.DP_PORT,\n                    ISDNExist = detail.EXIST_ISDN,\n                    MDF = detail.MDF_NAME,\n                    MDFId = detail.MDF_ID,\n                    MDFPortId = detail.MDF_PORT_ID,\n                    PrimaryMUXPort = detail.PRIMARY_MUX_PORT_NAME,\n                    PrimaryMUXPortId = detail.PRIMARY_MUX_PORT_ID,\n                    PrimaryPort = detail.PRIMARY_PORT,\n                    PrimaryPortId = detail.PRIMARY_PORT_ID,\n                    PSTNExist = detail.EXIST_PSTN,\n                    VerticalMDFId = detail.MDF_VERT_ID\n\n                };\n\n            }\n\n            return result;","ClassMembers":"private class FreeReservationDetail\n    {\n        public string SWITCH_NAME { get; set; }\n        public string SWITCH_ID { get; set; }\n        public string MDF_NAME { get; set; }\n        public string MDF_ID { get; set; }\n        public string MDF_VERT { get; set; }\n        public string MDF_VERT_ID { get; set; }\n        public string MDF_PORT { get; set; }\n        public string MDF_PORT_ID { get; set; }\n        public string CABINET_NAME { get; set; }\n        public string CABINET_ID { get; set; }\n        public string PRIMARY_PORT { get; set; }\n        public string SECONDARY_PORT { get; set; }\n        public string PRIMARY_PORT_ID { get; set; }\n        public string SECONDARY_PORT_ID { get; set; }\n        public string PRIMARY_MUX_PORT_ID { get; set; }\n        public string PRIMARY_MUX_PORT_NAME { get; set; }\n        public string DP_NAME { get; set; }\n        public string DP_PORT { get; set; }\n        public string DP_PORT_ID { get; set; }\n        public string DP_ID { get; set; }\n        public string DP_MUX_PORT_ID { get; set; }\n        public string DP_MUX_PORT_NAME { get; set; }\n        public string WLL_TRANSMITTER_ID { get; set; }\n        public string WLL_TRANSMITTER_NAME { get; set; }\n        public string WLL_TRANSMITTER_MODULE_ID { get; set; }\n        public string WLL_TRANSMITTER_MODULE_NAME { get; set; }\n        public string WLL_TRANSMITTER_PORT_ID { get; set; }\n        public string WLL_TRANSMITTER_PORT_NAME { get; set; }\n        public string WLL_RECEIVER_NAME { get; set; }\n        public string WLL_RECEIVER_ID { get; set; }\n        public string WLL_RECEIVER_PORT_ID { get; set; }\n        public string WLL_RECEIVER_PORT_NAME { get; set; }\n        public string EXIST_PSTN { get; set; }\n        public string EXIST_ISDN { get; set; }\n        public string EXIST_DID { get; set; }\n        public string CAN_RESERVE { get; set; }\n        public string CURRENT_UTILIZATION { get; set; }\n        public string THRESHOLD { get; set; }\n    }","NamespaceMembers":"public class TechnicalReservationPhoneItem\n    {\n        public string Switch { get; set; }\n        public string SwitchId { get; set; }\n        \n        public string MDF { get; set; }\n        public string MDFId { get; set; }\n        public string VerticalMDF { get; set; }\n        public string VerticalMDFId { get; set; }\n        public string MDFPort { get; set; }\n        public string MDFPortId { get; set; }\n        \n        public string Cabinet { get; set; }\n        public string CabinetId { get; set; }\n        public string PrimaryPort { get; set; }\n        public string PrimaryPortId { get; set; }\n        public string PrimaryMUXPort { get; set; }\n        public string PrimaryMUXPortId { get; set; }\n        public string SecondaryPort { get; set; }\n        public string SecondaryPortId { get; set; }\n        \n        public string DP { get; set; }\n        public string DPId { get; set; }\n        public string DPPort { get; set; }\n        public string DPPortId { get; set; }\n        public string DPMUXPort { get; set; }\n        public string DPMUXPortId { get; set; }\n        \n        public string Transmitter { get; set; }\n        public string TransmitterId { get; set; }\n        public string TransmitterPort { get; set; }\n        public string TransmitterPortId { get; set; }\n        public string TransmitterModule { get; set; }\n        public string TransmitterModuleId { get; set; }\n        public string Receiver { get; set; }\n        public string ReceiverId { get; set; }\n        public string ReceiverPort { get; set; }\n        public string ReceiverPortId { get; set; }\n\n        public string PSTNExist { get; set; }\n        public string ISDNExist { get; set; }\n        public string DIDExist { get; set; }\n        public string CanReserve { get; set; }\n        public string CurrentUtilization { get; set; }\n        public string Threshold { get; set; }\n\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetFreeDPPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeDPPorts/Get","ReturnType":"List<DPPortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"dpId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"dpId"},"ResponseLogic":"List<DPPortItem> result = new List<DPPortItem>();\n\n            var data = response.DeserializeResponse<List<DPPort>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new DPPortItem\n                    {\n                        Id = item.DP_PORT_ID.ToString(),\n                        Name = item.DP_PORT_NAME\n                    });\n                }\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetCabinetSecondaryPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/TLDSecondaryPort/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"cabinetId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"cabinetId"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\n\n var data = response.DeserializeResponse<List<Port>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.OBJECT_ID.ToString(),\n                        Name = item.PORT\n                    });\n                }\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetAvailableNumbers","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeNumbers/Get","ReturnType":"List<PhoneNumberItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"category","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"type","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"top","ParameterType":"int","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchid":"switchId","category":"category","type":"type","top":"top"},"ResponseLogic":"List<PhoneNumberItem> phoneNumbers = new List<PhoneNumberItem>();\n               var data = response.DeserializeResponse<List<AktavaraPhoneNumber>>();\n            return data == null ? null : data.MapRecords(c => new PhoneNumberItem\n            {\n                Id = c.OBJECT_ID,\n                Number = c.PHONE_NUMBER\n            }).ToList();","ClassMembers":"private class AktavaraPhoneNumber\n    {\n        public string OBJECT_ID { get; set; }\n        public string PHONE_NUMBER { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetFreeDevices","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeDevice/Get","ReturnType":"List<DeviceItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"lineType","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"top","ParameterType":"int","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchId":"switchId","type":"lineType","top":"top"},"ResponseLogic":"List<PhoneNumberItem> phoneNumbers = new List<PhoneNumberItem>();\n            var data = response.DeserializeResponse<List<AktavaraDevice>>();\n            return data == null ? null : data.MapRecords(c => new DeviceItem\n            {\n                Id = c.OBJECT_ID,\n                DeviceId = c.PORT\n            }).ToList();","ClassMembers":"private class AktavaraDevice\n    {\n        public string OBJECT_ID { get; set; }\n        public string PORT { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetCabinetPrimaryPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/TLDPrimaryPort/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"cabinetId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"cabinetId"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\nvar data = response.DeserializeResponse<List<Port>>();
\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.OBJECT_ID.ToString(),\n                        Name = item.PORT\n                    });\n                }\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"ReserveNumber","MethodType":0,"MessageFormat":0,"ActionPath":"/reservation/Get","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"pathType","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumberID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"deviceID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"mDFPortID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"dPPortID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"primaryPort","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"secondaryPort","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","pathtype":"pathType","Pathname":"pathType + \"_\" + phoneNumber","ObjectList":"phoneNumberID + \",\" + deviceID + \",\" + mDFPortID + \",\" + primaryPort + \",\" + secondaryPort + \",\" + dPPortID","connectors":"deviceID + \",\" + mDFPortID + \",COPPER_LINK|\" + primaryPort + \",\" + secondaryPort + \",COPPER_LINK\""},"ResponseLogic":"string result = \"\";\n\n         var data = response.DeserializeResponse<string>();\n\n            if (data != null)\n            {\n                result = data;\n            }\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDSLAMPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/getdslamport/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchid":"switchId"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\nvar data = response.DeserializeResponse<List<DSLAMPort>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.OBJECT_ID.ToString(),\n                        Name = item.POS\n                    });\n                }\n            }\n\n            return result;","ClassMembers":"private class DSLAMPort\n    {\n        public string OBJECT_ID { get; set; }\n        public string POS { get; set; }\n        public string CONNECTOR_TYPE { get; set; }\n        public string CAPACITY { get; set; }\n        public string DIRECTION { get; set; }\n        public string VENDOR_PORT_NAME { get; set; }\n        public string RESERVATION_STATUS { get; set; }\n        public string RESERVED_BY { get; set; }\n        public string RESERVED_DATE { get; set; }\n        public string RESERVATION_PERIOD { get; set; }\n        public string REMARKS { get; set; }\n        public string CREATED { get; set; }\n        public string CREATED_BY { get; set; }\n        public string LAST_CHANGED { get; set; }\n        public string CHANGED_BY { get; set; }\n        public string ISP { get; set; }\n        public string USERNAME { get; set; }\n\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"CheckADSL","MethodType":0,"MessageFormat":0,"ActionPath":"/checkdsl/Get","ReturnType":"LinePath","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","phonenumber":"phoneNumber"},"ResponseLogic":"LinePath result = new LinePath();\nvar data = response.DeserializeResponse<List<PhoneLinePath>>();\n            if (data != null && data.Count>0)\n            {\n                result.Path = data[0].PATH;\n            }\n            return result;","ClassMembers":"private class PhoneLinePath\n    {\n        public string PATH { get; set; }\n    }","NamespaceMembers":"public class LinePath\n    {\n        public string Path { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetISPs","MethodType":0,"MessageFormat":0,"ActionPath":"/GetISP/Get","ReturnType":"List<ISPItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"List<ISPItem> result = new List<ISPItem>();\n   var data = response.DeserializeResponse<List<ISP>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new ISPItem\n                    {\n                        Id = item.FIELD_VALUE,\n                        Name = item.FIELD_VALUE\n                    });\n                }\n            }\n\n            return result;","ClassMembers":"private class ISP\n    {\n        public string FIELD_VALUE { get; set; }\n    }","NamespaceMembers":"public class ISPItem\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetISPDSLAMPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/getispdslamport/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"ISP","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchid":"switchId","ISP":"ISP"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\n      var data = response.DeserializeResponse<List<DSLAMPortItem>>();\n\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.DSLAM_PORT_ID,\n                        Name = item.DSLAM_PORT\n                    });\n                }\n            }\n\n            return result;","ClassMembers":"private class DSLAMPortItem\n    {\n        public string DSLAM_PORT_ID { get; set; }\n        public string DSLAM_PORT { get; set; }\n        public string DSLAM_CARD_ID { get; set; }\n        public string DSLAM_ID { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"IsManualSwitch","MethodType":0,"MessageFormat":0,"ActionPath":"/Techdetails/Get","ReturnType":"bool","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"phoneNumber"},"ResponseLogic":"bool ismanual = false;\n    var data = response.DeserializeResponse<List<TechnicalReservationDetail>>();\n            if (data != null && data.Count > 0)\n            {\n                TechnicalReservationDetail detail = data[0];\n                ismanual = detail.SWITCH_TYPE == \"Automatic\" ? false : true;\n\n            }\n\n            return ismanual;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"ReserveCPT","MethodType":0,"MessageFormat":0,"ActionPath":"/ReserveCPT/POST","ReturnType":"ReserveCPTRequestOutput","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"cptId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","PhoneNumber":"phoneNumber","CPTID":"cptId"},"ResponseLogic":"ReserveCPTRequestOutput result = new ReserveCPTRequestOutput();\n\n  var data = response.DeserializeResponse<ReserveCPTRequestOutput>();\n\n\n            if (data != null)\n            {\n                result = data;\n\n            }\n            return result;","NamespaceMembers":"public class ReserveCPTRequestOutput\n    {\n        public string Message { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"DeleteCPTReservation","MethodType":0,"MessageFormat":0,"ActionPath":"/DeleteCPTReservation/POST","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","PhoneNumber":"phoneNumber"},"ResponseLogic":"string result = \"\";\n         \nvar data = response.DeserializeResponse<string>();\n            if (data != null)\n            {\n                result = data;\n\n            }\n            return result.ToString();"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDeviceID","MethodType":0,"MessageFormat":0,"ActionPath":"/linkedobject/Get","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumberID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"phoneNumberID","type":"\"device_id\""},"ResponseLogic":"string result = \"\";\n           var data = response.DeserializeResponse<List<DeviceIDDetail>>();\n            if (data != null && data.Count > 0)\n            {\n                DeviceIDDetail detail = data[0];\n                result = detail.SEC;\n                \n            }\n            return result.ToString();","ClassMembers":"private class DeviceIDDetail\n    {\n        public string SEC { get; set; }\n        public string PHONE_NUMBER { get; set; }\n        public string DEV_ID { get; set; }\n        public string DEV_TYPE { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetTechnicalDetailsByPath","MethodType":0,"MessageFormat":0,"ActionPath":"/Technicallinedetailsbypathid/Get","ReturnType":"InventoryPhoneItem","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"pathID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","pathID":"pathID"},"ResponseLogic":"InventoryPhoneItem result = null;\nvar data = response.DeserializeResponse<List<TechnicalReservationDetail>>();\n\n            if (data != null && data.Count > 0)\n            {\n                TechnicalReservationDetail detail = data[0];\n                result = new InventoryPhoneItem\n                {\n                    Cabinet = detail.CABINET_NAME,\n                    Transmitter = detail.TRANSMITTER_NAME,\n                    TransmitterPort = detail.TRANSMITTER_PORT,\n                    DP = detail.DP_NAME,\n                    Switch = detail.SWITCH_NAME,\n                    SWITCH_TYPE = detail.SWITCH_TYPE,\n                    SwitchOMC = detail.SWITCH_OMC,\n                    MDFPort = detail.MDF_PORT,\n                    VerticalMDF = detail.MDF_VERT,\n                    Receiver = detail.RECEIVER_NAME,\n                    ReceiverPort = detail.RECEIVER_PORT,\n                    DPPortId = detail.DP_PORT_ID,\n                    DPId = detail.DP_ID,\n                    SwitchId = detail.SWITCH_ID,\n                    CabinetPrimaryPort = detail.PRIMARY_PORT,\n                    CabinetSecondaryPort = detail.SECONDARY_PORT,\n                    PATH_TYPE = detail.PATH_TYPE,\n                    PhoneType = detail.PATH_TYPE.ToLower().Contains(\"wll\") ? PhoneType.WLL : detail.PATH_TYPE == \"PSTN_LINK\" ? PhoneType.PSTN : PhoneType.ISDN\n                };\n\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDeviceIDs","MethodType":0,"MessageFormat":0,"ActionPath":"/Deviceidsfromphonenumber/get","ReturnType":"List<DeviceDetailItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumbers","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","deviceids":"phoneNumbers"},"ResponseLogic":"List<DeviceDetailItem> result = new List<DeviceDetailItem>();\n   var data = response.DeserializeResponse<List<DeviceDetailItem>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new DeviceDetailItem\n                    {\n                        DEV_ID = item.DEV_ID,\n                        SEC = item.SEC,\n                        DEV_TYPE = item.DEV_TYPE,\n                        PHONE_NUMBER = item.PHONE_NUMBER\n                    });\n                }\n            }\n\n            return result;","NamespaceMembers":"public class DeviceDetailItem\n    {\n        public string SEC { get; set; }\n        public string PHONE_NUMBER { get; set; }\n        public string DEV_ID { get; set; }\n        public string DEV_TYPE { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDPPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeDPPorts/Get","ReturnType":"List<DPPortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"dpId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"dpId"},"ResponseLogic":"List<DPPortItem> result = new List<DPPortItem>();\n            \nvar data = response.DeserializeResponse<List<DPPort>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new DPPortItem\n                    {\n                        Id = item.DP_PORT_ID.ToString(),\n                        Name = item.DP_PORT_NAME\n                    });\n                }\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"CreateFullPath","MethodType":0,"MessageFormat":0,"ActionPath":"/CreateFullPath/Get","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"PathID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"PhoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","pathid":"PathID","phonenumber":"PhoneNumber"},"ResponseLogic":"string result = \"\";\nvar data = response.DeserializeResponse<string>();\n            if (data != null )\n            {\n                result=data;\n            }\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetNumberCategory","MethodType":0,"MessageFormat":0,"ActionPath":"/numbercategory/get","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phonenumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":true}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"string result = \"\";\n           var data = response.DeserializeResponse<List<NumberCategory>>();\n            if (data != null && data.Count > 0)\n            {\n                NumberCategory detail = data[0];\n                result = detail.CATEGORY;\n                \n            }\n            return result.ToString();","ClassMembers":"private class NumberCategory\n    {\n        public string CATEGORY{ get; set; }\n    }"}]},"NamespaceMembers":"public enum PhoneStatus { A, F, R }\n    public enum PhoneType { ISDN = 0, DID = 1, WLL = 2, PES = 3, Fiber = 4, PSTN=5 }\n\n\n    public class PhoneNumberItem\n    {\n        public string Id { get; set; }\n        public string Number { get; set; }\n        public bool IsGold { get; set; }\n        public bool IsISDN { get; set; }\n    }\n\n    public class DeviceItem\n    {\n        public string Id { get; set; }\n        public string DeviceId { get; set; }\n    }\n\npublic class DPPort\n    {\n        public decimal DP_PORT_ID { get; set; }\n        public string DP_PORT_NAME { get; set; }\n    }\npublic class DPPortItem\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n    }\n\npublic class PortItem\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n    }\n\npublic class Port\n    {\n        public decimal OBJECT_ID { get; set; }\n        public string PORT { get; set; }\n    }\n\n    public class NewPhoneItemDetail\n    {\n\n        public PhoneType PhoneType { get; set; }\n        public PhoneStatus PhoneStatus { get; set; }\n        public string VerticalMDF { get; set; }\n        public string MDFPort { get; set; }\n        public string Cabinet { get; set; }\n        public string CabinetPrimaryPort { get; set; }\n        public string CabinetSecondaryPort { get; set; }\n        public string DP { get; set; }\n        public List<string> DPPorts { get; set; }\n        public List<string> DPSecondaryPorts { get; set; }\n\n\n        public string DSlam { get; set; }\n        public string DSlamPort { get; set; }\n        public string DSlamOMC { get; set; }\n\n\n        public string Transmitter { get; set; }\n        public string TransmitterPort { get; set; }\n        public string Receiver { get; set; }\n        public string ReceiverPort { get; set; }\n\n\n        public string MSAN_EID { get; set; }\n        public string MSAN_TID { get; set; }\n        public string MSANType { get; set; }\n\n\n        public bool IsMultiplexed { get; set; }\n    }\n    public class MDFItemDetail\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n        public string VerticalId { get; set; }\n        public string MdfVertical { get; set; }\n        public string PortId { get; set; }\n        public string Port { get; set; }\n\n    }\n\npublic class TechnicalReservationDetail\n    {\n        public string POHNE_NUMBER { get; set; }\n        public string PATH_TYPE { get; set; }\n        public string PHONE_ID { get; set; }\n        public string SWITCH_NAME { get; set; }\n        public string SWITCH_OMC { get; set; }\n        public string SWITCH_TYPE { get; set; }\n        public string DEV_ID { get; set; }\n        public string MDF_NAME { get; set; }\n        public string MDF_VERT { get; set; }\n        public string MDF_PORT { get; set; }\n        public string CABINET_NAME { get; set; }\n        public string PRIMARY_PORT { get; set; }\n        public string SECONDARY_PORT { get; set; }\n        public string DP_NAME { get; set; }\n        public string DP_PORT { get; set; }\n        public string DP_PORT_ID { get; set; }\n        public string DP_ID { get; set; }\n        public string TRANSMITTER_NAME { get; set; }\n        public string TRANSMITTER_MODULE { get; set; }\n        public string TRANSMITTER_PORT { get; set; }\n        public string RECEIVER_NAME { get; set; }\n        public string RECEIVER_PORT { get; set; }\n        public string EXIST_PSTN { get; set; }\n        public string EXIST_ISDN { get; set; }\n        public string EXIST_DID { get; set; }\n        public string SWITCH_ID { get; set; }\n        public string SWITCH_STATUS { get; set; }\n        public string MDF_STATUS { get; set; }\n        public string CABINET_STATUS { get; set; }\n        public string DP_STATUS { get; set; }\npublic string PATH_ID{ get; set; }\npublic string MDF_ID{ get; set; }\npublic string CABINET_ID{ get; set; }\n\n\n    }"}}',1,'2019-03-12 11:46:07.543',-1),
('E9F62780-E6F9-4844-BB97-EA36595505FD','22608A4F-BAD6-48C0-97FD-350976253E9A','Instalment Service Proxy','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"5f14d26d-7b43-41be-9a3a-6ba0a7eb8316","ConnectionId":"91e342c4-3ac0-42b6-8007-a57949f79155","ClassName":"InstalmentServiceProxy","Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetPaymentPlanTemplates","MethodType":1,"MessageFormat":2,"ActionPath":"api/Test/paymentPlanTemplateSearchRequest","ReturnType":"List<PaymentPlanTemplate>","Body":"var paymentPlanTemplateSearchRequestBody = new PaymentPlanTemplateSearchRequestBody {\n    paymentPlanTemplateSearchRequest = new PaymentPlanTemplateSearchRequest {\n    inputAttributes = new PaymentPlanTemplateSearchInputAttributes (),\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<PaymentPlanTemplateSearchRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<PaymentPlanTemplateSearchRequestBody> (paymentPlanTemplateSearchRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"var responseResult = (paymentPlanTemplateSearchResponse) response.DeserializeResponse<paymentPlanTemplateSearchResponse> ();\nList<PaymentPlanTemplate> result = new List<PaymentPlanTemplate> ();\nif (responseResult != null && responseResult.paymentPlanTemplates != null && responseResult.paymentPlanTemplates .Count > 0) {\n    result = responseResult.paymentPlanTemplates .Select (item => new PaymentPlanTemplate {\n        Id = item.paymentPlanTemplateIdPub,\n            Name = item.description\n    }).ToList ();\n};\nreturn result;","ClassMembers":"public class PaymentPlanTemplateSearchRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (\"paymentPlanTemplateSearchRequest\", Namespace = \"http://ericsson.com/services/ws_CIL_7/paymentplantemplatesearch\")]\n    public PaymentPlanTemplateSearchRequest paymentPlanTemplateSearchRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"pay\", \"http://ericsson.com/services/ws_CIL_7/paymentplantemplatesearch\" }\n    };\n}\n\npublic class PaymentPlanTemplateSearchRequest {\n    public PaymentPlanTemplateSearchInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class PaymentPlanTemplateSearchInputAttributes { }\n\n//Response\npublic class paymentPlanTemplateSearchResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<PaymentPlanTemplateResponse > paymentPlanTemplates { get; set; }\n}\n\npublic class PaymentPlanTemplateResponse {\n    public string paymentPlanTemplateIdPub { get; set; }\n    public string description { get; set; }\n}","NamespaceMembers":"public class PaymentPlanTemplate {\n    public string Id { get; set; }\n    public string Name { get; set; }\n}"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"WritePaymentPlan","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/paymentPlanWriteRequest","ReturnType":"List<Installment>","Body":"var paymentPlanWriteRequestBody = new PaymentPlanWriteRequestBody {\n    paymentPlanWriteRequest = new PaymentPlanWriteRequest {\n    inputAttributes = new PaymentPlanWriteInputAttributes {\n    wfEntityId = wfEntityId,\n    paymentPlanTemplateIdPub =paymentPlanTemplateIdPub,\n    simulateMode = simulateMode,\n    status = status\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<PaymentPlanWriteRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<PaymentPlanWriteRequestBody> (paymentPlanWriteRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"wfEntityId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"paymentPlanTemplateIdPub","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"simulateMode","ParameterType":"bool","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"status","ParameterType":"char","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"var responseResult = (paymentPlanWriteResponse) response.DeserializeResponse<paymentPlanWriteResponse> ();\nList<Installment> result = new List<Installment> ();\nif (responseResult != null && responseResult.installments != null && responseResult.installments.Count > 0) {\n    result = responseResult.installments.Select (item => new Installment{\n        Id = item.installmentId,\n            DueDate = item.dueDate,\n            Amount = (item.amountValue != null) ? (decimal?) item.amountValue.amount : null,\n            Currency = (item.amountValue != null) ? item.amountValue.currency : null,\n    }).ToList ();\n};\nreturn result;","ClassMembers":"public class PaymentPlanWriteRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (\"paymentPlanWriteRequest\", Namespace = \"http://ericsson.com/services/ws_CIL_7/paymentplanwrite\")]\n    public PaymentPlanWriteRequest paymentPlanWriteRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"pay\", \"http://ericsson.com/services/ws_CIL_7/paymentplanwrite\" }\n    };\n}\n\npublic class PaymentPlanWriteRequest {\n    public PaymentPlanWriteInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class PaymentPlanWriteInputAttributes {\n    public string wfEntityId { get; set; }\n    public string paymentPlanTemplateIdPub { get; set; }\n    public char status { get; set; }\n    public bool simulateMode { get; set; }\n}\n\n//Response\npublic class paymentPlanWriteResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<InstallmentResponse> installments { get; set; }\n}\n\npublic class InstallmentResponse {\n    public string installmentId { get; set; }\n    public DateTime dueDate { get; set; }\n    public AmountValue amountValue { get; set; }\n}\n\npublic class AmountValue {\n    public decimal amount { get; set; }\n    public string currency { get; set; }\n}","NamespaceMembers":"public class Installment{\n    public string Id { get; set; }\n    public DateTime DueDate { get; set; }\n    public decimal? Amount { get; set; }\n    public string Currency { get; set; }\n}"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"WorkflowEntitySearch","MethodType":1,"MessageFormat":1,"ActionPath":"api/Test/workflowEntitySearchRequest","ReturnType":"string","Body":"var workflowEntitySearchRequestBody = new WorkflowEntitySearchRequestBody {\n    workflowEntitySearchRequest = new WorkflowEntitySearchRequest {\n    inputAttributes = new WorkflowEntitySearchInputAttributes {\n    wfScope = \"DCS\",\n    criteriaList = new List<Criteria> () {\n    new Criteria () {\n    wfPartName = \"INVOICE\",\n    wfAttrIdPub = \"INVOICE_PKEY\",\n    wfValueVarchar = invoiceId\n    }\n    }\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<WorkflowEntitySearchRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<WorkflowEntitySearchRequestBody> (workflowEntitySearchRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"invoiceId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"var responseResult = (workflowEntitySearchResponse) response.DeserializeResponse<workflowEntitySearchResponse> ();\n\nif (responseResult != null && responseResult.wfEntityList != null && responseResult.wfEntityList.Count > 0)\n    return responseResult.wfEntityList[0].wfEntityId;\n\nreturn null;","ClassMembers":"public class WorkflowEntitySearchRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (\"workflowEntitySearchRequest\", Namespace = \"http://ericsson.com/services/ws_CIL_7/workflowentitysearch\")]\n    public WorkflowEntitySearchRequest workflowEntitySearchRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"wor\", \"http://ericsson.com/services/ws_CIL_7/workflowentitysearch\" }\n    };\n}\n\npublic class WorkflowEntitySearchRequest {\n    public WorkflowEntitySearchInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class WorkflowEntitySearchInputAttributes {\n    public string wfScope { get; set; }\n    public List<Criteria> criteriaList { get; set; }\n}\n\npublic class Criteria {\n    public string wfPartName { get; set; }\n    public string wfAttrIdPub { get; set; }\n    public string wfValueVarchar { get; set; }\n}\n\n//Response\npublic class workflowEntitySearchResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<WFEntity> wfEntityList { get; set; }\n}\n\npublic class WFEntity {\n    public string wfEntityId { get; set; }\n}"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"FinancialAllocationWrite","MethodType":1,"MessageFormat":2,"ActionPath":"api/Test/nkFinancialAllocationWriteRequest","ReturnType":"FinancialAllocationWriteResponse","Body":"FinancialAllocationWriteRequestBody financialAllocationWriteRequestBody = new FinancialAllocationWriteRequestBody {\n    nkFinancialAllocationWriteRequest = new FinancialAllocationWriteRequest {\n    inputAttributes = new FinancialAllocationWriteInputAttributes {\n    financialAllocationWriteInputDTO = new FinancialAllocationWriteInputDTO {\n    useCase = new UseCase { publicKey = \"PAYMENT\" },\n    transactions = new List<TransactionWriteInDTO > () {\n    new TransactionWriteInDTO {\n    customer = new Customer { publicKey = customerId },\n    amount = new Amount { amount = amount , currency = \"SYP\"}\n    }\n    }\n    }\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<FinancialAllocationWriteRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<FinancialAllocationWriteRequestBody> (financialAllocationWriteRequestBody);\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"customerId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"amount","ParameterType":"decimal","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"var responseResult = (nkFinancialAllocationWriteResponse) response.DeserializeResponse<nkFinancialAllocationWriteResponse> ();\nvar result = new FinancialAllocationWriteResponse ();\nif (responseResult != null && responseResult.financialAllocationWriteOutputDTO != null && responseResult.financialAllocationWriteOutputDTO.transactions != null && responseResult.financialAllocationWriteOutputDTO.transactions.Count > 0) {\n    var responseObject = responseResult.financialAllocationWriteOutputDTO.transactions[0];\n    if (responseObject != null) {\n        result.transactionId = responseObject.transactionId;\n        if (responseObject.documents != null && responseObject.documents.Count > 0)\n            result.documentId = responseObject.documents[0].documentId;\n    }\n};\nreturn result;","ClassMembers":"public class FinancialAllocationWriteRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (\"nkFinancialAllocationWriteRequest\", Namespace = \"http://ericsson.com/services/ws_CIL_7/nkfinancialallocationwrite\")]\n    public FinancialAllocationWriteRequest nkFinancialAllocationWriteRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"nkf\", \"http://ericsson.com/services/ws_CIL_7/nkfinancialallocationwrite\" }, {\"mon\",\"http://lhsgroup.com/lhsws/money\"}\n    };\n}\n\npublic class FinancialAllocationWriteRequest {\n    public FinancialAllocationWriteInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class FinancialAllocationWriteInputAttributes {\n    public FinancialAllocationWriteInputDTO financialAllocationWriteInputDTO { get; set; }\n}\n\npublic class FinancialAllocationWriteInputDTO {\n    public UseCase useCase { get; set; }\n\n    [System.Xml.Serialization.XmlArrayItem (\"transactionWriteInDTO\")]\n    public List<TransactionWriteInDTO> transactions { get; set; }\n\n}\n\npublic class Customer {\n    public string publicKey { get; set; }\n}\n\npublic class Amount {\n    [System.Xml.Serialization.XmlElement (Namespace = \"http://lhsgroup.com/lhsws/money\")]\n    public decimal amount { get; set; }\n\n    [System.Xml.Serialization.XmlElement (Namespace = \"http://lhsgroup.com/lhsws/money\")]\n    public string currency { get; set; }\n}\n\npublic class TransactionWriteInDTO {\n    public Customer customer { get; set; }\n\n    public Amount amount { get; set; }\n}\n\npublic class UseCase {\n    public string publicKey { get; set; }\n}\n\n//Response\npublic class nkFinancialAllocationWriteResponse {\n    public financialAllocationWriteOutputDTO financialAllocationWriteOutputDTO { get; set; }\n}\n\npublic class financialAllocationWriteOutputDTO {\n    [System.Xml.Serialization.XmlArrayItem (\"transactionWriteOutDTO\")]\n    public List<TransactionWriteOutDTO> transactions { get; set; }\n}\n\npublic class TransactionWriteOutDTO {\n    public string transactionId { get; set; }\n\n    [System.Xml.Serialization.XmlArrayItem (\"documentWriteOutDTO\")]\n    public List<ResponseDocument> documents { get; set; }\n}\n\npublic class ResponseDocument {\n    public string documentId { get; set; }\n}","NamespaceMembers":"public class FinancialAllocationWriteResponse\n{\n    public string transactionId { get; set; }\n    public string documentId { get; set; }\n}"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"ReadPaymentPlan","MethodType":1,"MessageFormat":2,"ActionPath":"api/Test/paymentPlanReadRequest","ReturnType":"List<PaymentPlanReadInstallment>","Body":"var paymentPlanReadRequestBody = new PaymentPlanReadRequestBody {\n    paymentPlanReadRequest = new PaymentPlanReadRequest {\n    inputAttributes = new PaymentPlanReadInputAttributes {\n    paymentPlanId = paymentPlanId,\n    wfEntityId = wfEntityId\n    },\n    sessionChangeRequest = SOM.ST.Billing.Business.Helper.GetSessionChangeRequest7 ()\n    }\n};\n\nSOM.ST.Billing.Entities.BSCSRequest<PaymentPlanReadRequestBody> request = new SOM.ST.Billing.Entities.BSCSRequest<PaymentPlanReadRequestBody> (paymentPlanReadRequestBody);\n\nreturn SOM.ST.Billing.Business.SerializingManager.SerializeFunction (request);","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"paymentPlanId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"wfEntityId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"var responseResult = (paymentPlanReadResponse) response.DeserializeResponse<paymentPlanReadResponse> ();\nList<PaymentPlanReadInstallment> result = new List<PaymentPlanReadInstallment> ();\nif (responseResult != null && responseResult.installments != null && responseResult.installments.Count > 0) {\n    result = responseResult.installments.Select (item => new PaymentPlanReadInstallment {\n        Id = item.installmentId,\n            DueDate = item.dueDate,\n            Amount = (item.amountValue != null) ? (decimal?) item.amountValue.amount : null,\n            Currency = (item.amountValue != null) ? item.amountValue.currency : null,\n            processStatus = item.processStatus\n    }).ToList ();\n};\nreturn result;","ClassMembers":"public class PaymentPlanReadRequestBody : SOM.ST.Billing.Entities.IBSCSRequestBody {\n    [System.Xml.Serialization.XmlElement (\"paymentPlanReadRequest\", Namespace = \"http://ericsson.com/services/ws_CIL_7/paymentplanread\")]\n    public PaymentPlanReadRequest paymentPlanReadRequest { get; set; }\n\n    [System.Xml.Serialization.XmlIgnore]\n    Dictionary<string, string> SOM.ST.Billing.Entities.IBSCSRequestBody.NameSpaces => new Dictionary<string, string> () { { \"ses\", \"http://ericsson.com/services/ws_CIL_7/sessionchange\" }, { \"pay\", \"http://ericsson.com/services/ws_CIL_7/paymentplanread\" }\n    };\n}\n\npublic class PaymentPlanReadRequest {\n    public PaymentPlanReadInputAttributes inputAttributes { get; set; }\n\n    public SOM.ST.Billing.Entities.SessionChangeRequest7 sessionChangeRequest { get; set; }\n}\n\npublic class PaymentPlanReadInputAttributes {\n    public string paymentPlanId { get; set; }\n    public string wfEntityId { get; set; }\n}\n\n//Response\npublic class paymentPlanReadResponse {\n    [System.Xml.Serialization.XmlArrayItem (\"item\")]\n    public List<PaymentPlanReadInstallmentResponse> installments { get; set; }\n}\n\npublic class PaymentPlanReadInstallmentResponse {\n    public string installmentId { get; set; }\n    public DateTime dueDate { get; set; }\n    public PaymentPlanReadInstallmentAmountValue amountValue { get; set; }\n    public char processStatus { get; set; }\n}\n\npublic class PaymentPlanReadInstallmentAmountValue {\n    public decimal amount { get; set; }\n    public string currency { get; set; }\n}","NamespaceMembers":"public class PaymentPlanReadInstallment {\n    public string Id { get; set; }\n    public DateTime DueDate { get; set; }\n    public decimal? Amount { get; set; }\n    public string Currency { get; set; }\n    public char processStatus { get; set; }\n}"}]}}}',-1,'2019-04-01 18:05:54.180',-1)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[VRNamespaceId],[Name],[Settings],[CreatedBy],[LastModifiedTime],[LastModifiedBy]))
merge	[common].[VRNamespaceItem] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
update set
[VRNamespaceId] = s.[VRNamespaceId],[Name] = s.[Name],[Settings] = s.[Settings],[CreatedBy] = s.[CreatedBy],[LastModifiedTime] = s.[LastModifiedTime],[LastModifiedBy] = s.[LastModifiedBy]
when not matched by target then
insert([ID],[VRNamespaceId],[Name],[Settings],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
values(s.[ID],s.[VRNamespaceId],s.[Name],s.[Settings],s.[CreatedBy],s.[LastModifiedTime],s.[LastModifiedBy]);

--[common].[Connection]-----------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('12221745-B7EC-4862-AD1D-28E6A500C49D','Inventory XATKA','{"$type":"Vanrise.Common.Business.VRHttpConnection, Vanrise.Common.Business","ConfigId":"071d54d2-463b-4404-8219-45fcd539ff01","BaseURL":"http://192.168.110.195:8901"}'),
('91E342C4-3AC0-42B6-8007-A57949F79155','BSCS','{"$type":"Vanrise.Common.Business.VRHttpConnection, Vanrise.Common.Business","ConfigId":"071d54d2-463b-4404-8219-45fcd539ff01","BaseURL":"http://192.168.25.27:5550/","Interceptor":{"$type":"SOM.ST.Business.BSCSOnlineInterceptor, SOM.ST.Business","UserName":"UserName","Password":"Password","ConfigId":"461b7474-9b19-4b90-aeab-63ba37245e53"}}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Settings]))
merge	[common].[Connection] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[Settings])
	values(s.[ID],s.[Name],s.[Settings]);



--[SOM_Dev_Configuration].[bp].[VRWorkflow]---------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Title],[Settings],[CreatedBy],[LastModifiedBy])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('58FCA79A-DE69-4803-A2BE-55FAC0D66791','ST_TelephonySuspend','Telephony Suspend','{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowSettings, Vanrise.BusinessProcess.Entities","Arguments":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgumentCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgument, Vanrise.BusinessProcess.Entities","VRWorkflowArgumentId":"4e206426-cc72-11d3-b5f6-05b38e54f5ae","Name":"commonArgument","Type":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowVariableTypes.VRWorkflowCustomClassType, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a6078b0f-efa2-414f-8a25-549628da1762","FieldType":{"$type":"Vanrise.Entities.VRCustomClassType, Vanrise.Entities","Namespace":"SOM.ST.Entities","ClassName":"CommonInputArgument"}},"Direction":0}]},"ClassMembers":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowClassMembers, Vanrise.BusinessProcess.Entities"},"RootActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"50c4fd5d-20c7-b104-e5e2-6d972dc9d5c7","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"970b9b3f-d203-2e0b-eb25-ebd8ae405c2b","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowIfElseActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"40b7e3e9-f8e0-4c2c-9ed7-f79cc4a68473","Editor":"businessprocess-vr-workflowactivity-ifelse","Title":"If Else","Condition":"commonArgument != null && !String.IsNullOrEmpty(commonArgument.ContractId)","TrueActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"367b018d-b630-cc32-89b4-19964dc3c8af","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"64c3068c-e8d0-7b63-2762-58d13a16b8e8","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"Telephony Suspend process has been started for contract {0}\", commonArgument.ContractId)","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"FalseActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"a3733e2e-0123-a33a-3889-0ff12de2b151","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"f5c29609-6507-5e1c-42d9-2f3d66ac52bc","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"Telephony Revoke Soft Suspension process has been started with missing contract Id\")","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"IsDisabled":false}}]},"IsDisabled":false}}}',-1,-1),
('C422B781-9EE7-4B1F-8926-5E1820A7CB38','ST_TelephonyRevokeSoftSuspension','Telephony Revoke Soft Suspension','{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowSettings, Vanrise.BusinessProcess.Entities","Arguments":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgumentCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgument, Vanrise.BusinessProcess.Entities","VRWorkflowArgumentId":"83cda7ea-1347-5efc-086b-64dbc283887b","Name":"commonArgument","Type":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowVariableTypes.VRWorkflowCustomClassType, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a6078b0f-efa2-414f-8a25-549628da1762","FieldType":{"$type":"Vanrise.Entities.VRCustomClassType, Vanrise.Entities","Namespace":"SOM.ST.Entities","ClassName":"CommonInputArgument"}},"Direction":0}]},"ClassMembers":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowClassMembers, Vanrise.BusinessProcess.Entities"},"RootActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"aa12f84c-2f62-2d99-67b3-e3705a5c9573","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"100307fa-3337-b6b6-8612-bc59ab5e564e","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowIfElseActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"40b7e3e9-f8e0-4c2c-9ed7-f79cc4a68473","Editor":"businessprocess-vr-workflowactivity-ifelse","Title":"If Else","Condition":"commonArgument != null && !String.IsNullOrEmpty(commonArgument.ContractId)","TrueActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"4bad9e89-bff4-4fa7-f333-fdfebfb0f219","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"7b824886-66b6-a12f-b01e-fbd6f5a8673f","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"Telephony Revoke Soft Suspension process has been started for contract {0}\", commonArgument.ContractId)","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"FalseActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"f69f87c2-78c7-731e-d78f-6d8c2f92c74b","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"9dd8343d-e941-1a26-0d3e-d380ffea3826","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"Telephony Revoke Soft Suspension process has been started with missing contract Id\")","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"IsDisabled":false}}]},"IsDisabled":false}}}',-1,-1),
('AD8CAF52-023E-481B-BCE7-D7D00E46E58B','ST_TelephonySoftSuspend','Telephony Soft Suspend','{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowSettings, Vanrise.BusinessProcess.Entities","Arguments":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgumentCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgument, Vanrise.BusinessProcess.Entities","VRWorkflowArgumentId":"1fb5b3c0-6200-bc4d-c852-8befb187e81e","Name":"commonArgument","Type":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowVariableTypes.VRWorkflowCustomClassType, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a6078b0f-efa2-414f-8a25-549628da1762","FieldType":{"$type":"Vanrise.Entities.VRCustomClassType, Vanrise.Entities","Namespace":"SOM.ST.Entities","ClassName":"CommonInputArgument"}},"Direction":0}]},"ClassMembers":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowClassMembers, Vanrise.BusinessProcess.Entities"},"RootActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"24302aca-6b44-401a-ec0f-97bcd3b7d3b2","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"4a0a902e-7747-817e-27c1-069f021ddecf","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowIfElseActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"40b7e3e9-f8e0-4c2c-9ed7-f79cc4a68473","Editor":"businessprocess-vr-workflowactivity-ifelse","Title":"If Else","Condition":"commonArgument != null && !String.IsNullOrEmpty(commonArgument.ContractId)","TrueActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"ed87c65e-49ba-89b3-d672-6862b22fcba8","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"a330454d-33a8-7ead-e39c-cc618b1a9e9c","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"A process has been started for contract {0}\", commonArgument.ContractId)","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"FalseActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"c9a71c73-0ab4-f550-1667-7926e52fbc82","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"7ce3b12f-cfe9-8c9e-a5b5-5d79526ce1dc","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"Telephony Revoke Soft Suspension process has been started with missing contract Id\")","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"IsDisabled":false}}]},"IsDisabled":false}}}',-1,-1),
('C7785C42-36B2-4094-8064-F2F8084405BC','ST_TelephonyRevokeSuspension','Telephony Revoke Suspension','{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowSettings, Vanrise.BusinessProcess.Entities","Arguments":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgumentCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowArgument, Vanrise.BusinessProcess.Entities","VRWorkflowArgumentId":"4a657ae3-1df1-e41b-c3ae-395225d44d71","Name":"commonArgument","Type":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowVariableTypes.VRWorkflowCustomClassType, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a6078b0f-efa2-414f-8a25-549628da1762","FieldType":{"$type":"Vanrise.Entities.VRCustomClassType, Vanrise.Entities","Namespace":"SOM.ST.Entities","ClassName":"CommonInputArgument"}},"Direction":0}]},"ClassMembers":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowClassMembers, Vanrise.BusinessProcess.Entities"},"RootActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"d73a0bf0-5147-01a1-8fec-b449f46960e9","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"7a0ed5ce-1e6e-de59-b020-b8451f31b33b","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowIfElseActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"40b7e3e9-f8e0-4c2c-9ed7-f79cc4a68473","Editor":"businessprocess-vr-workflowactivity-ifelse","Title":"If Else","Condition":"commonArgument != null && !String.IsNullOrEmpty(commonArgument.ContractId)","TrueActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"b49b5cb9-5804-8fe1-195b-51a4044b6da1","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"596b1aef-4f3c-060c-a316-45fe222bd045","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"Telephony Revoke Suspension process has been started for contract {0}\", commonArgument.ContractId)","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"FalseActivity":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"4a627119-2801-6f69-cfd5-33f92400e4ed","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowSequenceActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"9292b3be-256f-400f-9bc6-a0423fa0b30f","Editor":"businessprocess-vr-workflowactivity-sequence","Title":"Sequence","Activities":{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivityCollection, Vanrise.BusinessProcess.Entities","$values":[{"$type":"Vanrise.BusinessProcess.Entities.VRWorkflowActivity, Vanrise.BusinessProcess.Entities","VRWorkflowActivityId":"b345b79c-12c8-d381-9f7f-a470c5a0fccd","Settings":{"$type":"Vanrise.BusinessProcess.MainExtensions.VRWorkflowActivities.VRWorkflowWriteTrackingMessageActivity, Vanrise.BusinessProcess.MainExtensions","ConfigId":"a0de8c69-7427-4f95-9a4d-9ecd8658d7b2","Editor":"businessprocess-vr-workflowactivity-writetrackingmessage","Title":"Log Message","Message":"string.Format(\"Telephony Revoke Soft Suspension process has been started with missing contract Id\")","Severity":0,"IsDisabled":false}}]},"IsDisabled":false}},"IsDisabled":false}}]},"IsDisabled":false}}}',-1,-1)
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Title],[Settings],[CreatedBy],[LastModifiedBy]))
merge	[bp].[VRWorkflow] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Title] = s.[Title],[Settings] = s.[Settings],[CreatedBy] = s.[CreatedBy],[LastModifiedBy] = s.[LastModifiedBy]
when not matched by target then
	insert([ID],[Name],[Title],[Settings],[CreatedBy],[LastModifiedBy])
	values(s.[ID],s.[Name],s.[Title],s.[Settings],s.[CreatedBy],s.[LastModifiedBy]);



--[SOM_Dev_Configuration].[bp].[BPDefinition]-------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Title],[FQTN],[VRWorkflowId],[Config])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('0429FCBA-2DD4-4090-B041-5B30A0C9DE06','VRWorkflowInputArgument_0429fcba2dd44090b0415b30a0c9de06','TelephonyRevokeSuspension',null,'C7785C42-36B2-4094-8064-F2F8084405BC','{"$type":"Vanrise.BusinessProcess.Entities.BPConfiguration, Vanrise.BusinessProcess.Entities","ProcessTitle":"","ManualExecEditor":"bp-vr-workflow-manualexeceditor","IsPersistable":false,"HasChildProcesses":false,"HasBusinessRules":false,"NotVisibleInManagementScreen":false,"Security":{"$type":"Vanrise.BusinessProcess.Entities.BPDefinitionSecurity, Vanrise.BusinessProcess.Entities","View":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["ViewLogs"]}}]}},"StartNewInstance":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Invoke"]}}]}},"ScheduleTask":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"BusinessRuleSetSupported":false}'),
('60E82B53-668A-413F-BCF3-7F64B3E7F5AA','VRWorkflowInputArgument_60e82b53668a413fbcf37f64b3e7f5aa','TelephonySuspend',null,'58FCA79A-DE69-4803-A2BE-55FAC0D66791','{"$type":"Vanrise.BusinessProcess.Entities.BPConfiguration, Vanrise.BusinessProcess.Entities","ProcessTitle":"","ManualExecEditor":"bp-vr-workflow-manualexeceditor","IsPersistable":false,"HasChildProcesses":false,"HasBusinessRules":false,"NotVisibleInManagementScreen":false,"Security":{"$type":"Vanrise.BusinessProcess.Entities.BPDefinitionSecurity, Vanrise.BusinessProcess.Entities","View":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["ViewLogs"]}}]}},"StartNewInstance":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Invoke"]}}]}},"ScheduleTask":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"BusinessRuleSetSupported":false}'),
('F8BEBF06-0599-432A-B09B-A136E9A87B07','VRWorkflowInputArgument_f8bebf060599432ab09ba136e9a87b07','TelephonyRevokeSoftSuspension',null,'C422B781-9EE7-4B1F-8926-5E1820A7CB38','{"$type":"Vanrise.BusinessProcess.Entities.BPConfiguration, Vanrise.BusinessProcess.Entities","ProcessTitle":"","ManualExecEditor":"bp-vr-workflow-manualexeceditor","IsPersistable":false,"HasChildProcesses":false,"HasBusinessRules":false,"NotVisibleInManagementScreen":false,"Security":{"$type":"Vanrise.BusinessProcess.Entities.BPDefinitionSecurity, Vanrise.BusinessProcess.Entities","View":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["ViewLogs"]}}]}},"StartNewInstance":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Invoke"]}}]}},"ScheduleTask":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"BusinessRuleSetSupported":false}'),
('B3A43FB8-D8D4-4ED8-A0CE-B9015DC7A22F','VRWorkflowInputArgument_b3a43fb8d8d44ed8a0ceb9015dc7a22f','TelephonySoftSuspend',null,'AD8CAF52-023E-481B-BCE7-D7D00E46E58B','{"$type":"Vanrise.BusinessProcess.Entities.BPConfiguration, Vanrise.BusinessProcess.Entities","ProcessTitle":"","ManualExecEditor":"bp-vr-workflow-manualexeceditor","IsPersistable":false,"HasChildProcesses":false,"HasBusinessRules":false,"NotVisibleInManagementScreen":false,"Security":{"$type":"Vanrise.BusinessProcess.Entities.BPDefinitionSecurity, Vanrise.BusinessProcess.Entities","View":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["ViewLogs"]}}]}},"StartNewInstance":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[{"$type":"Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities","EntityId":"d1f22bce-cce7-4eb1-9c07-3d1225103338","PermissionOptions":{"$type":"System.Collections.Generic.List`1[[System.String, mscorlib]], mscorlib","$values":["Invoke"]}}]}},"ScheduleTask":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"BusinessRuleSetSupported":false}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Title],[FQTN],[VRWorkflowId],[Config]))
merge	[bp].[BPDefinition] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Title] = s.[Title],[FQTN] = s.[FQTN],[VRWorkflowId] = s.[VRWorkflowId],[Config] = s.[Config]
when not matched by target then
	insert([ID],[Name],[Title],[FQTN],[VRWorkflowId],[Config])
	values(s.[ID],s.[Name],s.[Title],s.[FQTN],s.[VRWorkflowId],s.[Config]);

--[sec].[Group]--------------------------------------------------------------------------------
BEGIN
set nocount on;
;with cte_data([PSIdentifier],[Name],[Description],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('SOM_Billing','Billing System',null,'{"$type":"Vanrise.Security.Business.StaticGroup, Vanrise.Security.Business","ConfigId":"be6619ae-687f-45e3-bd7b-90d1db4626b6","MemberIds":{"$type":"System.Collections.Generic.List`1[[System.Int32, mscorlib]], mscorlib","$values":[]}}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([PSIdentifier],[Name],[Description],[Settings]))
merge	[sec].[Group] as t
using	cte_data as s
on		1=1 and t.[PSIdentifier] = s.[PSIdentifier]
--when matched then
--	update set
--	[Name] = s.[Name],[Description] = s.[Description],[Settings] = s.[Settings]
when not matched by target then
	insert([PSIdentifier],[Name],[Description],[Settings])
	values(s.[PSIdentifier],s.[Name],s.[Description],s.[Settings]);

END

DECLARE @SOM_BillingGroupId int = (SELECT ID FROM sec.[Group] where [PSIdentifier] = 'SOM_Billing')
--[sec].[Permission]------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------set nocount on;;with cte_data([HolderType],[HolderId],[EntityType],[EntityId],[PermissionFlags])as (select * from (values--//////////////////////////////////////////////////////////////////////////////////////////////////(1,@SOM_BillingGroupId,1,'d1f22bce-cce7-4eb1-9c07-3d1225103338','[{"Name":"Invoke","Value":1},{"Name":"ViewLogs","Value":1}]')--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\)c([HolderType],[HolderId],[EntityType],[EntityId],[PermissionFlags]))merge	[sec].[Permission] as tusing	cte_data as son		1=1 and t.[HolderType] = s.[HolderType] and t.[HolderId] = s.[HolderId] and t.[EntityType] = s.[EntityType] and t.[EntityId] = s.[EntityId]--when matched then--	update set--	[PermissionFlags] = s.[PermissionFlags]when not matched by target then	insert([HolderType],[HolderId],[EntityType],[EntityId],[PermissionFlags])	values(s.[HolderType],s.[HolderId],s.[EntityType],s.[EntityId],s.[PermissionFlags]);