	--[common].[VRDynamicAPI]---------------------------------------------------------------------------
	----------------------------------------------------------------------------------------------------
	set nocount on;
	;with cte_data([ID],[Name],[ModuleId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime])
	as (select * from (values
	--//////////////////////////////////////////////////////////////////////////////////////////////////
	('CD269DE9-6D54-4609-B92C-E5620724A4AF','Inventory','6DD49F76-2CBA-4E9F-A297-A58A9979493F','{"$type":"Vanrise.Entities.VRDynamicAPISettings, Vanrise.Entities","Security":{"$type":"Vanrise.Entities.VRDynamicAPISecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}},"Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities]], mscorlib","$values":[{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetTechnicalDetails","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetTechnicalDetails","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetTemporaryTechnicalReservation","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetTemporaryTechnicalReservation","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetFreeDPPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetFreeDPPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetCabinetSecondaryPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetCabinetSecondaryPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetAvailableNumbers","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetAvailableNumbers","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetFreeDevices","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetFreeDevices","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetCabinetPrimaryPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetCabinetPrimaryPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDSLAMPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDSLAMPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"CheckADSL","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"CheckADSL","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetISPs","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetISPs","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetISPDSLAMPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetISPDSLAMPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"IsManualSwitch","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"IsManualSwitch","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ReserveCPT","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"ReserveCPT","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"DeleteCPTReservation","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"DeleteCPTReservation","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ReservePhoneNumber","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"ReservePhoneNumberCustomCode","MethodName":"ReservePhoneNumber","MethodType":2},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDeviceID","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDeviceID","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetTechnicalDetailsByPath","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetTechnicalDetailsByPath","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDeviceIDs","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDeviceIDs","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"CreateFullPath","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"CreateFullPath","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"ReserveNumber","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"ReserveNumber","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}},{"$type":"Vanrise.Entities.VRDynamicAPIMethod, Vanrise.Entities","VRDynamicAPIMethodId":"00000000-0000-0000-0000-000000000000","Name":"GetDPPorts","Settings":{"$type":"Vanrise.Common.MainExtensions.VRDynamicAPI.VRCallMethodDynamicAPI, Vanrise.Common.MainExtensions","ConfigId":"aac62543-cf85-4f0d-bb42-121c7b699816","NamespaceId":"7db4f2c0-89a5-446a-b8a8-624ec4f9eaf5","ClassName":"InventoryServiceProxy","MethodName":"GetDPPorts","MethodType":1},"Security":{"$type":"Vanrise.Entities.VRDynamicAPIMethodSecurity, Vanrise.Entities","RequiredPermissions":{"$type":"Vanrise.Security.Entities.RequiredPermissionSettings, Vanrise.Security.Entities","Entries":{"$type":"System.Collections.Generic.List`1[[Vanrise.Security.Entities.RequiredPermissionEntry, Vanrise.Security.Entities]], mscorlib","$values":[]}}}}]}}',-1,-1,'2018-12-24 10:57:43.380')
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	)c([ID],[Name],[ModuleId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime]))
	merge	[common].[VRDynamicAPI] as t
	using	cte_data as s
	on		1=1 and t.[ID] = s.[ID]
	when matched then
	update set
	[Name] = s.[Name],[ModuleId] = s.[ModuleId],[Settings] = s.[Settings],[CreatedBy] = s.[CreatedBy],[LastModifiedBy] = s.[LastModifiedBy],[LastModifiedTime] = s.[LastModifiedTime]
	when not matched by target then
	insert([ID],[Name],[ModuleId],[Settings],[CreatedBy],[LastModifiedBy],[LastModifiedTime])
	values(s.[ID],s.[Name],s.[ModuleId],s.[Settings],s.[CreatedBy],s.[LastModifiedBy],s.[LastModifiedTime]);
	--[common].[VRDynamicAPIModule]---------------------------------------------------------------------
	----------------------------------------------------------------------------------------------------
	set nocount on;
	;with cte_data([ID],[Name],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
	as (select * from (values
	--//////////////////////////////////////////////////////////////////////////////////////////////////
	('6DD49F76-2CBA-4E9F-A297-A58A9979493F','SOM',1,'2018-12-14 10:52:56.010',-1)
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	)c([ID],[Name],[CreatedBy],[LastModifiedTime],[LastModifiedBy]))
	merge	[common].[VRDynamicAPIModule] as t
	using	cte_data as s
	on		1=1 and t.[ID] = s.[ID]
	when matched then
	update set
	[Name] = s.[Name],[CreatedBy] = s.[CreatedBy],[LastModifiedTime] = s.[LastModifiedTime],[LastModifiedBy] = s.[LastModifiedBy]
	when not matched by target then
	insert([ID],[Name],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
	values(s.[ID],s.[Name],s.[CreatedBy],s.[LastModifiedTime],s.[LastModifiedBy]);



		--[common].[VRNamespace]----------------------------------------------------------------------------
	----------------------------------------------------------------------------------------------------
	set nocount on;
	;with cte_data([ID],[Name],[CreatedTime])
	as (select * from (values
	--//////////////////////////////////////////////////////////////////////////////////////////////////
	('7DB4F2C0-89A5-446A-B8A8-624EC4F9EAF5','Inventory.Business',null)
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	)c([ID],[Name],[CreatedTime]))
	merge	[common].[VRNamespace] as t
	using	cte_data as s
	on		1=1 and t.[ID] = s.[ID]
	when matched then
	update set
	[Name] = s.[Name],[CreatedTime] = s.[CreatedTime]
	when not matched by target then
	insert([ID],[Name],[CreatedTime])
	values(s.[ID],s.[Name],s.[CreatedTime]);
	--[common].[VRNamespaceItem]------------------------------------------------------------------------
	----------------------------------------------------------------------------------------------------
	set nocount on;
	;with cte_data([ID],[VRNamespaceId],[Name],[Settings],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
	as (select * from (values
	--//////////////////////////////////////////////////////////////////////////////////////////////////
	('E0897B85-93F6-240F-CFFA-6F4B199B2B4F','7DB4F2C0-89A5-446A-B8A8-624EC4F9EAF5','ReservePhoneNumber','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.CustomCodeDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"bdd289df-573c-44a1-9a95-d0de2ed9dd71","CustomCode":"public class ReserveLineRequestInput\n    {\n        public string PhoneNumber { get; set; }\n\n        public string PrimaryPort { get; set; }\n\n        public string SecondaryPort { get; set; }\n    }\n\n    public class ReserveLineRequestOutput\n    {\n        public string Message { get; set; }\n    }\n\npublic class ReservePhoneNumberCustomCode{\npublic ReserveLineRequestOutput ReservePhoneNumber(ReserveLineRequestInput input)\n        {\n            return new ReserveLineRequestOutput\n            {\n                Message = string.Format(\"Phone Number {0} is Reserved\", input.PhoneNumber)\n            };\n        }\n}"}}',1,'2018-12-31 10:02:18.240',1),
	('582A001C-9ABD-FC77-5BE7-DBF5377CA8EA','7DB4F2C0-89A5-446A-B8A8-624EC4F9EAF5','Inventory Service Proxy','{"$type":"Vanrise.Entities.VRNamespaceItemSettings, Vanrise.Entities","Code":{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyDynamicCodeSettings, Vanrise.Common.MainExtensions","ConfigId":"5f14d26d-7b43-41be-9a3a-6ba0a7eb8316","ConnectionId":"12221745-b7ec-4862-ad1d-28e6a500c49d","ClassName":"InventoryServiceProxy","Methods":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetTechnicalDetails","MethodType":0,"MessageFormat":0,"ActionPath":"/Techdetails/Get","ReturnType":"InventoryPhoneItem","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"phoneNumber"},"ResponseLogic":"InventoryPhoneItem result = null;\nvar data = response.DeserializeResponse<List<TechnicalReservationDetail>>();\nif (data != null && data.Count > 0)\n            {\n                TechnicalReservationDetail detail = data[0];\n                result = new InventoryPhoneItem\n                {\n                    Cabinet = detail.CABINET_NAME,\n                    Transmitter = detail.TRANSMITTER_NAME,\n                    TransmitterPort = detail.TRANSMITTER_PORT,\n                    DP = detail.DP_NAME,\n                    Switch = detail.SWITCH_NAME,\n                    SWITCH_TYPE = detail.SWITCH_TYPE,\n                    SwitchOMC = detail.SWITCH_OMC,\n                    MDFPort = detail.MDF_PORT,\n                    VerticalMDF = detail.MDF_VERT,\n                    Receiver = detail.RECEIVER_NAME,\n                    ReceiverPort = detail.RECEIVER_PORT,\n                    DPPortId = detail.DP_PORT_ID,\n                    DPId = detail.DP_ID,\n                    SwitchId = detail.SWITCH_ID,\n                    CabinetPrimaryPort = detail.PRIMARY_PORT,\n                    CabinetSecondaryPort = detail.SECONDARY_PORT,\n                    PATH_TYPE = detail.PATH_TYPE,\n                    PhoneType = detail.PATH_TYPE.ToLower().Contains(\"wll\") ? PhoneType.WLL : detail.PATH_TYPE == \"PSTN_LINK\" ? PhoneType.PSTN : PhoneType.ISDN\n                };\n\n            }\n\nreturn result;","NamespaceMembers":"public class InventoryPhoneItem\n    {\n\n        public PhoneType PhoneType { get; set; }\n        public string PATH_TYPE { get; set; }\n        public PhoneStatus PhoneStatus { get; set; }\n        public string VerticalMDF { get; set; }\n        public string MDFPort { get; set; }\n        public string Cabinet { get; set; }\n        public string CabinetPrimaryPort { get; set; }\n        public string CabinetSecondaryPort { get; set; }\n        public string DP { get; set; }\n        public List<string> DPPorts { get; set; }\n        public List<string> DPSecondaryPorts { get; set; }\n        public string Switch { get; set; }\n        public string SwitchId { get; set; }\n        public string SwitchOMC { get; set; }\n        public string SWITCH_TYPE { get; set; }\n\n        public string DPPortId { get; set; }\n\n        public string DSlam { get; set; }\n        public string DSlamPort { get; set; }\n        public string DSlamOMC { get; set; }\n\n\n        public string Transmitter { get; set; }\n        public string TransmitterPort { get; set; }\n        public string Receiver { get; set; }\n        public string ReceiverPort { get; set; }\n\n\n        public string MSAN_EID { get; set; }\n        public string MSAN_TID { get; set; }\n        public string MSANType { get; set; }\n\n\n        public bool IsMultiplexed { get; set; }\n\n\n        public string DPId { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetTemporaryTechnicalReservation","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeReservation/GET","ReturnType":"TechnicalReservationPhoneItem","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","number":"phoneNumber","Override":"\"1\""},"ResponseLogic":"TechnicalReservationPhoneItem result = null;\n\n           var data = response.DeserializeResponse<List<FreeReservationDetail>>();\n\n            if (data != null && data.Count > 0)\n            {\n                FreeReservationDetail detail = data[0];\n                result = new TechnicalReservationPhoneItem\n                {\n                    Cabinet = detail.CABINET_NAME,\n                    Transmitter = detail.WLL_TRANSMITTER_NAME,\n                    TransmitterPort = detail.WLL_TRANSMITTER_PORT_NAME,\n                    DP = detail.DP_NAME,\n                    Switch = detail.SWITCH_NAME,\n                    MDFPort = detail.MDF_PORT,\n                    VerticalMDF = detail.MDF_VERT,\n                    DPPortId = detail.DP_PORT_ID,\n                    DPId = detail.DP_ID,\n                    SwitchId = detail.SWITCH_ID,\n                    TransmitterId = detail.WLL_TRANSMITTER_ID,\n                    TransmitterPortId = detail.WLL_TRANSMITTER_PORT_ID,\n                    TransmitterModuleId = detail.WLL_TRANSMITTER_MODULE_ID,\n                    TransmitterModule = detail.WLL_TRANSMITTER_MODULE_NAME,\n                    Threshold = detail.THRESHOLD,\n                    SecondaryPortId = detail.SECONDARY_PORT_ID,\n                    SecondaryPort = detail.SECONDARY_PORT,\n                    ReceiverPortId = detail.WLL_RECEIVER_ID,\n                    ReceiverId = detail.WLL_RECEIVER_ID,\n                    Receiver = detail.WLL_RECEIVER_NAME,\n                    ReceiverPort = detail.WLL_RECEIVER_PORT_NAME,\n                    CabinetId = detail.CABINET_ID,\n                    CanReserve = detail.CAN_RESERVE,\n                    CurrentUtilization = detail.CURRENT_UTILIZATION,\n                    DIDExist = detail.EXIST_DID,\n                    DPMUXPort = detail.DP_MUX_PORT_NAME,\n                    DPMUXPortId = detail.DP_MUX_PORT_ID,\n                    DPPort = detail.DP_PORT,\n                    ISDNExist = detail.EXIST_ISDN,\n                    MDF = detail.MDF_NAME,\n                    MDFId = detail.MDF_ID,\n                    MDFPortId = detail.MDF_PORT_ID,\n                    PrimaryMUXPort = detail.PRIMARY_MUX_PORT_NAME,\n                    PrimaryMUXPortId = detail.PRIMARY_MUX_PORT_ID,\n                    PrimaryPort = detail.PRIMARY_PORT,\n                    PrimaryPortId = detail.PRIMARY_PORT_ID,\n                    PSTNExist = detail.EXIST_PSTN,\n                    VerticalMDFId = detail.MDF_VERT_ID\n\n                };\n\n            }\n\n            return result;","ClassMembers":"private class FreeReservationDetail\n    {\n        public string SWITCH_NAME { get; set; }\n        public string SWITCH_ID { get; set; }\n        public string MDF_NAME { get; set; }\n        public string MDF_ID { get; set; }\n        public string MDF_VERT { get; set; }\n        public string MDF_VERT_ID { get; set; }\n        public string MDF_PORT { get; set; }\n        public string MDF_PORT_ID { get; set; }\n        public string CABINET_NAME { get; set; }\n        public string CABINET_ID { get; set; }\n        public string PRIMARY_PORT { get; set; }\n        public string SECONDARY_PORT { get; set; }\n        public string PRIMARY_PORT_ID { get; set; }\n        public string SECONDARY_PORT_ID { get; set; }\n        public string PRIMARY_MUX_PORT_ID { get; set; }\n        public string PRIMARY_MUX_PORT_NAME { get; set; }\n        public string DP_NAME { get; set; }\n        public string DP_PORT { get; set; }\n        public string DP_PORT_ID { get; set; }\n        public string DP_ID { get; set; }\n        public string DP_MUX_PORT_ID { get; set; }\n        public string DP_MUX_PORT_NAME { get; set; }\n        public string WLL_TRANSMITTER_ID { get; set; }\n        public string WLL_TRANSMITTER_NAME { get; set; }\n        public string WLL_TRANSMITTER_MODULE_ID { get; set; }\n        public string WLL_TRANSMITTER_MODULE_NAME { get; set; }\n        public string WLL_TRANSMITTER_PORT_ID { get; set; }\n        public string WLL_TRANSMITTER_PORT_NAME { get; set; }\n        public string WLL_RECEIVER_NAME { get; set; }\n        public string WLL_RECEIVER_ID { get; set; }\n        public string WLL_RECEIVER_PORT_ID { get; set; }\n        public string WLL_RECEIVER_PORT_NAME { get; set; }\n        public string EXIST_PSTN { get; set; }\n        public string EXIST_ISDN { get; set; }\n        public string EXIST_DID { get; set; }\n        public string CAN_RESERVE { get; set; }\n        public string CURRENT_UTILIZATION { get; set; }\n        public string THRESHOLD { get; set; }\n    }","NamespaceMembers":"public class TechnicalReservationPhoneItem\n    {\n        public string Switch { get; set; }\n        public string SwitchId { get; set; }\n        \n        public string MDF { get; set; }\n        public string MDFId { get; set; }\n        public string VerticalMDF { get; set; }\n        public string VerticalMDFId { get; set; }\n        public string MDFPort { get; set; }\n        public string MDFPortId { get; set; }\n        \n        public string Cabinet { get; set; }\n        public string CabinetId { get; set; }\n        public string PrimaryPort { get; set; }\n        public string PrimaryPortId { get; set; }\n        public string PrimaryMUXPort { get; set; }\n        public string PrimaryMUXPortId { get; set; }\n        public string SecondaryPort { get; set; }\n        public string SecondaryPortId { get; set; }\n        \n        public string DP { get; set; }\n        public string DPId { get; set; }\n        public string DPPort { get; set; }\n        public string DPPortId { get; set; }\n        public string DPMUXPort { get; set; }\n        public string DPMUXPortId { get; set; }\n        \n        public string Transmitter { get; set; }\n        public string TransmitterId { get; set; }\n        public string TransmitterPort { get; set; }\n        public string TransmitterPortId { get; set; }\n        public string TransmitterModule { get; set; }\n        public string TransmitterModuleId { get; set; }\n        public string Receiver { get; set; }\n        public string ReceiverId { get; set; }\n        public string ReceiverPort { get; set; }\n        public string ReceiverPortId { get; set; }\n\n        public string PSTNExist { get; set; }\n        public string ISDNExist { get; set; }\n        public string DIDExist { get; set; }\n        public string CanReserve { get; set; }\n        public string CurrentUtilization { get; set; }\n        public string Threshold { get; set; }\n\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetFreeDPPorts",
	"MethodType":0,"MessageFormat":0,"ActionPath":"/FreeDPPorts/Get","ReturnType":"List<DPPortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"dpId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"dpId"},"ResponseLogic":"List<DPPortItem> result = new List<DPPortItem>();\n\n            var data = response.DeserializeResponse<List<DPPort>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new DPPortItem\n                    {\n                        Id = item.DP_PORT_ID.ToString(),\n                        Name = item.DP_PORT_NAME\n                    });\n                }\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetCabinetSecondaryPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/TLDSecondaryPort/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"cabinetId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"cabinetId"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\n\n var data = response.DeserializeResponse<List<Port>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.OBJECT_ID.ToString(),\n                        Name = item.PORT\n                    });\n                }\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetAvailableNumbers","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeNumbers/Get","ReturnType":"List<PhoneNumberItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"category","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"type","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"top","ParameterType":"int","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchid":"switchId","category":"category","type":"type","top":"top"},"ResponseLogic":"List<PhoneNumberItem> phoneNumbers = new List<PhoneNumberItem>();\n               var data = response.DeserializeResponse<List<AktavaraPhoneNumber>>();\n            return data == null ? null : data.MapRecords(c => new PhoneNumberItem\n            {\n                Id = c.OBJECT_ID,\n                Number = c.PHONE_NUMBER\n            }).ToList();","ClassMembers":"private class AktavaraPhoneNumber\n    {\n        public string OBJECT_ID { get; set; }\n        public string PHONE_NUMBER { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetFreeDevices","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeDevice/Get","ReturnType":"List<DeviceItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"lineType","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"top","ParameterType":"int","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchId":"switchId","type":"lineType","top":"top"},"ResponseLogic":"List<PhoneNumberItem> phoneNumbers = new List<PhoneNumberItem>();\n            var data = response.DeserializeResponse<List<AktavaraDevice>>();\n            return data == null ? null : data.MapRecords(c => new DeviceItem\n            {\n                Id = c.OBJECT_ID,\n                DeviceId = c.PORT\n            }).ToList();","ClassMembers":"private class AktavaraDevice\n    {\n        public string OBJECT_ID { get; set; }\n        public string PORT { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetCabinetPrimaryPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/TLDPrimaryPort/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"cabinetId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"cabinetId"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\nvar data = response.DeserializeResponse<List<Port>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.OBJECT_ID.ToString(),\n                        Name = item.PORT\n                    });\n                }\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"ReserveNumber","MethodType":0,"MessageFormat":0,"ActionPath":"/reservation/Get","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"pathType","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumberID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"deviceID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"mDFPortID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"dPPortID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"primaryPort","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"secondaryPort","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","pathtype":"pathType","Pathname":"pathType + \"_\" + phoneNumber","ObjectList":"phoneNumberID + \",\" + deviceID + \",\" + mDFPortID + \",\" + primaryPort + \",\" + secondaryPort + \",\" + dPPortID","connectors":"deviceID + \",\" + mDFPortID + \",COPPER_LINK|\" + primaryPort + \",\" + secondaryPort + \",COPPER_LINK\""},"ResponseLogic":"string result = \"\";\n\n         var data = response.DeserializeResponse<string>();\n\n            if (data != null)\n            {\n                result = data;\n            }\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDSLAMPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/getdslamport/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchid":"switchId"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\nvar data = response.DeserializeResponse<List<DSLAMPort>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.OBJECT_ID.ToString(),\n                        Name = item.POS\n                    });\n                }\n            }\n\n            return result;","ClassMembers":"private class DSLAMPort\n    {\n        public string OBJECT_ID { get; set; }\n        public string POS { get; set; }\n        public string CONNECTOR_TYPE { get; set; }\n        public string CAPACITY { get; set; }\n        public string DIRECTION { get; set; }\n        public string VENDOR_PORT_NAME { get; set; }\n        public string RESERVATION_STATUS { get; set; }\n        public string RESERVED_BY { get; set; }\n        public string RESERVED_DATE { get; set; }\n        public string RESERVATION_PERIOD { get; set; }\n        public string REMARKS { get; set; }\n        public string CREATED { get; set; }\n        public string CREATED_BY { get; set; }\n        public string LAST_CHANGED { get; set; }\n        public string CHANGED_BY { get; set; }\n        public string ISP { get; set; }\n        public string USERNAME { get; set; }\n\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"CheckADSL","MethodType":0,"MessageFormat":0,"ActionPath":"/checkdsl/Get","ReturnType":"LinePath","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","phonenumber":"phoneNumber"},"ResponseLogic":"LinePath result = new LinePath();\nvar data = response.DeserializeResponse<List<PhoneLinePath>>();\n            if (data != null && data.Count>0)\n            {\n                result.Path = data[0].PATH;\n            }\n            return result;","ClassMembers":"private class PhoneLinePath\n    {\n        public string PATH { get; set; }\n    }","NamespaceMembers":"public class LinePath\n    {\n        public string Path { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetISPs","MethodType":0,"MessageFormat":0,"ActionPath":"/GetISP/Get","ReturnType":"List<ISPItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"ResponseLogic":"List<ISPItem> result = new List<ISPItem>();\n   var data = response.DeserializeResponse<List<ISP>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new ISPItem\n                    {\n                        Id = item.FIELD_VALUE,\n                        Name = item.FIELD_VALUE\n                    });\n                }\n            }\n\n            return result;","ClassMembers":"private class ISP\n    {\n        public string FIELD_VALUE { get; set; }\n    }","NamespaceMembers":"public class ISPItem\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetISPDSLAMPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/getispdslamport/Get","ReturnType":"List<PortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"switchId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"ISP","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","switchid":"switchId","ISP":"ISP"},"ResponseLogic":"List<PortItem> result = new List<PortItem>();\n      var data = response.DeserializeResponse<List<DSLAMPortItem>>();\n\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new PortItem\n                    {\n                        Id = item.DSLAM_PORT_ID,\n                        Name = item.DSLAM_PORT\n                    });\n                }\n            }\n\n            return result;","ClassMembers":"private class DSLAMPortItem\n    {\n        public string DSLAM_PORT_ID { get; set; }\n        public string DSLAM_PORT { get; set; }\n        public string DSLAM_CARD_ID { get; set; }\n        public string DSLAM_ID { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"IsManualSwitch","MethodType":0,"MessageFormat":0,"ActionPath":"/Techdetails/Get","ReturnType":"bool","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"phoneNumber"},"ResponseLogic":"bool ismanual = false;\n    var data = response.DeserializeResponse<List<TechnicalReservationDetail>>();\n            if (data != null && data.Count > 0)\n            {\n                TechnicalReservationDetail detail = data[0];\n   
	ismanual = detail.SWITCH_TYPE == \"Automatic\" ? false : true;\n\n            }\n\n            return ismanual;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"ReserveCPT","MethodType":0,"MessageFormat":0,"ActionPath":"/ReserveCPT/POST","ReturnType":"ReserveCPTRequestOutput","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"cptId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","PhoneNumber":"phoneNumber","CPTID":"cptId"},"ResponseLogic":"ReserveCPTRequestOutput result = new ReserveCPTRequestOutput();\n\n  var data = response.DeserializeResponse<ReserveCPTRequestOutput>();\n\n\n            if (data != null)\n            {\n                result = data;\n\n            }\n            return result;","NamespaceMembers":"public class ReserveCPTRequestOutput\n    {\n        public string Message { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"DeleteCPTReservation","MethodType":0,"MessageFormat":0,"ActionPath":"/DeleteCPTReservation/POST","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","PhoneNumber":"phoneNumber"},"ResponseLogic":"string result = \"\";\n         \nvar data = response.DeserializeResponse<string>();\n            if (data != null)\n            {\n                result = data;\n\n            }\n            return result.ToString();"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDeviceID","MethodType":0,"MessageFormat":0,"ActionPath":"/linkedobject/Get","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumberID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"phoneNumberID","type":"\"device_id\""},"ResponseLogic":"string result = \"\";\n           var data = response.DeserializeResponse<List<DeviceIDDetail>>();\n            if (data != null && data.Count > 0)\n            {\n                DeviceIDDetail detail = data[0];\n                result = detail.SEC;\n                \n            }\n            return result.ToString();","ClassMembers":"private class DeviceIDDetail\n    {\n        public string SEC { get; set; }\n        public string PHONE_NUMBER { get; set; }\n        public string DEV_ID { get; set; }\n        public string DEV_TYPE { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetTechnicalDetailsByPath","MethodType":0,"MessageFormat":0,"ActionPath":"/Technicallinedetailsbypathid/Get","ReturnType":"InventoryPhoneItem","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"pathID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","pathID":"pathID"},"ResponseLogic":"InventoryPhoneItem result = null;\nvar data = response.DeserializeResponse<List<TechnicalReservationDetail>>();\n\n            if (data != null && data.Count > 0)\n            {\n                TechnicalReservationDetail detail = data[0];\n                result = new InventoryPhoneItem\n                {\n                    Cabinet = detail.CABINET_NAME,\n                    Transmitter = detail.TRANSMITTER_NAME,\n                    TransmitterPort = detail.TRANSMITTER_PORT,\n                    DP = detail.DP_NAME,\n                    Switch = detail.SWITCH_NAME,\n                    SWITCH_TYPE = detail.SWITCH_TYPE,\n                    SwitchOMC = detail.SWITCH_OMC,\n                    MDFPort = detail.MDF_PORT,\n                    VerticalMDF = detail.MDF_VERT,\n                    Receiver = detail.RECEIVER_NAME,\n                    ReceiverPort = detail.RECEIVER_PORT,\n                    DPPortId = detail.DP_PORT_ID,\n                    DPId = detail.DP_ID,\n                    SwitchId = detail.SWITCH_ID,\n                    CabinetPrimaryPort = detail.PRIMARY_PORT,\n                    CabinetSecondaryPort = detail.SECONDARY_PORT,\n                    PATH_TYPE = detail.PATH_TYPE,\n                    PhoneType = detail.PATH_TYPE.ToLower().Contains(\"wll\") ? PhoneType.WLL : detail.PATH_TYPE == \"PSTN_LINK\" ? PhoneType.PSTN : PhoneType.ISDN\n                };\n\n            }\n\n            return result;"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDeviceIDs","MethodType":0,"MessageFormat":0,"ActionPath":"/Deviceidsfromphonenumber/get","ReturnType":"List<DeviceDetailItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumbers","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","deviceids":"phoneNumbers"},"ResponseLogic":"List<DeviceDetailItem> result = new List<DeviceDetailItem>();\n   var data = response.DeserializeResponse<List<DeviceDetailItem>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new DeviceDetailItem\n                    {\n                        DEV_ID = item.DEV_ID,\n                        SEC = item.SEC,\n                        DEV_TYPE = item.DEV_TYPE,\n                        PHONE_NUMBER = item.PHONE_NUMBER\n                    });\n                }\n            }\n\n            return result;","NamespaceMembers":"public class DeviceDetailItem\n    {\n        public string SEC { get; set; }\n        public string PHONE_NUMBER { get; set; }\n        public string DEV_ID { get; set; }\n        public string DEV_TYPE { get; set; }\n    }"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"CreateFullPath","MethodType":0,"MessageFormat":0,"ActionPath":"/createfullpath/get","ReturnType":"string","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"phoneNumber","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"pathID","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","pathid":"pathID","phonenumber":"phoneNumber"},"ResponseLogic":"string result = \"\";\n           result  = response.DeserializeResponse<string>();\n            return result.ToString();"},{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyMethod, Vanrise.Common.MainExtensions","MethodName":"GetDPPorts","MethodType":0,"MessageFormat":0,"ActionPath":"/FreeDPPorts/Get","ReturnType":"List<DPPortItem>","Headers":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib"},"Parameters":{"$type":"System.Collections.Generic.List`1[[Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions]], mscorlib","$values":[{"$type":"Vanrise.Common.MainExtensions.VRDynamicCode.HttpProxyParameter, Vanrise.Common.MainExtensions","ParameterName":"dpId","ParameterType":"string","IncludeInHeader":false,"IncludeInBody":false,"IncludeInURL":false}]},"URLParameters":{"$type":"System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.String, mscorlib]], mscorlib","id":"dpId"},"ResponseLogic":"List<DPPortItem> result = new List<DPPortItem>();\n            \nvar data = response.DeserializeResponse<List<DPPort>>();\n\n            if (data != null && data.Count > 0)\n            {\n                foreach (var item in data)\n                {\n                    result.Add(new DPPortItem\n                    {\n                        Id = item.DP_PORT_ID.ToString(),\n                        Name = item.DP_PORT_NAME\n                    });\n                }\n            }\n\n            return result;"}]},"NamespaceMembers":"public enum PhoneStatus { A, F, R }\n    public enum PhoneType { ISDN = 0, DID = 1, WLL = 2, PES = 3, Fiber = 4, PSTN=5 }\n\n\n    public class PhoneNumberItem\n    {\n        public string Id { get; set; }\n        public string Number { get; set; }\n        public bool IsGold { get; set; }\n        public bool IsISDN { get; set; }\n    }\n\n    public class DeviceItem\n    {\n        public string Id { get; set; }\n        public string DeviceId { get; set; }\n    }\n\npublic class DPPort\n    {\n        public decimal DP_PORT_ID { get; set; }\n        public string DP_PORT_NAME { get; set; }\n    }\npublic class DPPortItem\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n    }\n\npublic class PortItem\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n    }\n\npublic class Port\n    {\n        public decimal OBJECT_ID { get; set; }\n        public string PORT { get; set; }\n    }\n\n    public class NewPhoneItemDetail\n    {\n\n        public PhoneType PhoneType { get; set; }\n        public PhoneStatus PhoneStatus { get; set; }\n        public string VerticalMDF { get; set; }\n        public string MDFPort { get; set; }\n        public string Cabinet { get; set; }\n        public string CabinetPrimaryPort { get; set; }\n        public string CabinetSecondaryPort { get; set; }\n        public string DP { get; set; }\n        public List<string> DPPorts { get; set; }\n        public List<string> DPSecondaryPorts { get; set; }\n\n\n        public string DSlam { get; set; }\n        public string DSlamPort { get; set; }\n        public string DSlamOMC { get; set; }\n\n\n        public string Transmitter { get; set; }\n        public string TransmitterPort { get; set; }\n        public string Receiver { get; set; }\n        public string ReceiverPort { get; set; }\n\n\n        public string MSAN_EID { get; set; }\n        public string MSAN_TID { get; set; }\n        public string MSANType { get; set; }\n\n\n        public bool IsMultiplexed { get; set; }\n    }\n    public class MDFItemDetail\n    {\n        public string Id { get; set; }\n        public string Name { get; set; }\n        public string VerticalId { get; set; }\n        public string MdfVertical { get; set; }\n        public string PortId { get; set; }\n        public string Port { get; set; }\n\n    }\n\npublic class TechnicalReservationDetail\n    {\n        public string POHNE_NUMBER { get; set; }\n        public string PATH_TYPE { get; set; }\n        public string SWITCH_NAME { get; set; }\n        public string SWITCH_OMC { get; set; }\n        public string SWITCH_TYPE { get; set; }\n        public string DEV_ID { get; set; }\n        public string MDF_NAME { get; set; }\n        public string MDF_VERT { get; set; }\n        public string MDF_PORT { get; set; }\n        public string CABINET_NAME { get; set; }\n        public string PRIMARY_PORT { get; set; }\n        public string SECONDARY_PORT { get; set; }\n        public string DP_NAME { get; set; }\n        public string DP_PORT { get; set; }\n        public string DP_PORT_ID { get; set; }\n        public string DP_ID { get; set; }\n        public string TRANSMITTER_NAME { get; set; }\n        public string TRANSMITTER_MODULE { get; set; }\n        public string TRANSMITTER_PORT { get; set; }\n        public string RECEIVER_NAME { get; set; }\n        public string RECEIVER_PORT { get; set; }\n        public string EXIST_PSTN { get; set; }\n        public string EXIST_ISDN { get; set; }\n        public string EXIST_DID { get; set; }\n        public string SWITCH_ID { get; set; }\n    }"}}',1,'2018-12-31 10:02:18.240',1)
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	)c([ID],[VRNamespaceId],[Name],[Settings],[CreatedBy],[LastModifiedTime],[LastModifiedBy]))
	merge	[common].[VRNamespaceItem] as t
	using	cte_data as s
	on		1=1 and t.[ID] = s.[ID]
	when matched then
	update set
	[VRNamespaceId] = s.[VRNamespaceId],[Name] = s.[Name],[Settings] = s.[Settings],[CreatedBy] = s.[CreatedBy],[LastModifiedTime] = s.[LastModifiedTime],[LastModifiedBy] = s.[LastModifiedBy]
	when not matched by target then
	insert([ID],[VRNamespaceId],[Name],[Settings],[CreatedBy],[LastModifiedTime],[LastModifiedBy])
	values(s.[ID],s.[VRNamespaceId],s.[Name],s.[Settings],s.[CreatedBy],s.[LastModifiedTime],s.[LastModifiedBy]);

--[common].[Connection]-----------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
set nocount on;
;with cte_data([ID],[Name],[Settings])
as (select * from (values
--//////////////////////////////////////////////////////////////////////////////////////////////////
('12221745-B7EC-4862-AD1D-28E6A500C49D','Inventory XATKA','{"$type":"Vanrise.Common.Business.VRHttpConnection, Vanrise.Common.Business","ConfigId":"071d54d2-463b-4404-8219-45fcd539ff01","BaseURL":"http://192.168.110.195:8901"}')
--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
)c([ID],[Name],[Settings]))
merge	[common].[Connection] as t
using	cte_data as s
on		1=1 and t.[ID] = s.[ID]
when matched then
	update set
	[Name] = s.[Name],[Settings] = s.[Settings]
when not matched by target then
	insert([ID],[Name],[Settings])
	values(s.[ID],s.[Name],s.[Settings]);


