<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.WhS.SupplierPriceList.BP.ImportSupplierPriceList"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:TOne.WhS.SupplierPriceList.BP.SubProcess"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:twbe="clr-namespace:TOne.WhS.BusinessEntity.Entities;assembly=TOne.WhS.BusinessEntity.Entities"
 xmlns:twsba="clr-namespace:TOne.WhS.SupplierPriceList.BP.Arguments;assembly=TOne.WhS.SupplierPriceList.BP.Arguments"
 xmlns:twsba1="clr-namespace:TOne.WhS.SupplierPriceList.BP.Activities;assembly=TOne.WhS.SupplierPriceList.BP.Activities"
 xmlns:twses="clr-namespace:TOne.WhS.SupplierPriceList.Entities.SPL;assembly=TOne.WhS.SupplierPriceList.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbe="clr-namespace:Vanrise.BusinessProcess.Entities;assembly=Vanrise.BusinessProcess.Entities"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(twsba:SupplierPriceListProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.WhS.SupplierPriceList.BP.ImportSupplierPriceList_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TOne.WhS.SupplierPriceList.BP.Arguments</x:String>
      <x:String>TOne.WhS.SupplierPriceList.Entities.SPL</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.Queueing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>TOne.WhS.BusinessEntity.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP.Arguments</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Root" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="MinimumDate" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)" Name="ExistingZoneEntities" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)" Name="ExistingCodeEntities" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)" Name="ExistingRateEntities" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)" Name="ExistingZonesByZoneId" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ExistingCode)" Name="ExistingCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ExistingRate)" Name="ExistingRates" />
      <Variable x:TypeArguments="twses:ZonesByName" Name="NewAndExistingZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:NewCode)" Name="NewCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:NewZone)" Name="NewZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ChangedCode)" Name="ChangedCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ChangedZone)" Name="ChangedZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:NewRate)" Name="NewRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ChangedRate)" Name="ChangedRates" />
      <Variable x:TypeArguments="x:Int32" Name="PriceListId" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedCode)" Name="ImportedCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedRate)" Name="ImportedRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedZone)" Name="ImportedZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)" Name="ImportedCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)" Name="ImportedDataToValidate" />
      <Variable x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)" Name="ImportedDataValidationRules" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="CountriesProcessingStatus">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">new AsyncActivityStatus()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))" Name="NewZonesQueue">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))">new MemoryQueue&lt;IEnumerable&lt;TOne.WhS.SupplierPriceList.Entities.SPL.NewZone&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))" Name="NewCodesQueue">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))">new MemoryQueue&lt;IEnumerable&lt;TOne.WhS.SupplierPriceList.Entities.SPL.NewCode&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))" Name="NewRatesQueue">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))">new MemoryQueue&lt;IEnumerable&lt;TOne.WhS.SupplierPriceList.Entities.SPL.NewRate&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))" Name="ChangedZonesQueue">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))">new MemoryQueue&lt;IEnumerable&lt;TOne.WhS.SupplierPriceList.Entities.SPL.ChangedZone&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))" Name="ChangedCodesQueue">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))">new MemoryQueue&lt;IEnumerable&lt;TOne.WhS.SupplierPriceList.Entities.SPL.ChangedCode&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))" Name="ChangedRatesQueue">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))">new MemoryQueue&lt;IEnumerable&lt;TOne.WhS.SupplierPriceList.Entities.SPL.ChangedRate&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <twsba1:GetDataFromPriceList sap2010:WorkflowViewState.IdRef="GetDataFromPriceList_1">
      <twsba1:GetDataFromPriceList.CurrencyId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.CurrencyId</mca:CSharpValue>
        </InArgument>
      </twsba1:GetDataFromPriceList.CurrencyId>
      <twsba1:GetDataFromPriceList.EffectiveDate>
        <InArgument x:TypeArguments="s:Nullable(s:DateTime)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(s:DateTime)">Input.EffectiveDate</mca:CSharpValue>
        </InArgument>
      </twsba1:GetDataFromPriceList.EffectiveDate>
      <twsba1:GetDataFromPriceList.FileId>
        <InArgument x:TypeArguments="x:Int64">
          <mca:CSharpValue x:TypeArguments="x:Int64">Input.FileId</mca:CSharpValue>
        </InArgument>
      </twsba1:GetDataFromPriceList.FileId>
      <twsba1:GetDataFromPriceList.ImportedCodes>
        <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">ImportedCodes</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetDataFromPriceList.ImportedCodes>
      <twsba1:GetDataFromPriceList.ImportedRates>
        <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">ImportedRates</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetDataFromPriceList.ImportedRates>
      <twsba1:GetDataFromPriceList.MinimumDate>
        <OutArgument x:TypeArguments="s:DateTime">
          <mca:CSharpReference x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetDataFromPriceList.MinimumDate>
    </twsba1:GetDataFromPriceList>
    <twsba1:StructureDataByZones sap2010:WorkflowViewState.IdRef="StructureDataByZones_1">
      <twsba1:StructureDataByZones.ImportedCodes>
        <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">ImportedCodes</mca:CSharpValue>
        </InArgument>
      </twsba1:StructureDataByZones.ImportedCodes>
      <twsba1:StructureDataByZones.ImportedRates>
        <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">ImportedRates</mca:CSharpValue>
        </InArgument>
      </twsba1:StructureDataByZones.ImportedRates>
      <twsba1:StructureDataByZones.ImportedZones>
        <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">ImportedZones</mca:CSharpReference>
        </OutArgument>
      </twsba1:StructureDataByZones.ImportedZones>
    </twsba1:StructureDataByZones>
    <twsba1:GetImportedDataValidationRules sap2010:WorkflowViewState.IdRef="GetImportedDataValidationRules_1">
      <twsba1:GetImportedDataValidationRules.ImportedDataValidationRules>
        <OutArgument x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">ImportedDataValidationRules</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetImportedDataValidationRules.ImportedDataValidationRules>
    </twsba1:GetImportedDataValidationRules>
    <vbw:CombineLists x:TypeArguments="vbe:IRuleTarget" sap2010:WorkflowViewState.IdRef="CombineLists`1_1">
      <vbw:CombineLists.InputLists>
        <InArgument x:TypeArguments="scg:List(sc:IEnumerable)">
          <mca:CSharpValue x:TypeArguments="scg:List(sc:IEnumerable)">new List&lt;System.Collections.IEnumerable&gt;() { ImportedZones, ImportedCodes };</mca:CSharpValue>
        </InArgument>
      </vbw:CombineLists.InputLists>
      <vbw:CombineLists.OutputList>
        <OutArgument x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">ImportedDataToValidate</mca:CSharpReference>
        </OutArgument>
      </vbw:CombineLists.OutputList>
    </vbw:CombineLists>
    <vbw:Validate sap2010:WorkflowViewState.IdRef="Validate_1">
      <vbw:Validate.BusinessRules>
        <InArgument x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">ImportedDataValidationRules</mca:CSharpValue>
        </InArgument>
      </vbw:Validate.BusinessRules>
      <vbw:Validate.ImportedDataToValidate>
        <InArgument x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">ImportedDataToValidate</mca:CSharpValue>
        </InArgument>
      </vbw:Validate.ImportedDataToValidate>
    </vbw:Validate>
    <twsba1:StructureDataByCountries sap2010:WorkflowViewState.IdRef="StructureDataByCountries_3">
      <twsba1:StructureDataByCountries.ImportedCountries>
        <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">ImportedCountries</mca:CSharpReference>
        </OutArgument>
      </twsba1:StructureDataByCountries.ImportedCountries>
      <twsba1:StructureDataByCountries.ImportedZones>
        <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">ImportedZones</mca:CSharpValue>
        </InArgument>
      </twsba1:StructureDataByCountries.ImportedZones>
    </twsba1:StructureDataByCountries>
    <twsba1:ReserveIdForPriceList sap2010:WorkflowViewState.IdRef="ReserveIdForPriceList_3">
      <twsba1:ReserveIdForPriceList.PriceListId>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">PriceListId</mca:CSharpReference>
        </OutArgument>
      </twsba1:ReserveIdForPriceList.PriceListId>
    </twsba1:ReserveIdForPriceList>
    <Parallel DisplayName="GetExistingEntities" sap2010:WorkflowViewState.IdRef="Parallel_7">
      <twsba1:GetExistingZones Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetExistingZones_3">
        <twsba1:GetExistingZones.ExistingZoneEntities>
          <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">
            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">ExistingZoneEntities</mca:CSharpReference>
          </OutArgument>
        </twsba1:GetExistingZones.ExistingZoneEntities>
        <twsba1:GetExistingZones.MinimumDate>
          <InArgument x:TypeArguments="s:DateTime">
            <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
          </InArgument>
        </twsba1:GetExistingZones.MinimumDate>
        <twsba1:GetExistingZones.SupplierId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
          </InArgument>
        </twsba1:GetExistingZones.SupplierId>
      </twsba1:GetExistingZones>
      <twsba1:GetExistingCodes Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetExistingCodes_3">
        <twsba1:GetExistingCodes.ExistingCodeEntities>
          <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">
            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">ExistingCodeEntities</mca:CSharpReference>
          </OutArgument>
        </twsba1:GetExistingCodes.ExistingCodeEntities>
        <twsba1:GetExistingCodes.MinimumDate>
          <InArgument x:TypeArguments="s:DateTime">
            <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
          </InArgument>
        </twsba1:GetExistingCodes.MinimumDate>
        <twsba1:GetExistingCodes.SupplierId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
          </InArgument>
        </twsba1:GetExistingCodes.SupplierId>
      </twsba1:GetExistingCodes>
      <twsba1:GetExistingRates Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetExistingRates_3">
        <twsba1:GetExistingRates.ExistingRateEntities>
          <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">
            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">ExistingRateEntities</mca:CSharpReference>
          </OutArgument>
        </twsba1:GetExistingRates.ExistingRateEntities>
        <twsba1:GetExistingRates.MinimumDate>
          <InArgument x:TypeArguments="s:DateTime">
            <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
          </InArgument>
        </twsba1:GetExistingRates.MinimumDate>
        <twsba1:GetExistingRates.SupplierId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
          </InArgument>
        </twsba1:GetExistingRates.SupplierId>
      </twsba1:GetExistingRates>
    </Parallel>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_10">
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
        <ForEach x:TypeArguments="twses:ImportedCountry" DisplayName="ForEach&lt;ImportedCountry&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_4">
          <ForEach.Values>
            <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">ImportedCountries</mca:CSharpValue>
            </InArgument>
          </ForEach.Values>
          <ActivityAction x:TypeArguments="twses:ImportedCountry">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="twses:ImportedCountry" Name="country" />
            </ActivityAction.Argument>
            <Sequence DisplayName="ProcessData" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <twsba1:PrepareExistingZones sap2010:WorkflowViewState.IdRef="PrepareExistingZones_3">
                <twsba1:PrepareExistingZones.CountryId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">country.CountryId</mca:CSharpValue>
                  </InArgument>
                </twsba1:PrepareExistingZones.CountryId>
                <twsba1:PrepareExistingZones.ExistingZoneEntities>
                  <InArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">ExistingZoneEntities</mca:CSharpValue>
                  </InArgument>
                </twsba1:PrepareExistingZones.ExistingZoneEntities>
                <twsba1:PrepareExistingZones.ExistingZonesByZoneId>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                    <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpReference>
                  </OutArgument>
                </twsba1:PrepareExistingZones.ExistingZonesByZoneId>
              </twsba1:PrepareExistingZones>
              <Parallel DisplayName="PrepareExistingCodesAndRates" sap2010:WorkflowViewState.IdRef="Parallel_8">
                <twsba1:PrepareExistingCodes sap2010:WorkflowViewState.IdRef="PrepareExistingCodes_3">
                  <twsba1:PrepareExistingCodes.ExistingCodeEntities>
                    <InArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">ExistingCodeEntities</mca:CSharpValue>
                    </InArgument>
                  </twsba1:PrepareExistingCodes.ExistingCodeEntities>
                  <twsba1:PrepareExistingCodes.ExistingCodes>
                    <OutArgument x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">
                      <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">ExistingCodes</mca:CSharpReference>
                    </OutArgument>
                  </twsba1:PrepareExistingCodes.ExistingCodes>
                  <twsba1:PrepareExistingCodes.ExistingZonesByZoneId>
                    <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                      <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                    </InArgument>
                  </twsba1:PrepareExistingCodes.ExistingZonesByZoneId>
                </twsba1:PrepareExistingCodes>
                <twsba1:PrepareExistingRates sap2010:WorkflowViewState.IdRef="PrepareExistingRates_3">
                  <twsba1:PrepareExistingRates.ExistingRateEntities>
                    <InArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">ExistingRateEntities</mca:CSharpValue>
                    </InArgument>
                  </twsba1:PrepareExistingRates.ExistingRateEntities>
                  <twsba1:PrepareExistingRates.ExistingRates>
                    <OutArgument x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">
                      <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">ExistingRates</mca:CSharpReference>
                    </OutArgument>
                  </twsba1:PrepareExistingRates.ExistingRates>
                  <twsba1:PrepareExistingRates.ExistingZonesByZoneId>
                    <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                      <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                    </InArgument>
                  </twsba1:PrepareExistingRates.ExistingZonesByZoneId>
                </twsba1:PrepareExistingRates>
              </Parallel>
              <twsba1:ProcessCountryCodes Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ProcessCountryCodes_3">
                <twsba1:ProcessCountryCodes.ChangedCodes>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">ChangedCodes</mca:CSharpReference>
                  </OutArgument>
                </twsba1:ProcessCountryCodes.ChangedCodes>
                <twsba1:ProcessCountryCodes.ChangedZones>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">ChangedZones</mca:CSharpReference>
                  </OutArgument>
                </twsba1:ProcessCountryCodes.ChangedZones>
                <twsba1:ProcessCountryCodes.DeletedCodesDate>
                  <InArgument x:TypeArguments="s:DateTime">
                    <mca:CSharpValue x:TypeArguments="s:DateTime">Input.DeletedCodesDate</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryCodes.DeletedCodesDate>
                <twsba1:ProcessCountryCodes.ExistingCodes>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">ExistingCodes</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryCodes.ExistingCodes>
                <twsba1:ProcessCountryCodes.ExistingZonesByZoneId>
                  <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryCodes.ExistingZonesByZoneId>
                <twsba1:ProcessCountryCodes.ImportedCodes>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">country.ImportedCodes</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryCodes.ImportedCodes>
                <twsba1:ProcessCountryCodes.NewAndExistingZones>
                  <OutArgument x:TypeArguments="twses:ZonesByName">
                    <mca:CSharpReference x:TypeArguments="twses:ZonesByName">NewAndExistingZones</mca:CSharpReference>
                  </OutArgument>
                </twsba1:ProcessCountryCodes.NewAndExistingZones>
                <twsba1:ProcessCountryCodes.NewCodes>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:NewCode)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:NewCode)">NewCodes</mca:CSharpReference>
                  </OutArgument>
                </twsba1:ProcessCountryCodes.NewCodes>
                <twsba1:ProcessCountryCodes.NewZones>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:NewZone)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:NewZone)">NewZones</mca:CSharpReference>
                  </OutArgument>
                </twsba1:ProcessCountryCodes.NewZones>
              </twsba1:ProcessCountryCodes>
              <twsba1:ProcessCountryRates Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ProcessCountryRates_3">
                <twsba1:ProcessCountryRates.ChangedRates>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">ChangedRates</mca:CSharpReference>
                  </OutArgument>
                </twsba1:ProcessCountryRates.ChangedRates>
                <twsba1:ProcessCountryRates.ExistingRates>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">ExistingRates</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryRates.ExistingRates>
                <twsba1:ProcessCountryRates.ExistingZonesByZoneId>
                  <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryRates.ExistingZonesByZoneId>
                <twsba1:ProcessCountryRates.ImportedRates>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">country.ImportedRates</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryRates.ImportedRates>
                <twsba1:ProcessCountryRates.NewAndExistingZones>
                  <InArgument x:TypeArguments="twses:ZonesByName">
                    <mca:CSharpValue x:TypeArguments="twses:ZonesByName">NewAndExistingZones</mca:CSharpValue>
                  </InArgument>
                </twsba1:ProcessCountryRates.NewAndExistingZones>
                <twsba1:ProcessCountryRates.NewRates>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:NewRate)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:NewRate)">NewRates</mca:CSharpReference>
                  </OutArgument>
                </twsba1:ProcessCountryRates.NewRates>
              </twsba1:ProcessCountryRates>
              <twsba1:ReserveIdsForNewEntities Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ReserveIdsForNewEntities_3">
                <twsba1:ReserveIdsForNewEntities.NewCodes>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:NewCode)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewCode)">NewCodes</mca:CSharpValue>
                  </InArgument>
                </twsba1:ReserveIdsForNewEntities.NewCodes>
                <twsba1:ReserveIdsForNewEntities.NewRates>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:NewRate)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewRate)">NewRates</mca:CSharpValue>
                  </InArgument>
                </twsba1:ReserveIdsForNewEntities.NewRates>
                <twsba1:ReserveIdsForNewEntities.NewZones>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:NewZone)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewZone)">NewZones</mca:CSharpValue>
                  </InArgument>
                </twsba1:ReserveIdsForNewEntities.NewZones>
              </twsba1:ReserveIdsForNewEntities>
              <Parallel DisplayName="Parallel_PrepareQueuesForDBApplyProcess" sap2010:WorkflowViewState.IdRef="Parallel_11">
                <vbw:EnqueueItem x:TypeArguments="scg:IEnumerable(twses:NewZone)" sap2010:WorkflowViewState.IdRef="EnqueueItem`1_1">
                  <vbw:EnqueueItem.Item>
                    <InArgument x:TypeArguments="scg:IEnumerable(twses:NewZone)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewZone)">NewZones</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Item>
                  <vbw:EnqueueItem.Queue>
                    <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))">
                      <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))">NewZonesQueue</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Queue>
                </vbw:EnqueueItem>
                <vbw:EnqueueItem x:TypeArguments="scg:IEnumerable(twses:NewCode)" sap2010:WorkflowViewState.IdRef="EnqueueItem`1_2">
                  <vbw:EnqueueItem.Item>
                    <InArgument x:TypeArguments="scg:IEnumerable(twses:NewCode)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewCode)">NewCodes</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Item>
                  <vbw:EnqueueItem.Queue>
                    <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))">
                      <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))">NewCodesQueue</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Queue>
                </vbw:EnqueueItem>
                <vbw:EnqueueItem x:TypeArguments="scg:IEnumerable(twses:NewRate)" sap2010:WorkflowViewState.IdRef="EnqueueItem`1_3">
                  <vbw:EnqueueItem.Item>
                    <InArgument x:TypeArguments="scg:IEnumerable(twses:NewRate)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewRate)">NewRates</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Item>
                  <vbw:EnqueueItem.Queue>
                    <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))">
                      <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))">NewRatesQueue</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Queue>
                </vbw:EnqueueItem>
                <vbw:EnqueueItem x:TypeArguments="scg:IEnumerable(twses:ChangedZone)" sap2010:WorkflowViewState.IdRef="EnqueueItem`1_4">
                  <vbw:EnqueueItem.Item>
                    <InArgument x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">ChangedZones</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Item>
                  <vbw:EnqueueItem.Queue>
                    <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))">
                      <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))">ChangedZonesQueue</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Queue>
                </vbw:EnqueueItem>
                <vbw:EnqueueItem x:TypeArguments="scg:IEnumerable(twses:ChangedCode)" sap2010:WorkflowViewState.IdRef="EnqueueItem`1_5">
                  <vbw:EnqueueItem.Item>
                    <InArgument x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">ChangedCodes</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Item>
                  <vbw:EnqueueItem.Queue>
                    <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))">
                      <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))">ChangedCodesQueue</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Queue>
                </vbw:EnqueueItem>
                <vbw:EnqueueItem x:TypeArguments="scg:IEnumerable(twses:ChangedRate)" sap2010:WorkflowViewState.IdRef="EnqueueItem`1_6">
                  <vbw:EnqueueItem.Item>
                    <InArgument x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">ChangedRates</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Item>
                  <vbw:EnqueueItem.Queue>
                    <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))">
                      <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))">ChangedRatesQueue</mca:CSharpValue>
                    </InArgument>
                  </vbw:EnqueueItem.Queue>
                </vbw:EnqueueItem>
              </Parallel>
            </Sequence>
          </ActivityAction>
        </ForEach>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">
              <mca:CSharpReference x:TypeArguments="x:Boolean">CountriesProcessingStatus.IsComplete</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <local:ApplyEntitiesToDBProcess sap2010:WorkflowViewState.IdRef="ApplyEntitiesToDBProcess_1">
        <local:ApplyEntitiesToDBProcess.ChangedCodesQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))">ChangedCodesQueue</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.ChangedCodesQueue>
        <local:ApplyEntitiesToDBProcess.ChangedRatesQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))">ChangedRatesQueue</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.ChangedRatesQueue>
        <local:ApplyEntitiesToDBProcess.ChangedZonesQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))">ChangedZonesQueue</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.ChangedZonesQueue>
        <local:ApplyEntitiesToDBProcess.ImportSupplierPriceListMainProcessStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">CountriesProcessingStatus</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.ImportSupplierPriceListMainProcessStatus>
        <local:ApplyEntitiesToDBProcess.NewCodesQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))">NewCodesQueue</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.NewCodesQueue>
        <local:ApplyEntitiesToDBProcess.NewRatesQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))">NewRatesQueue</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.NewRatesQueue>
        <local:ApplyEntitiesToDBProcess.NewZonesQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))">NewZonesQueue</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.NewZonesQueue>
        <local:ApplyEntitiesToDBProcess.SupplierId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
          </InArgument>
        </local:ApplyEntitiesToDBProcess.SupplierId>
      </local:ApplyEntitiesToDBProcess>
    </Parallel>
    <twsba1:SyncImportedDataWithDB sap2010:WorkflowViewState.IdRef="SyncImportedDataWithDB_3">
      <twsba1:SyncImportedDataWithDB.CurrencyId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.CurrencyId</mca:CSharpValue>
        </InArgument>
      </twsba1:SyncImportedDataWithDB.CurrencyId>
      <twsba1:SyncImportedDataWithDB.FileId>
        <InArgument x:TypeArguments="x:Int64">
          <mca:CSharpValue x:TypeArguments="x:Int64">Input.FileId</mca:CSharpValue>
        </InArgument>
      </twsba1:SyncImportedDataWithDB.FileId>
      <twsba1:SyncImportedDataWithDB.PriceListId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
        </InArgument>
      </twsba1:SyncImportedDataWithDB.PriceListId>
      <twsba1:SyncImportedDataWithDB.SupplierId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
        </InArgument>
      </twsba1:SyncImportedDataWithDB.SupplierId>
    </twsba1:SyncImportedDataWithDB>
    <sads:DebugSymbol.Symbol>d1RDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuV2hTLlN1cHBsaWVyUHJpY2VMaXN0LkJQXEltcG9ydFN1cHBsaWVyUHJpY2VMaXN0LnhhbWx4QgPRBA4CAQFbC1twAwG2AWALYMgBAwGYAWULZcgBAgF6agtqyAECAVxvC2/QAQIBPnQLdNABAgEgeQt50AECAQJ9BZwBIwMBqROdAQWtASMDAc4SrgEFtAEtAwGvErUBBcABGAMB8hHBAQXMARQDAbURzQEF2AEnAwH4ENkBBd8BJAMB2RDgAQWUAhADAccOlQIFuQQQAwHNAroEBc8EJQMB1AGAAQuAAVgDAcAUmQELmQFeAwGiFIUBC4UBagMBhBSUAQuUAXkDAeYTigELigFUAwHIE48BC48BeQMBqhOqAQuqAXkDAYsTpQELpQFxAwHtEqABC6ABcQMBzxKxAQuxAYUBAwGwErgBC7gBqwEDAZESvQELvQF/AwHzEckBC8kBdwMB1BHEAQvEAX0DAbYR0AEL0AGAAQMBlxHVAQvVAXEDAfkQ3AEL3AFbAwHaEOEBB/EBIQMB/g/yAQeCAiEDAaMPgwIHkwIhAwHIDpYCB44EEgMBvwSPBAe4BCgDAc4CxwQLxwRTAwGvAswEC8wEXwMBkQK9BAu9BFgDAfMBwgQLwgRUAwHVAeQBDeQBgQEDAbsQ7gEN7gFhAwGdEOkBDekBWAMB/w/1AQ31AYEBAwHgD/8BDf8BYQMBwg/6AQ36AVgDAaQPkAINkAJhAwGFD4YCDYYCgQEDAecOiwINiwJYAwHJDpcCCYMEEwMB4ASEBAmNBBIDAcAEoQQNoQRyAwGhBLUEDbUEYQMBgwSwBA2wBHwDAeUDlwQNlwSEAQMBxwOSBA2SBIQBAwGpA5wEDZwEhAEDAYsDqwQNqwR8AwHtAqYEDaYEfAMBzwKaAg+aAnwDAakOoQINgQQYAwHhBIsENYsEOQMB3wSHBA+HBHoDAcEEogIPsgItAwHLDbMCD9YCGgMBjgzXAg+FAywDAfYJhgMPpQMsAwG7CKYDD7YDMQMB3Qe3Aw+ABBoDAeIEqgIVqgKBAQMBig6vAhWvApMBAwHrDaUCFaUCYwMBzA20AhHEAi8DAe0MxQIR1QIvAwGPDOkCFekCewMB7wv9AhX9AnkDAdAL5AIV5AJrAwGxC9oCFdoCgQEDAZILggMVggN5AwHzCu4CFe4CiwEDAdQK+AIV+AJ3AwG1Ct8CFd8CgQEDAZYK8wIV8wKDAQMB9wmJAxWJA4EBAwHXCaIDFaIDeQMBuAmOAxWOA3sDAZkJmAMVmAODAQMB+giTAxWTA4sBAwHbCJ0DFZ0DbwMBvAipAxWpA3EDAZwIrgMVrgNxAwH9B7MDFbMDcQMB3ge4AxHDAyMDAZ4HxAMRzwMjAwHfBtADEdsDIwMBoAbcAxHnAyMDAeEF6AMR8wMjAwGiBfQDEf8DIwMB4wS8Ahe8AoUBAwGsDbcCF7cCgwEDAY0NwQIXwQKNAQMB7gzIAhfIAoMBAwHODM0CF80ChQEDAa8M0gIX0gKNAQMBkAzAAxfAA4YBAwG+B7sDF7sDcwMBnwfMAxfMA4YBAwH/BscDF8cDcwMB4AbYAxfYA4YBAwHABtMDF9MDcwMBoQbkAxfkA44BAwGBBt8DF98DewMB4gXwAxfwA44BAwHCBesDF+sDewMBowX8Axf8A44BAwGDBfcDF/cDewMB5AQ=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetDataFromPriceList_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="StructureDataByZones_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="GetImportedDataValidationRules_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="CombineLists`1_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="Validate_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="StructureDataByCountries_3" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="ReserveIdForPriceList_3" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="GetExistingZones_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="GetExistingCodes_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="GetExistingRates_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_7" sap:VirtualizedContainerService.HintSize="794,86" />
      <sap2010:ViewStateData Id="PrepareExistingZones_3" sap:VirtualizedContainerService.HintSize="1514,22" />
      <sap2010:ViewStateData Id="PrepareExistingCodes_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareExistingRates_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_8" sap:VirtualizedContainerService.HintSize="1514,86" />
      <sap2010:ViewStateData Id="ProcessCountryCodes_3" sap:VirtualizedContainerService.HintSize="1514,22" />
      <sap2010:ViewStateData Id="ProcessCountryRates_3" sap:VirtualizedContainerService.HintSize="1514,22" />
      <sap2010:ViewStateData Id="ReserveIdsForNewEntities_3" sap:VirtualizedContainerService.HintSize="1514,22" />
      <sap2010:ViewStateData Id="EnqueueItem`1_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="EnqueueItem`1_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="EnqueueItem`1_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="EnqueueItem`1_4" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="EnqueueItem`1_5" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="EnqueueItem`1_6" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_11" sap:VirtualizedContainerService.HintSize="1514,86" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="287,210">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="287,62" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="309,436">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ApplyEntitiesToDBProcess_1" sap:VirtualizedContainerService.HintSize="200,436" />
      <sap2010:ViewStateData Id="Parallel_10" sap:VirtualizedContainerService.HintSize="794,482" />
      <sap2010:ViewStateData Id="SyncImportedDataWithDB_3" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="816,1228">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.WhS.SupplierPriceList.BP.ImportSupplierPriceList_1" sap:VirtualizedContainerService.HintSize="856,1308" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>