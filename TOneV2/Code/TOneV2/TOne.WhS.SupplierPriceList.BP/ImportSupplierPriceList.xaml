<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.WhS.SupplierPriceList.BP.ImportSupplierPriceList"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:twbe="clr-namespace:TOne.WhS.BusinessEntity.Entities;assembly=TOne.WhS.BusinessEntity.Entities"
 xmlns:twsba="clr-namespace:TOne.WhS.SupplierPriceList.BP.Arguments;assembly=TOne.WhS.SupplierPriceList.BP.Arguments"
 xmlns:twsba1="clr-namespace:TOne.WhS.SupplierPriceList.BP.Activities;assembly=TOne.WhS.SupplierPriceList.BP.Activities"
 xmlns:twses="clr-namespace:TOne.WhS.SupplierPriceList.Entities.SPL;assembly=TOne.WhS.SupplierPriceList.Entities"
 xmlns:vbe="clr-namespace:Vanrise.BusinessProcess.Entities;assembly=Vanrise.BusinessProcess.Entities"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(twsba:SupplierPriceListProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.WhS.SupplierPriceList.BP.ImportSupplierPriceList_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TOne.WhS.SupplierPriceList.BP.Arguments</x:String>
      <x:String>TOne.WhS.SupplierPriceList.Entities.SPL</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.BusinessEntity.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP.Arguments</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Root" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="MinimumDate" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)" Name="ExistingZoneEntities" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)" Name="ExistingCodeEntities" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)" Name="ExistingRateEntities" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)" Name="ExistingZonesByZoneId" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ExistingCode)" Name="ExistingCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ExistingRate)" Name="ExistingRates" />
      <Variable x:TypeArguments="twses:ZonesByName" Name="NewAndExistingZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:NewCode)" Name="NewCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:NewZone)" Name="NewZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ChangedCode)" Name="ChangedCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ChangedZone)" Name="ChangedZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:NewRate)" Name="NewRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ChangedRate)" Name="ChangedRates" />
      <Variable x:TypeArguments="x:Int32" Name="PriceListId" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedCode)" Name="ImportedCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedRate)" Name="ImportedRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedZone)" Name="ImportedZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)" Name="ImportedCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)" Name="ImportedDataToValidate" />
      <Variable x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)" Name="ImportedDataValidationRules" />
    </Sequence.Variables>
    <twsba1:GetDataFromPriceList sap2010:WorkflowViewState.IdRef="GetDataFromPriceList_1">
      <twsba1:GetDataFromPriceList.CurrencyId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.CurrencyId</mca:CSharpValue>
        </InArgument>
      </twsba1:GetDataFromPriceList.CurrencyId>
      <twsba1:GetDataFromPriceList.EffectiveDate>
        <InArgument x:TypeArguments="s:Nullable(s:DateTime)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(s:DateTime)">Input.EffectiveDate</mca:CSharpValue>
        </InArgument>
      </twsba1:GetDataFromPriceList.EffectiveDate>
      <twsba1:GetDataFromPriceList.FileId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.FileId</mca:CSharpValue>
        </InArgument>
      </twsba1:GetDataFromPriceList.FileId>
      <twsba1:GetDataFromPriceList.ImportedCodes>
        <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">ImportedCodes</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetDataFromPriceList.ImportedCodes>
      <twsba1:GetDataFromPriceList.ImportedRates>
        <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">ImportedRates</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetDataFromPriceList.ImportedRates>
      <twsba1:GetDataFromPriceList.MinimumDate>
        <OutArgument x:TypeArguments="s:DateTime">
          <mca:CSharpReference x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetDataFromPriceList.MinimumDate>
    </twsba1:GetDataFromPriceList>
    <twsba1:StructureDataByZones sap2010:WorkflowViewState.IdRef="StructureDataByZones_1">
      <twsba1:StructureDataByZones.ImportedCodes>
        <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">ImportedCodes</mca:CSharpValue>
        </InArgument>
      </twsba1:StructureDataByZones.ImportedCodes>
      <twsba1:StructureDataByZones.ImportedRates>
        <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">ImportedRates</mca:CSharpValue>
        </InArgument>
      </twsba1:StructureDataByZones.ImportedRates>
      <twsba1:StructureDataByZones.ImportedZones>
        <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">ImportedZones</mca:CSharpReference>
        </OutArgument>
      </twsba1:StructureDataByZones.ImportedZones>
    </twsba1:StructureDataByZones>
    <twsba1:GetImportedDataValidationRules sap2010:WorkflowViewState.IdRef="GetImportedDataValidationRules_1">
      <twsba1:GetImportedDataValidationRules.ImportedDataValidationRules>
        <OutArgument x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">ImportedDataValidationRules</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetImportedDataValidationRules.ImportedDataValidationRules>
    </twsba1:GetImportedDataValidationRules>
    <vbw:CombineLists x:TypeArguments="vbe:IRuleTarget" sap2010:WorkflowViewState.IdRef="CombineLists`1_1">
      <vbw:CombineLists.InputLists>
        <InArgument x:TypeArguments="scg:List(sc:IEnumerable)">
          <mca:CSharpValue x:TypeArguments="scg:List(sc:IEnumerable)">new List&lt;System.Collections.IEnumerable&gt;() { ImportedZones, ImportedCodes };</mca:CSharpValue>
        </InArgument>
      </vbw:CombineLists.InputLists>
      <vbw:CombineLists.OutputList>
        <OutArgument x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">ImportedDataToValidate</mca:CSharpReference>
        </OutArgument>
      </vbw:CombineLists.OutputList>
    </vbw:CombineLists>
    <vbw:Validate>
      <vbw:Validate.BusinessRules>
        <InArgument x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vbe:BusinessRule)">ImportedDataValidationRules</mca:CSharpValue>
        </InArgument>
      </vbw:Validate.BusinessRules>
      <vbw:Validate.ImportedDataToValidate>
        <InArgument x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)">ImportedDataToValidate</mca:CSharpValue>
        </InArgument>
      </vbw:Validate.ImportedDataToValidate>
      <sap2010:WorkflowViewState.IdRef>Validate_1</sap2010:WorkflowViewState.IdRef>
    </vbw:Validate>
    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
      <twsba1:StructureDataByCountries sap2010:WorkflowViewState.IdRef="StructureDataByCountries_2">
        <twsba1:StructureDataByCountries.ImportedCountries>
          <OutArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">
            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">ImportedCountries</mca:CSharpReference>
          </OutArgument>
        </twsba1:StructureDataByCountries.ImportedCountries>
        <twsba1:StructureDataByCountries.ImportedZones>
          <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedZone)">ImportedZones</mca:CSharpValue>
          </InArgument>
        </twsba1:StructureDataByCountries.ImportedZones>
      </twsba1:StructureDataByCountries>
      <twsba1:ReserveIdForPriceList sap2010:WorkflowViewState.IdRef="ReserveIdForPriceList_2">
        <twsba1:ReserveIdForPriceList.PriceListId>
          <OutArgument x:TypeArguments="x:Int32">
            <mca:CSharpReference x:TypeArguments="x:Int32">PriceListId</mca:CSharpReference>
          </OutArgument>
        </twsba1:ReserveIdForPriceList.PriceListId>
      </twsba1:ReserveIdForPriceList>
      <ForEach x:TypeArguments="twses:ImportedCountry" DisplayName="ForEach&lt;ImportedCountry&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
        <ForEach.Values>
          <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedCountry)">ImportedCountries</mca:CSharpValue>
          </InArgument>
        </ForEach.Values>
        <ActivityAction x:TypeArguments="twses:ImportedCountry">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="twses:ImportedCountry" Name="country" />
          </ActivityAction.Argument>
          <Sequence DisplayName="ProcessData" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Parallel DisplayName="GetExistingEntities" sap2010:WorkflowViewState.IdRef="Parallel_4">
              <twsba1:GetExistingZones sap2010:WorkflowViewState.IdRef="GetExistingZones_2">
                <twsba1:GetExistingZones.ExistingZoneEntities>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">ExistingZoneEntities</mca:CSharpReference>
                  </OutArgument>
                </twsba1:GetExistingZones.ExistingZoneEntities>
                <twsba1:GetExistingZones.MinimumDate>
                  <InArgument x:TypeArguments="s:DateTime">
                    <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
                  </InArgument>
                </twsba1:GetExistingZones.MinimumDate>
                <twsba1:GetExistingZones.SupplierId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
                  </InArgument>
                </twsba1:GetExistingZones.SupplierId>
              </twsba1:GetExistingZones>
              <twsba1:GetExistingCodes sap2010:WorkflowViewState.IdRef="GetExistingCodes_2">
                <twsba1:GetExistingCodes.ExistingCodeEntities>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">ExistingCodeEntities</mca:CSharpReference>
                  </OutArgument>
                </twsba1:GetExistingCodes.ExistingCodeEntities>
                <twsba1:GetExistingCodes.MinimumDate>
                  <InArgument x:TypeArguments="s:DateTime">
                    <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
                  </InArgument>
                </twsba1:GetExistingCodes.MinimumDate>
                <twsba1:GetExistingCodes.SupplierId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
                  </InArgument>
                </twsba1:GetExistingCodes.SupplierId>
              </twsba1:GetExistingCodes>
              <twsba1:GetExistingRates sap2010:WorkflowViewState.IdRef="GetExistingRates_2">
                <twsba1:GetExistingRates.ExistingRateEntities>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">ExistingRateEntities</mca:CSharpReference>
                  </OutArgument>
                </twsba1:GetExistingRates.ExistingRateEntities>
                <twsba1:GetExistingRates.MinimumDate>
                  <InArgument x:TypeArguments="s:DateTime">
                    <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
                  </InArgument>
                </twsba1:GetExistingRates.MinimumDate>
                <twsba1:GetExistingRates.SupplierId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
                  </InArgument>
                </twsba1:GetExistingRates.SupplierId>
              </twsba1:GetExistingRates>
            </Parallel>
            <twsba1:PrepareExistingZones sap2010:WorkflowViewState.IdRef="PrepareExistingZones_2">
              <twsba1:PrepareExistingZones.ExistingZoneEntities>
                <InArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SupplierZone)">ExistingZoneEntities</mca:CSharpValue>
                </InArgument>
              </twsba1:PrepareExistingZones.ExistingZoneEntities>
              <twsba1:PrepareExistingZones.ExistingZonesByZoneId>
                <OutArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                  <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpReference>
                </OutArgument>
              </twsba1:PrepareExistingZones.ExistingZonesByZoneId>
            </twsba1:PrepareExistingZones>
            <Parallel DisplayName="PrepareExistingCodesAndRates" sap2010:WorkflowViewState.IdRef="Parallel_5">
              <twsba1:PrepareExistingCodes sap2010:WorkflowViewState.IdRef="PrepareExistingCodes_2">
                <twsba1:PrepareExistingCodes.ExistingCodeEntities>
                  <InArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SupplierCode)">ExistingCodeEntities</mca:CSharpValue>
                  </InArgument>
                </twsba1:PrepareExistingCodes.ExistingCodeEntities>
                <twsba1:PrepareExistingCodes.ExistingCodes>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">ExistingCodes</mca:CSharpReference>
                  </OutArgument>
                </twsba1:PrepareExistingCodes.ExistingCodes>
                <twsba1:PrepareExistingCodes.ExistingZonesByZoneId>
                  <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                  </InArgument>
                </twsba1:PrepareExistingCodes.ExistingZonesByZoneId>
              </twsba1:PrepareExistingCodes>
              <twsba1:PrepareExistingRates sap2010:WorkflowViewState.IdRef="PrepareExistingRates_2">
                <twsba1:PrepareExistingRates.ExistingRateEntities>
                  <InArgument x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SupplierRate)">ExistingRateEntities</mca:CSharpValue>
                  </InArgument>
                </twsba1:PrepareExistingRates.ExistingRateEntities>
                <twsba1:PrepareExistingRates.ExistingRates>
                  <OutArgument x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">
                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">ExistingRates</mca:CSharpReference>
                  </OutArgument>
                </twsba1:PrepareExistingRates.ExistingRates>
                <twsba1:PrepareExistingRates.ExistingZonesByZoneId>
                  <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                  </InArgument>
                </twsba1:PrepareExistingRates.ExistingZonesByZoneId>
              </twsba1:PrepareExistingRates>
            </Parallel>
            <twsba1:ProcessCountryCodes sap2010:WorkflowViewState.IdRef="ProcessCountryCodes_2">
              <twsba1:ProcessCountryCodes.ChangedCodes>
                <OutArgument x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">ChangedCodes</mca:CSharpReference>
                </OutArgument>
              </twsba1:ProcessCountryCodes.ChangedCodes>
              <twsba1:ProcessCountryCodes.ChangedZones>
                <OutArgument x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">ChangedZones</mca:CSharpReference>
                </OutArgument>
              </twsba1:ProcessCountryCodes.ChangedZones>
              <twsba1:ProcessCountryCodes.DeletedCodesDate>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">Input.DeletedCodesDate</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryCodes.DeletedCodesDate>
              <twsba1:ProcessCountryCodes.ExistingCodes>
                <InArgument x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ExistingCode)">ExistingCodes</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryCodes.ExistingCodes>
              <twsba1:ProcessCountryCodes.ExistingZonesByZoneId>
                <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                  <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryCodes.ExistingZonesByZoneId>
              <twsba1:ProcessCountryCodes.ImportedCodes>
                <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">country.ImportedCodes</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryCodes.ImportedCodes>
              <twsba1:ProcessCountryCodes.NewAndExistingZones>
                <OutArgument x:TypeArguments="twses:ZonesByName">
                  <mca:CSharpReference x:TypeArguments="twses:ZonesByName">NewAndExistingZones</mca:CSharpReference>
                </OutArgument>
              </twsba1:ProcessCountryCodes.NewAndExistingZones>
              <twsba1:ProcessCountryCodes.NewCodes>
                <OutArgument x:TypeArguments="scg:IEnumerable(twses:NewCode)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:NewCode)">NewCodes</mca:CSharpReference>
                </OutArgument>
              </twsba1:ProcessCountryCodes.NewCodes>
              <twsba1:ProcessCountryCodes.NewZones>
                <OutArgument x:TypeArguments="scg:IEnumerable(twses:NewZone)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:NewZone)">NewZones</mca:CSharpReference>
                </OutArgument>
              </twsba1:ProcessCountryCodes.NewZones>
            </twsba1:ProcessCountryCodes>
            <twsba1:ProcessCountryRates sap2010:WorkflowViewState.IdRef="ProcessCountryRates_2">
              <twsba1:ProcessCountryRates.ChangedRates>
                <OutArgument x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">ChangedRates</mca:CSharpReference>
                </OutArgument>
              </twsba1:ProcessCountryRates.ChangedRates>
              <twsba1:ProcessCountryRates.ExistingRates>
                <InArgument x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ExistingRate)">ExistingRates</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryRates.ExistingRates>
              <twsba1:ProcessCountryRates.ExistingZonesByZoneId>
                <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                  <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryRates.ExistingZonesByZoneId>
              <twsba1:ProcessCountryRates.ImportedRates>
                <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">country.ImportedRates</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryRates.ImportedRates>
              <twsba1:ProcessCountryRates.NewAndExistingZones>
                <InArgument x:TypeArguments="twses:ZonesByName">
                  <mca:CSharpValue x:TypeArguments="twses:ZonesByName">NewAndExistingZones</mca:CSharpValue>
                </InArgument>
              </twsba1:ProcessCountryRates.NewAndExistingZones>
              <twsba1:ProcessCountryRates.NewRates>
                <OutArgument x:TypeArguments="scg:IEnumerable(twses:NewRate)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twses:NewRate)">NewRates</mca:CSharpReference>
                </OutArgument>
              </twsba1:ProcessCountryRates.NewRates>
            </twsba1:ProcessCountryRates>
            <twsba1:ReserveIdsForNewEntities sap2010:WorkflowViewState.IdRef="ReserveIdsForNewEntities_2">
              <twsba1:ReserveIdsForNewEntities.NewCodes>
                <InArgument x:TypeArguments="scg:IEnumerable(twses:NewCode)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewCode)">NewCodes</mca:CSharpValue>
                </InArgument>
              </twsba1:ReserveIdsForNewEntities.NewCodes>
              <twsba1:ReserveIdsForNewEntities.NewRates>
                <InArgument x:TypeArguments="scg:IEnumerable(twses:NewRate)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewRate)">NewRates</mca:CSharpValue>
                </InArgument>
              </twsba1:ReserveIdsForNewEntities.NewRates>
              <twsba1:ReserveIdsForNewEntities.NewZones>
                <InArgument x:TypeArguments="scg:IEnumerable(twses:NewZone)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewZone)">NewZones</mca:CSharpValue>
                </InArgument>
              </twsba1:ReserveIdsForNewEntities.NewZones>
            </twsba1:ReserveIdsForNewEntities>
            <Parallel DisplayName="ApplyNewAndChangedDataToTempTables" sap2010:WorkflowViewState.IdRef="Parallel_6">
              <twsba1:ApplyNewZonesToDB sap2010:WorkflowViewState.IdRef="ApplyNewZonesToDB_2">
                <twsba1:ApplyNewZonesToDB.NewZones>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:NewZone)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewZone)">NewZones</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyNewZonesToDB.NewZones>
                <twsba1:ApplyNewZonesToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyNewZonesToDB.PriceListId>
                <twsba1:ApplyNewZonesToDB.SupplierId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyNewZonesToDB.SupplierId>
              </twsba1:ApplyNewZonesToDB>
              <twsba1:ApplyChangedZonesToDB sap2010:WorkflowViewState.IdRef="ApplyChangedZonesToDB_2">
                <twsba1:ApplyChangedZonesToDB.ChangedZones>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ChangedZone)">ChangedZones</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyChangedZonesToDB.ChangedZones>
                <twsba1:ApplyChangedZonesToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyChangedZonesToDB.PriceListId>
              </twsba1:ApplyChangedZonesToDB>
              <twsba1:ApplyNewCodesToDB sap2010:WorkflowViewState.IdRef="ApplyNewCodesToDB_2">
                <twsba1:ApplyNewCodesToDB.NewCodes>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:NewCode)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewCode)">NewCodes</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyNewCodesToDB.NewCodes>
                <twsba1:ApplyNewCodesToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyNewCodesToDB.PriceListId>
              </twsba1:ApplyNewCodesToDB>
              <twsba1:ApplyChangedCodesToDB sap2010:WorkflowViewState.IdRef="ApplyChangedCodesToDB_2">
                <twsba1:ApplyChangedCodesToDB.ChangedCodes>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ChangedCode)">ChangedCodes</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyChangedCodesToDB.ChangedCodes>
                <twsba1:ApplyChangedCodesToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyChangedCodesToDB.PriceListId>
              </twsba1:ApplyChangedCodesToDB>
              <twsba1:ApplyNewRatesToDB sap2010:WorkflowViewState.IdRef="ApplyNewRatesToDB_2">
                <twsba1:ApplyNewRatesToDB.NewRates>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:NewRate)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewRate)">NewRates</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyNewRatesToDB.NewRates>
                <twsba1:ApplyNewRatesToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyNewRatesToDB.PriceListId>
              </twsba1:ApplyNewRatesToDB>
              <twsba1:ApplyChangedRatesToDB sap2010:WorkflowViewState.IdRef="ApplyChangedRatesToDB_2">
                <twsba1:ApplyChangedRatesToDB.ChangedRates>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ChangedRate)">ChangedRates</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyChangedRatesToDB.ChangedRates>
                <twsba1:ApplyChangedRatesToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyChangedRatesToDB.PriceListId>
              </twsba1:ApplyChangedRatesToDB>
              <twsba1:ApplyZonePreviewDataToDB sap2010:WorkflowViewState.IdRef="ApplyZonePreviewDataToDB_2">
                <twsba1:ApplyZonePreviewDataToDB.ExistingZonesByZoneId>
                  <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twses:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyZonePreviewDataToDB.ExistingZonesByZoneId>
                <twsba1:ApplyZonePreviewDataToDB.NewZones>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:NewZone)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:NewZone)">NewZones</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyZonePreviewDataToDB.NewZones>
                <twsba1:ApplyZonePreviewDataToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyZonePreviewDataToDB.PriceListId>
              </twsba1:ApplyZonePreviewDataToDB>
              <twsba1:ApplyCodePreviewDataToDB sap2010:WorkflowViewState.IdRef="ApplyCodePreviewDataToDB_2">
                <twsba1:ApplyCodePreviewDataToDB.ImportedCodes>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedCode)">ImportedCodes</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyCodePreviewDataToDB.ImportedCodes>
                <twsba1:ApplyCodePreviewDataToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyCodePreviewDataToDB.PriceListId>
              </twsba1:ApplyCodePreviewDataToDB>
              <twsba1:ApplyRatePreviewDataToDB sap2010:WorkflowViewState.IdRef="ApplyRatePreviewDataToDB_2">
                <twsba1:ApplyRatePreviewDataToDB.ImportedRates>
                  <InArgument x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twses:ImportedRate)">ImportedRates</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyRatePreviewDataToDB.ImportedRates>
                <twsba1:ApplyRatePreviewDataToDB.PriceListId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
                  </InArgument>
                </twsba1:ApplyRatePreviewDataToDB.PriceListId>
              </twsba1:ApplyRatePreviewDataToDB>
            </Parallel>
          </Sequence>
        </ActivityAction>
      </ForEach>
      <twsba1:SyncImportedDataWithDB sap2010:WorkflowViewState.IdRef="SyncImportedDataWithDB_2">
        <twsba1:SyncImportedDataWithDB.CurrencyId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.CurrencyId</mca:CSharpValue>
          </InArgument>
        </twsba1:SyncImportedDataWithDB.CurrencyId>
        <twsba1:SyncImportedDataWithDB.PriceListId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">PriceListId</mca:CSharpValue>
          </InArgument>
        </twsba1:SyncImportedDataWithDB.PriceListId>
        <twsba1:SyncImportedDataWithDB.SupplierId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.SupplierAccountId</mca:CSharpValue>
          </InArgument>
        </twsba1:SyncImportedDataWithDB.SupplierId>
      </twsba1:SyncImportedDataWithDB>
    </Sequence>
    <sads:DebugSymbol.Symbol>d1RDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuV2hTLlN1cHBsaWVyUHJpY2VMaXN0LkJQXEltcG9ydFN1cHBsaWVyUHJpY2VMaXN0LnhhbWxtPAOXBA4CAQFUBXMjAwGiDXQFhAEjAwHcDIUBBYsBLQMBxAyMAQWXARgDAZUMmAEFpAEUAwHmC6UBBZUEEAIBAlcLV1gDAZYOcAtwXgMB/w1cC1xqAwHoDWsLa3kDAdENYQthVAMBug1mC2Z5AwGjDYEBC4EBeQMBiw18C3xxAwH0DHcLd3EDAd0MiAELiAGFAQMBxQyPAQuPAasBAwGtDJQBC5QBfwMBlgygAQugAXcDAf4LmwELmwF9AwHnC6YBB7EBKQMBtwuyAQe4ASYDAZ8LuQEHgwQRAgFJhAQHlAQnAgEDqQENqQGCAQMBzwuuAQ2uAXMDAbgLtQENtQFdAwGgC7wBDbwBegMBiAvDAQuBBBYCAUqMBA2MBFUCATKRBA2RBGECARuHBA2HBFoCAQTEAQ34ARgDAawJ+QENhAIrAwH7CIUCDagCGAMB6AepAg3XAioDAY8G2AIN9wIqAwH+BPgCDYgDLwMBtQSJAw2ABBgCAUvFAQ/VASkDAb8K1gEP5gEpAwH2CecBD/cBKQMBrQn8ARP8AX8DAZQJgQITgQKRAQMB/AiGAg+WAi0DAbIIlwIPpwItAwHpB7sCE7sCeQMB0AfPAhPPAncDAbgHtgITtgJpAwGgB6wCE6wCfwMBiAfUAhPUAncDAfAGwAITwAKJAQMB2AbKAhPKAnUDAcAGsQITsQJ/AwGoBsUCE8UCgQEDAZAG2wIT2wJ/AwH3BfQCE/QCdwMB3wXgAhPgAnkDAccF6gIT6gKBAQMBrwXlAhPlAokBAwGXBe8CE+8CbQMB/wT7AhP7Am8DAeYEgAMTgANvAwHOBIUDE4UDbwMBtgSKAw+aAyoDAewDmwMPpgMuAwG7A6cDD7IDKgMBigOzAw++Ay4DAdkCvwMPygMqAwGoAssDD9YDLgMB9wHXAw/nAzEDAa4B6AMP8wMxAgF99AMP/wMxAgFMyAEVyAGJAQMB8ArSARXSAWkDAdgKzQEVzQFgAwHACtkBFdkBiQEDAacK4wEV4wFpAwGPCt4BFd4BYAMB9wn0ARX0AWkDAd4J6gEV6gGJAQMBxgnvARXvAWADAa4JjgIVjgKDAQMB4wiJAhWJAoEBAwHLCJMCFZMCiwEDAbMImgIVmgKBAQMBmgifAhWfAoMBAwGCCKQCFaQCiwEDAeoHkgMVkgNdAwGdBJcDFZcDaQMBhQSNAxWNA3EDAe0DowMVowNdAwHUA54DFZ4DeQMBvAOvAxWvA10DAaMDqgMVqgNxAwGLA7sDFbsDXQMB8gK2AxW2A3kDAdoCxwMVxwNdAwHBAsIDFcIDcQMBqQLTAxXTA10DAZACzgMVzgN5AwH4AeQDFeQDXQMB3wHfAxXfA3EDAccB2gMV2gOLAQMBrwHwAxXwA10DAZYB6wMV6wN7AgF+/AMV/ANdAgFl9wMV9wN7AgFN</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetDataFromPriceList_1" sap:VirtualizedContainerService.HintSize="2308,22" />
      <sap2010:ViewStateData Id="StructureDataByZones_1" sap:VirtualizedContainerService.HintSize="2308,22" />
      <sap2010:ViewStateData Id="GetImportedDataValidationRules_1" sap:VirtualizedContainerService.HintSize="2308,22" />
      <sap2010:ViewStateData Id="CombineLists`1_1" sap:VirtualizedContainerService.HintSize="2308,22" />
      <sap2010:ViewStateData Id="Validate_1" sap:VirtualizedContainerService.HintSize="2308,22" />
      <sap2010:ViewStateData Id="StructureDataByCountries_2" sap:VirtualizedContainerService.HintSize="2286,22" />
      <sap2010:ViewStateData Id="ReserveIdForPriceList_2" sap:VirtualizedContainerService.HintSize="2286,22" />
      <sap2010:ViewStateData Id="GetExistingZones_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="GetExistingCodes_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="GetExistingRates_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_4" sap:VirtualizedContainerService.HintSize="2234,86" />
      <sap2010:ViewStateData Id="PrepareExistingZones_2" sap:VirtualizedContainerService.HintSize="2234,22" />
      <sap2010:ViewStateData Id="PrepareExistingCodes_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareExistingRates_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_5" sap:VirtualizedContainerService.HintSize="2234,86" />
      <sap2010:ViewStateData Id="ProcessCountryCodes_2" sap:VirtualizedContainerService.HintSize="2234,22" />
      <sap2010:ViewStateData Id="ProcessCountryRates_2" sap:VirtualizedContainerService.HintSize="2234,22" />
      <sap2010:ViewStateData Id="ReserveIdsForNewEntities_2" sap:VirtualizedContainerService.HintSize="2234,22" />
      <sap2010:ViewStateData Id="ApplyNewZonesToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedZonesToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyNewCodesToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedCodesToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyNewRatesToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedRatesToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyZonePreviewDataToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyCodePreviewDataToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyRatePreviewDataToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_6" sap:VirtualizedContainerService.HintSize="2234,86" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="2256,710">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="2286,861" />
      <sap2010:ViewStateData Id="SyncImportedDataWithDB_2" sap:VirtualizedContainerService.HintSize="2286,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="2308,1171">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="2330,1605">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.WhS.SupplierPriceList.BP.ImportSupplierPriceList_1" sap:VirtualizedContainerService.HintSize="2370,1685" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>