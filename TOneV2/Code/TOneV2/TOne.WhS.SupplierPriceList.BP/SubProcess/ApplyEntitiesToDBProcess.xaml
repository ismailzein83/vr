<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.WhS.SupplierPriceList.BP.SubProcess.ApplyEntitiesToDBProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:twsba="clr-namespace:TOne.WhS.SupplierPriceList.BP.Activities;assembly=TOne.WhS.SupplierPriceList.BP.Activities"
 xmlns:twse="clr-namespace:TOne.WhS.SupplierPriceList.Entities;assembly=TOne.WhS.SupplierPriceList.Entities"
 xmlns:twses="clr-namespace:TOne.WhS.SupplierPriceList.Entities.SPL;assembly=TOne.WhS.SupplierPriceList.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="NewZonesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:NewZone)))" />
    <x:Property Name="NewCodesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:NewCode)))" />
    <x:Property Name="NewRatesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:NewRate)))" />
    <x:Property Name="ChangedZonesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:ChangedZone)))" />
    <x:Property Name="ChangedCodesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:ChangedCode)))" />
    <x:Property Name="ChangedRatesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:ChangedRate)))" />
    <x:Property Name="SupplierId" Type="InArgument(x:Int32)" />
    <x:Property Name="ImportSupplierPriceListMainProcessStatus" Type="InArgument(vb:AsyncActivityStatus)" />
    <x:Property Name="PreviewCodesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twse:CodePreview)))" />
    <x:Property Name="PreviewZonesRatesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twse:ZoneRatePreview)))" />
    <x:Property Name="PreviewOtherRatesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twse:OtherRatePreview)))" />
    <x:Property Name="ChangedZonesServicesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:ChangedZoneService)))" />
    <x:Property Name="NewZonesServicesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twses:NewZoneService)))" />
    <x:Property Name="PreviewZonesServicesQueue" Type="InArgument(vq:BaseQueue(scg:IEnumerable(twse:ZoneServicePreview)))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.WhS.SupplierPriceList.BP.SubProcess.ApplyEntitiesToDBProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.Queueing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.MainExtensions</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Common.Business</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.GenericData.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>TOne.WhS.BusinessEntity.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP.Arguments</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Parallel DisplayName="ApplyNewAndChangedDataToTempTables" sap2010:WorkflowViewState.IdRef="Parallel_1">
    <Parallel.Variables>
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedNewZonesQueue" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedNewCodesQueue" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedNewRatesQueue" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedChangedZonesQueue" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedChangedCodesQueue" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedChangedRatesQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedNewZonesStatus" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedNewCodesStatus" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedNewRatesStatus" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedChangedZonesStatus" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedChangedCodesStatus" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedChangedRatesStatus" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedPreviewZonesQueue" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedPreviewCodesQueue" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedPreviewRatesQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedPreviewZonesStatus" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedPreviewCodesStatus" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedPreviewRatesStatus" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedPreviewOtherRatesQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedPreviewOtherRatesStatus" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedNewZonesServicesQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedNewZonesServicesStatus" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedChangedZonesServicesQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedChangedZonesServicesStatus" />
      <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="PreparedPreviewZonesServicesQueue" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="PreparedPreviewZonesServicesStatus" />
    </Parallel.Variables>
    <twsba:PrepareNewZonesForDBApply sap2010:WorkflowViewState.IdRef="PrepareNewZonesForDBApply_1">
      <twsba:PrepareNewZonesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZone))">NewZonesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewZonesForDBApply.InputQueue>
      <twsba:PrepareNewZonesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewZonesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareNewZonesForDBApply.OutputQueue>
      <twsba:PrepareNewZonesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewZonesForDBApply.PreviousActivityStatus>
      <twsba:PrepareNewZonesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedNewZonesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareNewZonesForDBApply.Status>
      <twsba:PrepareNewZonesForDBApply.SupplierId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">SupplierId</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewZonesForDBApply.SupplierId>
    </twsba:PrepareNewZonesForDBApply>
    <twsba:ApplyNewZonesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyNewZonesToDB_1">
      <twsba:ApplyNewZonesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewZonesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewZonesToDB.InputQueue>
      <twsba:ApplyNewZonesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedNewZonesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewZonesToDB.PreviousActivityStatus>
    </twsba:ApplyNewZonesToDB>
    <twsba:PrepareNewCodesForDBApply sap2010:WorkflowViewState.IdRef="PrepareNewCodesForDBApply_1">
      <twsba:PrepareNewCodesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewCode))">NewCodesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewCodesForDBApply.InputQueue>
      <twsba:PrepareNewCodesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewCodesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareNewCodesForDBApply.OutputQueue>
      <twsba:PrepareNewCodesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewCodesForDBApply.PreviousActivityStatus>
      <twsba:PrepareNewCodesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedNewCodesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareNewCodesForDBApply.Status>
    </twsba:PrepareNewCodesForDBApply>
    <twsba:ApplyNewCodesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyNewCodesToDB_1">
      <twsba:ApplyNewCodesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewCodesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewCodesToDB.InputQueue>
      <twsba:ApplyNewCodesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedNewCodesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewCodesToDB.PreviousActivityStatus>
    </twsba:ApplyNewCodesToDB>
    <twsba:PrepareNewRatesForDBApply sap2010:WorkflowViewState.IdRef="PrepareNewRatesForDBApply_1">
      <twsba:PrepareNewRatesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewRate))">NewRatesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewRatesForDBApply.InputQueue>
      <twsba:PrepareNewRatesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewRatesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareNewRatesForDBApply.OutputQueue>
      <twsba:PrepareNewRatesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewRatesForDBApply.PreviousActivityStatus>
      <twsba:PrepareNewRatesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedNewRatesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareNewRatesForDBApply.Status>
    </twsba:PrepareNewRatesForDBApply>
    <twsba:ApplyNewRatesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyNewRatesToDB_1">
      <twsba:ApplyNewRatesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewRatesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewRatesToDB.InputQueue>
      <twsba:ApplyNewRatesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedNewRatesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewRatesToDB.PreviousActivityStatus>
    </twsba:ApplyNewRatesToDB>
    <twsba:PrepareNewZonesServicesForDBApply sap2010:WorkflowViewState.IdRef="PrepareNewZonesServicesForDBApply_1">
      <twsba:PrepareNewZonesServicesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZoneService))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:NewZoneService))">NewZonesServicesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewZonesServicesForDBApply.InputQueue>
      <twsba:PrepareNewZonesServicesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewZonesServicesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareNewZonesServicesForDBApply.OutputQueue>
      <twsba:PrepareNewZonesServicesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareNewZonesServicesForDBApply.PreviousActivityStatus>
      <twsba:PrepareNewZonesServicesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedNewZonesServicesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareNewZonesServicesForDBApply.Status>
    </twsba:PrepareNewZonesServicesForDBApply>
    <twsba:ApplyNewZonesServicesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyNewZonesServicesToDB_1">
      <twsba:ApplyNewZonesServicesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedNewZonesServicesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewZonesServicesToDB.InputQueue>
      <twsba:ApplyNewZonesServicesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedNewZonesServicesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyNewZonesServicesToDB.PreviousActivityStatus>
    </twsba:ApplyNewZonesServicesToDB>
    <twsba:PrepareChangedZonesToDB sap2010:WorkflowViewState.IdRef="PrepareChangedZonesToDB_1">
      <twsba:PrepareChangedZonesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZone))">ChangedZonesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedZonesToDB.InputQueue>
      <twsba:PrepareChangedZonesToDB.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedZonesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareChangedZonesToDB.OutputQueue>
      <twsba:PrepareChangedZonesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedZonesToDB.PreviousActivityStatus>
      <twsba:PrepareChangedZonesToDB.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedZonesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareChangedZonesToDB.Status>
    </twsba:PrepareChangedZonesToDB>
    <twsba:ApplyChangedZonesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyChangedZonesToDB_1">
      <twsba:ApplyChangedZonesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedZonesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedZonesToDB.InputQueue>
      <twsba:ApplyChangedZonesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedZonesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedZonesToDB.PreviousActivityStatus>
    </twsba:ApplyChangedZonesToDB>
    <twsba:PrepareChangedCodesToDB sap2010:WorkflowViewState.IdRef="PrepareChangedCodesToDB_1">
      <twsba:PrepareChangedCodesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedCode))">ChangedCodesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedCodesToDB.InputQueue>
      <twsba:PrepareChangedCodesToDB.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedCodesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareChangedCodesToDB.OutputQueue>
      <twsba:PrepareChangedCodesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedCodesToDB.PreviousActivityStatus>
      <twsba:PrepareChangedCodesToDB.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedCodesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareChangedCodesToDB.Status>
    </twsba:PrepareChangedCodesToDB>
    <twsba:ApplyChangedCodesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyChangedCodesToDB_1">
      <twsba:ApplyChangedCodesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedCodesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedCodesToDB.InputQueue>
      <twsba:ApplyChangedCodesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedCodesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedCodesToDB.PreviousActivityStatus>
    </twsba:ApplyChangedCodesToDB>
    <twsba:PrepareChangedRatesToDB sap2010:WorkflowViewState.IdRef="PrepareChangedRatesToDB_1">
      <twsba:PrepareChangedRatesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedRate))">ChangedRatesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedRatesToDB.InputQueue>
      <twsba:PrepareChangedRatesToDB.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedRatesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareChangedRatesToDB.OutputQueue>
      <twsba:PrepareChangedRatesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedRatesToDB.PreviousActivityStatus>
      <twsba:PrepareChangedRatesToDB.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedRatesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareChangedRatesToDB.Status>
    </twsba:PrepareChangedRatesToDB>
    <twsba:ApplyChangedRatesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyChangedRatesToDB_1">
      <twsba:ApplyChangedRatesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedRatesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedRatesToDB.InputQueue>
      <twsba:ApplyChangedRatesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedRatesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedRatesToDB.PreviousActivityStatus>
    </twsba:ApplyChangedRatesToDB>
    <twsba:PrepareChangedZonesServicesToDB sap2010:WorkflowViewState.IdRef="PrepareChangedZonesServicesToDB_1">
      <twsba:PrepareChangedZonesServicesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZoneService))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twses:ChangedZoneService))">ChangedZonesServicesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedZonesServicesToDB.InputQueue>
      <twsba:PrepareChangedZonesServicesToDB.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedZonesServicesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PrepareChangedZonesServicesToDB.OutputQueue>
      <twsba:PrepareChangedZonesServicesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PrepareChangedZonesServicesToDB.PreviousActivityStatus>
      <twsba:PrepareChangedZonesServicesToDB.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedZonesServicesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PrepareChangedZonesServicesToDB.Status>
    </twsba:PrepareChangedZonesServicesToDB>
    <twsba:ApplyChangedZonesServicesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyChangedZonesServicesToDB_1">
      <twsba:ApplyChangedZonesServicesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedChangedZonesServicesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedZonesServicesToDB.InputQueue>
      <twsba:ApplyChangedZonesServicesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedChangedZonesServicesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyChangedZonesServicesToDB.PreviousActivityStatus>
    </twsba:ApplyChangedZonesServicesToDB>
    <twsba:PreparePreviewZonesRatesForDBApply sap2010:WorkflowViewState.IdRef="PreparePreviewZonesRatesForDBApply_1">
      <twsba:PreparePreviewZonesRatesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:ZoneRatePreview))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:ZoneRatePreview))">PreviewZonesRatesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewZonesRatesForDBApply.InputQueue>
      <twsba:PreparePreviewZonesRatesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewZonesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PreparePreviewZonesRatesForDBApply.OutputQueue>
      <twsba:PreparePreviewZonesRatesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewZonesRatesForDBApply.PreviousActivityStatus>
      <twsba:PreparePreviewZonesRatesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewZonesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PreparePreviewZonesRatesForDBApply.Status>
    </twsba:PreparePreviewZonesRatesForDBApply>
    <twsba:ApplyPreviewZonesRatesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyPreviewZonesRatesToDB_1">
      <twsba:ApplyPreviewZonesRatesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewZonesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewZonesRatesToDB.InputQueue>
      <twsba:ApplyPreviewZonesRatesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewZonesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewZonesRatesToDB.PreviousActivityStatus>
    </twsba:ApplyPreviewZonesRatesToDB>
    <twsba:PreparePreviewCodesForDBApply sap2010:WorkflowViewState.IdRef="PreparePreviewCodesForDBApply_1">
      <twsba:PreparePreviewCodesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:CodePreview))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:CodePreview))">PreviewCodesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewCodesForDBApply.InputQueue>
      <twsba:PreparePreviewCodesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewCodesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PreparePreviewCodesForDBApply.OutputQueue>
      <twsba:PreparePreviewCodesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewCodesForDBApply.PreviousActivityStatus>
      <twsba:PreparePreviewCodesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewCodesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PreparePreviewCodesForDBApply.Status>
    </twsba:PreparePreviewCodesForDBApply>
    <twsba:ApplyPreviewCodesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyPreviewCodesToDB_1">
      <twsba:ApplyPreviewCodesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewCodesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewCodesToDB.InputQueue>
      <twsba:ApplyPreviewCodesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewCodesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewCodesToDB.PreviousActivityStatus>
    </twsba:ApplyPreviewCodesToDB>
    <twsba:PreparePreviewOtherRatesForDBApply sap2010:WorkflowViewState.IdRef="PreparePreviewOtherRatesForDBApply_1">
      <twsba:PreparePreviewOtherRatesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:OtherRatePreview))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:OtherRatePreview))">PreviewOtherRatesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewOtherRatesForDBApply.InputQueue>
      <twsba:PreparePreviewOtherRatesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewOtherRatesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PreparePreviewOtherRatesForDBApply.OutputQueue>
      <twsba:PreparePreviewOtherRatesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewOtherRatesForDBApply.PreviousActivityStatus>
      <twsba:PreparePreviewOtherRatesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewOtherRatesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PreparePreviewOtherRatesForDBApply.Status>
    </twsba:PreparePreviewOtherRatesForDBApply>
    <twsba:ApplyPreviewOtherRatesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyPreviewOtherRatesToDB_1">
      <twsba:ApplyPreviewOtherRatesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewOtherRatesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewOtherRatesToDB.InputQueue>
      <twsba:ApplyPreviewOtherRatesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewOtherRatesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewOtherRatesToDB.PreviousActivityStatus>
    </twsba:ApplyPreviewOtherRatesToDB>
    <twsba:PreparePreviewZonesServicesForDBApply sap2010:WorkflowViewState.IdRef="PreparePreviewZonesServicesForDBApply_1">
      <twsba:PreparePreviewZonesServicesForDBApply.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:ZoneServicePreview))">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(scg:IEnumerable(twse:ZoneServicePreview))">PreviewZonesServicesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewZonesServicesForDBApply.InputQueue>
      <twsba:PreparePreviewZonesServicesForDBApply.OutputQueue>
        <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewZonesServicesQueue</mca:CSharpReference>
        </InOutArgument>
      </twsba:PreparePreviewZonesServicesForDBApply.OutputQueue>
      <twsba:PreparePreviewZonesServicesForDBApply.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">ImportSupplierPriceListMainProcessStatus</mca:CSharpValue>
        </InArgument>
      </twsba:PreparePreviewZonesServicesForDBApply.PreviousActivityStatus>
      <twsba:PreparePreviewZonesServicesForDBApply.Status>
        <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewZonesServicesStatus</mca:CSharpReference>
        </OutArgument>
      </twsba:PreparePreviewZonesServicesForDBApply.Status>
    </twsba:PreparePreviewZonesServicesForDBApply>
    <twsba:ApplyPreviewZonesServicesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyPreviewZonesServicesToDB_1">
      <twsba:ApplyPreviewZonesServicesToDB.InputQueue>
        <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
          <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">PreparedPreviewZonesServicesQueue</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewZonesServicesToDB.InputQueue>
      <twsba:ApplyPreviewZonesServicesToDB.PreviousActivityStatus>
        <InArgument x:TypeArguments="vb:AsyncActivityStatus">
          <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">PreparedPreviewZonesServicesStatus</mca:CSharpValue>
        </InArgument>
      </twsba:ApplyPreviewZonesServicesToDB.PreviousActivityStatus>
    </twsba:ApplyPreviewZonesServicesToDB>
    <sads:DebugSymbol.Symbol>d2BDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuV2hTLlN1cHBsaWVyUHJpY2VMaXN0LkJQXFN1YlByb2Nlc3NcQXBwbHlFbnRpdGllc1RvREJQcm9jZXNzLnhhbWxiSwOGBA4CAQFoBYIBJwMB/RWDAQWOAR8DAaoVjwEFpAEnAwGFFKUBBbABHwMBshOxAQXGAScDAY0SxwEF0gEfAwG6EdMBBegBLwMBlRDpAQX0AScDAcIP9QEFigIlAwGdDosCBZYCIwMByg2XAgWsAiUDAaUMrQIFuAIjAwHSC7kCBc4CJQMBrQrPAgXaAiMDAdoJ2wIF8AItAwG1CPECBfwCKwMB4gf9AgWSAzADAb0GkwMFngMoAwHqBZ8DBbQDKwMBxQS1AwXAAyMDAfIDwQMF1gMwAwHNAtcDBeIDKAMB+gHjAwX4AzMCAVX5AwWEBCsCAQJ/C39SAwGiF3ULdX8DAfkWawtregMB0BZ6C3p1AwGnFnALcHQDAf4ViwELiwFtAwHUFYYBC4YBbAMBqxWcAQucAX8DAYEVkgELkgF6AwHYFKEBC6EBdQMBrxSXAQuXAXQDAYYUrQELrQFtAwHcE6gBC6gBbAMBsxO+AQu+AX8DAYkTtAELtAF6AwHgEsMBC8MBdQMBtxK5AQu5AXQDAY4SzwELzwFtAwHkEcoBC8oBbAMBuxHgAQvgAX8DAZER1gEL1gGJAQMB6BDlAQvlAX0DAb8Q2wEL2wF8AwGWEPEBC/EBdQMB7A/sAQvsAXQDAcMPggILggJ/AwGZD/gBC/gBggEDAfAOhwILhwJ5AwHHDv0BC/0BeAMBng6TAguTAnEDAfQNjgILjgJwAwHLDaQCC6QCfwMBoQ2aAguaAoIBAwH4DKkCC6kCeQMBzwyfAgufAngDAaYMtQILtQJxAwH8C7ACC7ACcAMB0wvGAgvGAn8DAakLvAILvAKCAQMBgAvLAgvLAnkDAdcKwQILwQJ4AwGuCtcCC9cCcQMBhArSAgvSAnADAdsJ6AIL6AJ/AwGxCd4CC94CkQEDAYgJ7QIL7QKBAQMB3wjjAgvjAoABAwG2CPkCC/kCeQMBjAj0Agv0AngDAeMHigMLigN/AwG5B4ADC4ADigEDAZAHjwMLjwN5AwHnBoUDC4UDeAMBvgabAwubA3EDAZQGlgMLlgNwAwHrBawDC6wDfwMBwQWiAwuiA4EBAwGYBbEDC7EDeQMB7wSnAwunA3gDAcYEvQMLvQNxAwGcBLgDC7gDcAMB8wPOAwvOA38DAckDxAMLxAOLAQMBoAPTAwvTA34DAfcCyQMLyQN9AwHOAt8DC98DdgMBpALaAwvaA3UDAfsB8AML8AN/AwHRAeYDC+YDkAEDAagB9QML9QOBAQIBf+sDC+sDgAECAVaBBAuBBHkCASz8Awv8A3gCAQM=</sads:DebugSymbol.Symbol>
  </Parallel>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="PrepareNewZonesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyNewZonesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareNewCodesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyNewCodesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareNewRatesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyNewRatesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareNewZonesServicesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyNewZonesServicesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareChangedZonesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedZonesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareChangedCodesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedCodesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareChangedRatesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedRatesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareChangedZonesServicesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedZonesServicesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PreparePreviewZonesRatesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyPreviewZonesRatesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PreparePreviewCodesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyPreviewCodesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PreparePreviewOtherRatesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyPreviewOtherRatesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PreparePreviewZonesServicesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyPreviewZonesServicesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="5834,86" />
      <sap2010:ViewStateData Id="TOne.WhS.SupplierPriceList.BP.SubProcess.ApplyEntitiesToDBProcess_1" sap:VirtualizedContainerService.HintSize="5874,166" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>