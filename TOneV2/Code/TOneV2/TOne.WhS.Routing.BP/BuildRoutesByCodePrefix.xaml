<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.WhS.Routing.BP.BuildRoutesByCodePrefix"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:twbe="clr-namespace:TOne.WhS.BusinessEntity.Entities;assembly=TOne.WhS.BusinessEntity.Entities"
 xmlns:twrba="clr-namespace:TOne.WhS.Routing.BP.Arguments;assembly=TOne.WhS.Routing.BP.Arguments"
 xmlns:twrba1="clr-namespace:TOne.WhS.RouteSync.BP.Activities;assembly=TOne.WhS.RouteSync.BP.Activities"
 xmlns:twrba2="clr-namespace:TOne.WhS.Routing.BP.Activities;assembly=TOne.WhS.Routing.BP.Activities"
 xmlns:twrbs="clr-namespace:TOne.WhS.RouteSync.BP.SubProcess;assembly=TOne.WhS.RouteSync.BP"
 xmlns:twre="clr-namespace:TOne.WhS.Routing.Entities;assembly=TOne.WhS.Routing.Entities"
 xmlns:twre1="clr-namespace:TOne.WhS.RouteSync.Entities;assembly=TOne.WhS.RouteSync.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(twrba:BuildRoutesByCodePrefixInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.WhS.Routing.BP.BuildRoutesByCodePrefix_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TOne.WhS.Routing.BP.Arguments</x:String>
      <x:String>TOne.WhS.Routing.Entities</x:String>
      <x:String>Vanrise.Queueing</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Caching</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.GenericData.Business</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Runtime</AssemblyReference>
      <AssemblyReference>Vanrise.Runtime.Entities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>TOne.LCRProcess.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.BusinessEntity.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.RouteSync.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.RouteSync.BP</AssemblyReference>
      <AssemblyReference>TOne.WhS.RouteSync.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.Routing.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.Routing.BP.Arguments</AssemblyReference>
      <AssemblyReference>TOne.WhS.Routing.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.WhS.Routing.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(twre:CodePrefixSaleCodes)" Name="SaleCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twre:CodePrefixSupplierCodes)" Name="SupplierCodes" />
      <Variable x:TypeArguments="twre:SupplierZoneDetailByZone" Name="SupplierZoneDetails" />
      <Variable x:TypeArguments="twre:CustomerZoneDetailByZone" Name="CustomerZoneDetails" />
      <Variable x:TypeArguments="scg:List(twrba1:SwitchInProcess)" Name="SwitchesInProcess" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:RoutingCustomerInfo)" Name="ActiveRoutingCustomerInfos" />
    </Sequence.Variables>
    <Parallel DisplayName="Parallel_PrepareCodes" sap2010:WorkflowViewState.IdRef="Parallel_1">
      <Sequence DisplayName="Sequence_SaleCodes" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <twrba2:GetActiveCustomerInfos sap2010:WorkflowViewState.IdRef="GetActiveCustomerInfos_1">
          <twrba2:GetActiveCustomerInfos.ActiveRoutingCustomerInfos>
            <OutArgument x:TypeArguments="scg:IEnumerable(twbe:RoutingCustomerInfo)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:RoutingCustomerInfo)">ActiveRoutingCustomerInfos</mca:CSharpReference>
            </OutArgument>
          </twrba2:GetActiveCustomerInfos.ActiveRoutingCustomerInfos>
        </twrba2:GetActiveCustomerInfos>
        <twrba2:GetSaleCodes Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetSaleCodes_1">
          <twrba2:GetSaleCodes.CodePrefixGroup>
            <InArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefix)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twre:CodePrefix)">Input.CodePrefixGroup</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSaleCodes.CodePrefixGroup>
          <twrba2:GetSaleCodes.CodePrefixSaleCodes>
            <OutArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefixSaleCodes)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twre:CodePrefixSaleCodes)">SaleCodes</mca:CSharpReference>
            </OutArgument>
          </twrba2:GetSaleCodes.CodePrefixSaleCodes>
          <twrba2:GetSaleCodes.EffectiveOn>
            <InArgument x:TypeArguments="s:Nullable(s:DateTime)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(s:DateTime)">Input.EffectiveOn</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSaleCodes.EffectiveOn>
          <twrba2:GetSaleCodes.IsFuture>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSaleCodes.IsFuture>
        </twrba2:GetSaleCodes>
        <twrba2:GetCustomerZoneDetails Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetCustomerZoneDetails_1">
          <twrba2:GetCustomerZoneDetails.CustomerZoneDetails>
            <OutArgument x:TypeArguments="twre:CustomerZoneDetailByZone">
              <mca:CSharpReference x:TypeArguments="twre:CustomerZoneDetailByZone">CustomerZoneDetails</mca:CSharpReference>
            </OutArgument>
          </twrba2:GetCustomerZoneDetails.CustomerZoneDetails>
          <twrba2:GetCustomerZoneDetails.RoutingDatabase>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">Input.RoutingDatabaseId</mca:CSharpValue>
            </InArgument>
          </twrba2:GetCustomerZoneDetails.RoutingDatabase>
          <twrba2:GetCustomerZoneDetails.SaleCodes>
            <InArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefixSaleCodes)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twre:CodePrefixSaleCodes)">SaleCodes</mca:CSharpValue>
            </InArgument>
          </twrba2:GetCustomerZoneDetails.SaleCodes>
        </twrba2:GetCustomerZoneDetails>
      </Sequence>
      <Sequence DisplayName="Sequence_SupplierCodes" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:IEnumerable(twbe:RoutingSupplierInfo)" Name="ActiveSupplierInfo" />
        </Sequence.Variables>
        <twrba2:GetActiveSupplierInfos sap2010:WorkflowViewState.IdRef="GetActiveSupplierInfos_1">
          <twrba2:GetActiveSupplierInfos.ActiveRoutingSupplierInfos>
            <OutArgument x:TypeArguments="scg:IEnumerable(twbe:RoutingSupplierInfo)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:RoutingSupplierInfo)">ActiveSupplierInfo</mca:CSharpReference>
            </OutArgument>
          </twrba2:GetActiveSupplierInfos.ActiveRoutingSupplierInfos>
        </twrba2:GetActiveSupplierInfos>
        <twrba2:GetSupplierCodes Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetSupplierCodes_1">
          <twrba2:GetSupplierCodes.CodePrefixGroup>
            <InArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefix)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twre:CodePrefix)">Input.CodePrefixGroup</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSupplierCodes.CodePrefixGroup>
          <twrba2:GetSupplierCodes.EffectiveOn>
            <InArgument x:TypeArguments="s:Nullable(s:DateTime)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(s:DateTime)">Input.EffectiveOn</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSupplierCodes.EffectiveOn>
          <twrba2:GetSupplierCodes.IsFuture>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSupplierCodes.IsFuture>
          <twrba2:GetSupplierCodes.SupplierCodeServiceRuntimeProcessIds>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)">
              <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Int32)">Input.SupplierCodeServiceRuntimeProcessIds</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSupplierCodes.SupplierCodeServiceRuntimeProcessIds>
          <twrba2:GetSupplierCodes.SupplierCodes>
            <OutArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefixSupplierCodes)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twre:CodePrefixSupplierCodes)">SupplierCodes</mca:CSharpReference>
            </OutArgument>
          </twrba2:GetSupplierCodes.SupplierCodes>
          <twrba2:GetSupplierCodes.SupplierInfo>
            <InArgument x:TypeArguments="scg:IEnumerable(twbe:RoutingSupplierInfo)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:RoutingSupplierInfo)">ActiveSupplierInfo</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSupplierCodes.SupplierInfo>
        </twrba2:GetSupplierCodes>
        <twrba2:GetSupplierZoneDetails Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetSupplierZoneDetails_1">
          <twrba2:GetSupplierZoneDetails.RoutingDatabaseId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">Input.RoutingDatabaseId</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSupplierZoneDetails.RoutingDatabaseId>
          <twrba2:GetSupplierZoneDetails.SupplierCodes>
            <InArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefixSupplierCodes)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twre:CodePrefixSupplierCodes)">SupplierCodes</mca:CSharpValue>
            </InArgument>
          </twrba2:GetSupplierZoneDetails.SupplierCodes>
          <twrba2:GetSupplierZoneDetails.SupplierZoneDetails>
            <OutArgument x:TypeArguments="twre:SupplierZoneDetailByZone">
              <mca:CSharpReference x:TypeArguments="twre:SupplierZoneDetailByZone">SupplierZoneDetails</mca:CSharpReference>
            </OutArgument>
          </twrba2:GetSupplierZoneDetails.SupplierZoneDetails>
        </twrba2:GetSupplierZoneDetails>
      </Sequence>
    </Parallel>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.BuildRouteSync</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <twrba1:LoadSwitchesInProcess sap2010:WorkflowViewState.IdRef="LoadSwitchesInProcess_1">
          <twrba1:LoadSwitchesInProcess.SwitchIds>
            <InArgument x:TypeArguments="scg:List(x:String)">
              <mca:CSharpValue x:TypeArguments="scg:List(x:String)">Input.Switches</mca:CSharpValue>
            </InArgument>
          </twrba1:LoadSwitchesInProcess.SwitchIds>
          <twrba1:LoadSwitchesInProcess.SwitchesInProcess>
            <OutArgument x:TypeArguments="scg:List(twrba1:SwitchInProcess)">
              <mca:CSharpReference x:TypeArguments="scg:List(twrba1:SwitchInProcess)">SwitchesInProcess</mca:CSharpReference>
            </OutArgument>
          </twrba1:LoadSwitchesInProcess.SwitchesInProcess>
          <twrba1:LoadSwitchesInProcess.SwitchesInitializationData>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, twre1:SwitchRouteSyncInitializationData)">
              <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, twre1:SwitchRouteSyncInitializationData)">Input.SwitchesInitializationData</mca:CSharpValue>
            </InArgument>
          </twrba1:LoadSwitchesInProcess.SwitchesInitializationData>
          <twrba1:LoadSwitchesInProcess.SwitchesInitializationDataId>
            <InArgument x:TypeArguments="s:Nullable(s:Guid)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(s:Guid)">null</mca:CSharpValue>
            </InArgument>
          </twrba1:LoadSwitchesInProcess.SwitchesInitializationDataId>
        </twrba1:LoadSwitchesInProcess>
      </If.Then>
    </If>
    <Parallel DisplayName="Parallel_BuildCodeMatch" sap2010:WorkflowViewState.IdRef="Parallel_2">
      <Parallel.Variables>
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="queuePreparedCodeMatches" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="buildCodeMatchesStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareCodeMatchesStatus" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="queuePreparedCodeSaleZoneList" />
        <Variable x:TypeArguments="vq:BaseQueue(twre:CodeMatches)" Name="queueCodeMatchesBatch_ForCustomerRoutes">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(twre:CodeMatches)">new MemoryQueue&lt;CodeMatches&gt;()</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="vq:BaseQueue(twre:CustomerRoutesBatch)" Name="queueCustomerRoutesBatch" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="buildCustomerRoutesStatus" />
        <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="queuePreparedCustomerRoutes" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareCustomerRoutesStatus" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareCodeSaleZoneStatus" />
        <Variable x:TypeArguments="vq:BaseQueue(twre:CodeMatchesBatch)" Name="queueCodeMatchesBatch">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(twre:CodeMatchesBatch)">new MemoryQueue&lt;CodeMatchesBatch&gt;()</mca:CSharpValue>
          </Variable.Default>
        </Variable>
      </Parallel.Variables>
      <twrba2:BuildCodeMatches OutputQueue_2="{x:Null}" sap2010:WorkflowViewState.IdRef="BuildCodeMatches_1" IsCustomerRoutesProcess="True">
        <twrba2:BuildCodeMatches.CodePrefixGroup>
          <InArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefix)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twre:CodePrefix)">Input.CodePrefixGroup</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCodeMatches.CodePrefixGroup>
        <twrba2:BuildCodeMatches.OutputQueueForCustomerRoutes>
          <InOutArgument x:TypeArguments="vq:BaseQueue(twre:CodeMatches)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(twre:CodeMatches)">queueCodeMatchesBatch_ForCustomerRoutes</mca:CSharpReference>
          </InOutArgument>
        </twrba2:BuildCodeMatches.OutputQueueForCustomerRoutes>
        <twrba2:BuildCodeMatches.OutputQueue_1>
          <InOutArgument x:TypeArguments="vq:BaseQueue(twre:CodeMatchesBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(twre:CodeMatchesBatch)">queueCodeMatchesBatch</mca:CSharpReference>
          </InOutArgument>
        </twrba2:BuildCodeMatches.OutputQueue_1>
        <twrba2:BuildCodeMatches.SaleCodes>
          <InArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefixSaleCodes)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twre:CodePrefixSaleCodes)">SaleCodes</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCodeMatches.SaleCodes>
        <twrba2:BuildCodeMatches.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchesStatus</mca:CSharpReference>
          </OutArgument>
        </twrba2:BuildCodeMatches.Status>
        <twrba2:BuildCodeMatches.SupplierCodes>
          <InArgument x:TypeArguments="scg:IEnumerable(twre:CodePrefixSupplierCodes)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twre:CodePrefixSupplierCodes)">SupplierCodes</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCodeMatches.SupplierCodes>
        <twrba2:BuildCodeMatches.SupplierZoneDetails>
          <InArgument x:TypeArguments="twre:SupplierZoneDetailByZone">
            <mca:CSharpValue x:TypeArguments="twre:SupplierZoneDetailByZone">SupplierZoneDetails</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCodeMatches.SupplierZoneDetails>
      </twrba2:BuildCodeMatches>
      <twrba2:BuildCustomerRoutes sap2010:WorkflowViewState.IdRef="BuildCustomerRoutes_1">
        <twrba2:BuildCustomerRoutes.ActiveRoutingCustomerInfos>
          <InArgument x:TypeArguments="scg:IEnumerable(twbe:RoutingCustomerInfo)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:RoutingCustomerInfo)">ActiveRoutingCustomerInfos</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCustomerRoutes.ActiveRoutingCustomerInfos>
        <twrba2:BuildCustomerRoutes.CustomerZoneDetails>
          <InArgument x:TypeArguments="twre:CustomerZoneDetailByZone">
            <mca:CSharpValue x:TypeArguments="twre:CustomerZoneDetailByZone">CustomerZoneDetails</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCustomerRoutes.CustomerZoneDetails>
        <twrba2:BuildCustomerRoutes.EffectiveDate>
          <InArgument x:TypeArguments="s:Nullable(s:DateTime)">
            <mca:CSharpValue x:TypeArguments="s:Nullable(s:DateTime)">Input.EffectiveOn</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCustomerRoutes.EffectiveDate>
        <twrba2:BuildCustomerRoutes.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(twre:CodeMatches)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(twre:CodeMatches)">queueCodeMatchesBatch_ForCustomerRoutes</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCustomerRoutes.InputQueue>
        <twrba2:BuildCustomerRoutes.IsFuture>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCustomerRoutes.IsFuture>
        <twrba2:BuildCustomerRoutes.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(twre:CustomerRoutesBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(twre:CustomerRoutesBatch)">queueCustomerRoutesBatch</mca:CSharpReference>
          </InOutArgument>
        </twrba2:BuildCustomerRoutes.OutputQueue>
        <twrba2:BuildCustomerRoutes.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchesStatus</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCustomerRoutes.PreviousActivityStatus>
        <twrba2:BuildCustomerRoutes.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">buildCustomerRoutesStatus</mca:CSharpReference>
          </OutArgument>
        </twrba2:BuildCustomerRoutes.Status>
        <twrba2:BuildCustomerRoutes.SwitchesInProcess>
          <InArgument x:TypeArguments="scg:List(twrba1:SwitchInProcess)">
            <mca:CSharpValue x:TypeArguments="scg:List(twrba1:SwitchInProcess)">SwitchesInProcess</mca:CSharpValue>
          </InArgument>
        </twrba2:BuildCustomerRoutes.SwitchesInProcess>
      </twrba2:BuildCustomerRoutes>
      <twrba2:PrepareCustomerRoutesForApply sap2010:WorkflowViewState.IdRef="PrepareCustomerRoutesForApply_1">
        <twrba2:PrepareCustomerRoutesForApply.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(twre:CustomerRoutesBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(twre:CustomerRoutesBatch)">queueCustomerRoutesBatch</mca:CSharpValue>
          </InArgument>
        </twrba2:PrepareCustomerRoutesForApply.InputQueue>
        <twrba2:PrepareCustomerRoutesForApply.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">queuePreparedCustomerRoutes</mca:CSharpReference>
          </InOutArgument>
        </twrba2:PrepareCustomerRoutesForApply.OutputQueue>
        <twrba2:PrepareCustomerRoutesForApply.ParentWFRuntimeProcessId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.ParentWFRuntimeProcessId</mca:CSharpValue>
          </InArgument>
        </twrba2:PrepareCustomerRoutesForApply.ParentWFRuntimeProcessId>
        <twrba2:PrepareCustomerRoutesForApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildCustomerRoutesStatus</mca:CSharpValue>
          </InArgument>
        </twrba2:PrepareCustomerRoutesForApply.PreviousActivityStatus>
        <twrba2:PrepareCustomerRoutesForApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">prepareCustomerRoutesStatus</mca:CSharpReference>
          </OutArgument>
        </twrba2:PrepareCustomerRoutesForApply.Status>
      </twrba2:PrepareCustomerRoutesForApply>
      <twrba2:ApplyCustomerRoutesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyCustomerRoutesToDB_1">
        <twrba2:ApplyCustomerRoutesToDB.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">queuePreparedCustomerRoutes</mca:CSharpValue>
          </InArgument>
        </twrba2:ApplyCustomerRoutesToDB.InputQueue>
        <twrba2:ApplyCustomerRoutesToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">prepareCustomerRoutesStatus</mca:CSharpValue>
          </InArgument>
        </twrba2:ApplyCustomerRoutesToDB.PreviousActivityStatus>
        <twrba2:ApplyCustomerRoutesToDB.RoutingDatabaseId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">Input.RoutingDatabaseId</mca:CSharpValue>
          </InArgument>
        </twrba2:ApplyCustomerRoutesToDB.RoutingDatabaseId>
      </twrba2:ApplyCustomerRoutesToDB>
      <If sap2010:WorkflowViewState.IdRef="If_2">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.StoreCodeMatches</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <Parallel DisplayName="Parallel_PrepareCodeMatches" sap2010:WorkflowViewState.IdRef="Parallel_3">
            <twrba2:PrepareCodeMatchesForApply sap2010:WorkflowViewState.IdRef="PrepareCodeMatchesForApply_1">
              <twrba2:PrepareCodeMatchesForApply.InputQueue>
                <InArgument x:TypeArguments="vq:BaseQueue(twre:CodeMatchesBatch)">
                  <mca:CSharpValue x:TypeArguments="vq:BaseQueue(twre:CodeMatchesBatch)">queueCodeMatchesBatch</mca:CSharpValue>
                </InArgument>
              </twrba2:PrepareCodeMatchesForApply.InputQueue>
              <twrba2:PrepareCodeMatchesForApply.OutputQueue>
                <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
                  <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">queuePreparedCodeMatches</mca:CSharpReference>
                </InOutArgument>
              </twrba2:PrepareCodeMatchesForApply.OutputQueue>
              <twrba2:PrepareCodeMatchesForApply.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchesStatus</mca:CSharpValue>
                </InArgument>
              </twrba2:PrepareCodeMatchesForApply.PreviousActivityStatus>
              <twrba2:PrepareCodeMatchesForApply.ShouldApplyCodeZoneMatch>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">Input.ShouldApplyCodeZoneMatch</mca:CSharpValue>
                </InArgument>
              </twrba2:PrepareCodeMatchesForApply.ShouldApplyCodeZoneMatch>
              <twrba2:PrepareCodeMatchesForApply.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">prepareCodeMatchesStatus</mca:CSharpReference>
                </OutArgument>
              </twrba2:PrepareCodeMatchesForApply.Status>
            </twrba2:PrepareCodeMatchesForApply>
            <twrba2:ApplyCodeMatchesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyCodeMatchesToDB_1">
              <twrba2:ApplyCodeMatchesToDB.InputQueue>
                <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
                  <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">queuePreparedCodeMatches</mca:CSharpValue>
                </InArgument>
              </twrba2:ApplyCodeMatchesToDB.InputQueue>
              <twrba2:ApplyCodeMatchesToDB.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">prepareCodeMatchesStatus</mca:CSharpValue>
                </InArgument>
              </twrba2:ApplyCodeMatchesToDB.PreviousActivityStatus>
              <twrba2:ApplyCodeMatchesToDB.RoutingDatabaseId>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">Input.RoutingDatabaseId</mca:CSharpValue>
                </InArgument>
              </twrba2:ApplyCodeMatchesToDB.RoutingDatabaseId>
              <twrba2:ApplyCodeMatchesToDB.ShouldApplyCodeZoneMatch>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">Input.ShouldApplyCodeZoneMatch</mca:CSharpValue>
                </InArgument>
              </twrba2:ApplyCodeMatchesToDB.ShouldApplyCodeZoneMatch>
            </twrba2:ApplyCodeMatchesToDB>
          </Parallel>
        </If.Then>
      </If>
      <If sap2010:WorkflowViewState.IdRef="If_3">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.BuildRouteSync</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <twrbs:BuildRouteSyncByRange RouteRangeInfo="{x:Null}" sap2010:WorkflowViewState.IdRef="BuildRouteSyncByRange_2">
            <twrbs:BuildRouteSyncByRange.ReadRoutesStatus>
              <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildCustomerRoutesStatus</mca:CSharpValue>
              </InArgument>
            </twrbs:BuildRouteSyncByRange.ReadRoutesStatus>
            <twrbs:BuildRouteSyncByRange.RouteRangeType>
              <InArgument x:TypeArguments="twre1:RouteRangeType">
                <mca:CSharpValue x:TypeArguments="twre1:RouteRangeType">RouteSync.Entities.RouteRangeType.Random</mca:CSharpValue>
              </InArgument>
            </twrbs:BuildRouteSyncByRange.RouteRangeType>
            <twrbs:BuildRouteSyncByRange.SwitchesInProcess>
              <InArgument x:TypeArguments="scg:List(twrba1:SwitchInProcess)">
                <mca:CSharpValue x:TypeArguments="scg:List(twrba1:SwitchInProcess)">SwitchesInProcess</mca:CSharpValue>
              </InArgument>
            </twrbs:BuildRouteSyncByRange.SwitchesInProcess>
          </twrbs:BuildRouteSyncByRange>
        </If.Then>
      </If>
    </Parallel>
    <sads:DebugSymbol.Symbol>d0pDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuV2hTLlJvdXRpbmcuQlBcQnVpbGRSb3V0ZXNCeUNvZGVQcmVmaXgueGFtbFdOA9MDDgIBAVcFxQEQAwGwBsYBBeQBCgMBhgblAQXRAxACAQJYB4cBEgMBjweIAQfEARIDAbEGyQELyQFeAwGHBs0BCeIBKAMBjwbtAQ3tAYUBAgEW9wEN9wGPAQIBA/sBB58CIQMB/wSgAgfOAiQDAdMDzwIH6QIuAwHzAuoCB/oCKAMBuQL7Age2AwwCAXe3AwfQAwwCASlZCV8pAwHKB2AJdR8DAakHdgmGASkDAZAHjAEJkgEpAwGFB5MBCbIBIwMBzgazAQnDASkDAbIG2gEP2gGmAQMBqAbVAQ/VAX4DAaAG0AEP0AFlAwGYBt8BD98BWwMBkAaNAg2NAnUDAfMFiAINiAKDAQMB4AX+AQ3+AXgDAc0FkgINkgJ3AwG6BYMCDYMCkAEDAacFlwINlwJ9AwGUBfsBhgH7AYwBAwGTBZwCDZwCcwMBgAWoAg2oAnMDAewEowINowKGAQMB2QTBAg3BAm8DAcYEsgINsgKIAQMBswTLAg3LAnQDAaAErQINrQJqAwGNBMYCDcYCegMB+gO8Ag28AokBAwHnA7cCDbcCWgMB1APhAg3hAnIDAcAD0gIN0gKBAQMBrQPcAg3cAmgDAZoD5gIN5gJ8AwGHA9cCDdcCfAMB9ALyAg3yAnQDAeAC7QIN7QJ0AwHNAvcCDfcCYQMBugL+Ag3+AmICAXiCAwu0AxYDAYsBugMNugNgAgEqvgMLzgMpAgE9XA9ckAEDAcsHbQ9tbAMBwgdoD2h/AwG6B2MPY3oDAbIHcg9yXAMBqgd5D3l9AwGhB4MBD4MBdwMBmQd+D35jAwGRB48BD48BiAEDAYYHmwEPmwFsAwH8BpYBD5YBegMB8walAQ+lAZABAwHqBq8BD68BgAEDAeEGqgEPqgGHAQMB2AagAQ+gAVwDAc8GtgEPtgFjAwHFBrsBD7sBfwMBvAbAAQ/AAX0DAbMGgwMNnQMxAwHZAZ4DDbMDKwMBjAHLAxHLA3gCAWTGAxHGA4MBAgFRwQMRwQN2AgE+kAMTkAN1AwGmAoYDE4YDgQEDAZMClQMTlQNwAwGAApoDE5oDfwMB7QGLAxOLA38DAdoBpgMTpgN3AwHGAaEDE6EDdwMBswGrAxOrA2cDAaABsAMTsANwAwGNAQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetActiveCustomerInfos_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetSaleCodes_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetCustomerZoneDetails_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetActiveSupplierInfos_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetSupplierCodes_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetSupplierZoneDetails_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="2257,316" />
      <sap2010:ViewStateData Id="LoadSwitchesInProcess_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="2257,210" />
      <sap2010:ViewStateData Id="BuildCodeMatches_1" sap:VirtualizedContainerService.HintSize="200,236" />
      <sap2010:ViewStateData Id="BuildCustomerRoutes_1" sap:VirtualizedContainerService.HintSize="200,236" />
      <sap2010:ViewStateData Id="PrepareCustomerRoutesForApply_1" sap:VirtualizedContainerService.HintSize="200,236" />
      <sap2010:ViewStateData Id="ApplyCustomerRoutesToDB_1" sap:VirtualizedContainerService.HintSize="200,236" />
      <sap2010:ViewStateData Id="PrepareCodeMatchesForApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyCodeMatchesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_3" sap:VirtualizedContainerService.HintSize="554,86" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="679,236" />
      <sap2010:ViewStateData Id="BuildRouteSyncByRange_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,236" />
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="2257,282" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="2279,1012">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.WhS.Routing.BP.BuildRoutesByCodePrefix_1" sap:VirtualizedContainerService.HintSize="2319,1092" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>