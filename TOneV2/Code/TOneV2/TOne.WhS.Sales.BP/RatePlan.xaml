<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.WhS.Sales.BP.RatePlan"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:TOne.WhS.Sales.BP.SubProcesses"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:twbe="clr-namespace:TOne.WhS.BusinessEntity.Entities;assembly=TOne.WhS.BusinessEntity.Entities"
 xmlns:twsba="clr-namespace:TOne.WhS.Sales.BP.Arguments;assembly=TOne.WhS.Sales.BP.Arguments"
 xmlns:twsba1="clr-namespace:TOne.WhS.Sales.BP.Activities;assembly=TOne.WhS.Sales.BP.Activities"
 xmlns:twsbat="clr-namespace:TOne.WhS.Sales.BP.Arguments.Tasks;assembly=TOne.WhS.Sales.BP.Arguments"
 xmlns:twse="clr-namespace:TOne.WhS.Sales.Entities;assembly=TOne.WhS.Sales.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbe="clr-namespace:Vanrise.BusinessProcess.Entities;assembly=Vanrise.BusinessProcess.Entities"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:ve="clr-namespace:Vanrise.Entities;assembly=Vanrise.Entities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(twsba:RatePlanInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.WhS.Sales.BP.RatePlan_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TOne.WhS.Sales.BP.Arguments</x:String>
      <x:String>TOne.WhS.Sales.Entities</x:String>
      <x:String>TOne.WhS.Sales.BP.Arguments.Tasks</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Business</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.MainExtensions</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.GenericData.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.BusinessEntity.Business</AssemblyReference>
      <AssemblyReference>TOne.WhS.BusinessEntity.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.Sales.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.Sales.BP.Arguments</AssemblyReference>
      <AssemblyReference>TOne.WhS.Sales.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.SupplierPriceList.BP.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.WhS.Sales.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Root" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="twse:Changes" Name="Changes" />
      <Variable x:TypeArguments="scg:List(twse:RateToChange)" Name="RatesToChange" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:RateToClose)" Name="RatesToClose" />
      <Variable x:TypeArguments="s:DateTime" Name="MinimumDate" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SaleZone)" Name="ExistingSaleZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SaleRate)" Name="ExistingSaleRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingZone)" Name="ExistingZones" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingRate)" Name="ExistingRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:NewRate)" Name="NewRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ChangedRate)" Name="ChangedRates" />
      <Variable x:TypeArguments="s:Nullable(x:Int32)" Name="ReservedSalePriceListId" />
      <Variable x:TypeArguments="twse:DefaultRoutingProductToAdd" Name="DefaultRoutingProductToAdd" />
      <Variable x:TypeArguments="twse:DefaultRoutingProductToClose" Name="DefaultRoutingProductToClose" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingDefaultRoutingProduct)" Name="ExistingDefaultRoutingProducts" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:DefaultRoutingProduct)" Name="ExistingSaleEntityDefaultRoutingProducts" />
      <Variable x:TypeArguments="twse:NewDefaultRoutingProduct" Name="NewDefaultRoutingProduct" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ChangedDefaultRoutingProduct)" Name="ChangedDefaultRoutingProducts" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:SaleZoneRoutingProductToAdd)" Name="SaleZoneRoutingProductsToAdd" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:SaleZoneRoutingProductToClose)" Name="SaleZoneRoutingProductsToClose" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SaleZoneRoutingProduct)" Name="ExistingSaleEntityZoneRoutingProducts" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:NewSaleZoneRoutingProduct)" Name="NewSaleZoneRoutingProducts" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ChangedSaleZoneRoutingProduct)" Name="ChangedSaleZoneRoutingProducts" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingSaleZoneRoutingProduct)" Name="ExistingSaleZoneRoutingProducts" />
      <Variable x:TypeArguments="twsbat:PreviewTaskExecutionInformation" Name="ContinueExecution">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="twsbat:PreviewTaskExecutionInformation">new PreviewTaskExecutionInformation()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:IEnumerable(twse:RatePreview)" Name="RatePreviews" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:SaleZoneRoutingProductPreview)" Name="SaleZoneRoutingProductPreviews" />
      <Variable x:TypeArguments="twse:RatePlanPreviewSummary" Name="RatePlanPreviewSummary" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int64, twse:ExistingZone)" Name="ExistingZonesById" />
      <Variable x:TypeArguments="twse:DefaultRoutingProductPreview" Name="DefaultRoutingProductPreview" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:DataByZone)" Name="DataByZone" />
      <Variable x:TypeArguments="twse:DefaultServiceToAdd" Name="DefaultServiceToAdd" />
      <Variable x:TypeArguments="twse:DefaultServiceToClose" Name="DefaultServiceToClose" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:SaleZoneServiceToAdd)" Name="SaleZoneServicesToAdd" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:SaleZoneServiceToClose)" Name="SaleZoneServicesToClose" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SaleEntityDefaultService)" Name="ExistingSaleEntityDefaultServices" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SaleEntityZoneService)" Name="ExistingSaleEntityZoneServices" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingDefaultService)" Name="ExistingDefaultServices" />
      <Variable x:TypeArguments="twse:NewDefaultService" Name="NewDefaultService" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ChangedDefaultService)" Name="ChangedDefaultServices" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingSaleZoneService)" Name="ExistingSaleZoneServices" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:NewSaleZoneService)" Name="NewSaleZoneServices" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ChangedSaleZoneService)" Name="ChangedSaleZoneServices" />
      <Variable x:TypeArguments="twse:DefaultServicePreview" Name="DefaultServicePreview" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:SaleZoneServicePreview)" Name="SaleZoneServicePreviews" />
      <Variable x:TypeArguments="twse:DefaultData" Name="DefaultData" />
      <Variable x:TypeArguments="scg:IEnumerable(vbe:IRuleTarget)" Name="ImportedDataToValidate" />
      <Variable x:TypeArguments="twsbat:EmailTaskExecutionInformation" Name="EmailTaskExecutionInformation" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Int32)" Name="CustomerIdsToEmail" />
      <Variable x:TypeArguments="x:Boolean" Name="ShouldNotifyCustomers" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SalePLZoneChange)" Name="SalePLZoneChanges" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:CustomerCountryToAdd)" Name="CustomerCountriesToAdd" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:CustomerCountryToChange)" Name="CustomerCountriesToChange" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:CustomerCountry2)" Name="ExistingSaleCustomerCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingCustomerCountry)" Name="ExistingCustomerCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:NewCustomerCountry)" Name="NewCustomerCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ChangedCustomerCountry)" Name="ChangedCustomerCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:DraftNewCountry)" Name="DraftNewCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ExistingCustomerCountry)" Name="ExplicitlyChangedExistingCustomerCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:ChangedCustomerCountryPreview)" Name="ChangedCustomerCountryPreviews" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:NewCustomerCountryPreview)" Name="NewCustomerCountryPreviews" />
      <Variable x:TypeArguments="twsbat:EmailCustomerTaskExecutionInformation" Name="EmailCustomerTaskExecutionInformation" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Int32)" Name="CustomerIdsWithPriceList" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:CarrierAccountInfo)" Name="CustomersWithPriceList" />
      <Variable x:TypeArguments="x:Boolean" Name="ProcessHasChanges" />
      <Variable x:TypeArguments="scg:IEnumerable(twse:CountryData)" Name="DataByCountry" />
      <Variable x:TypeArguments="twse:ZoneDataByCountryIds" Name="ZoneDataByCountryIds" />
      <Variable x:TypeArguments="scg:List(x:Int32)" Name="CountryIdsWithDefaultRates" />
      <Variable x:TypeArguments="scg:List(x:Int64)" Name="ZoneIdsWithDefaultRates" />
      <Variable x:TypeArguments="twsbat:SellingZonesWithDefaultRatesTaskExecutionInformation" Name="sellingZonesWithDefaultRatesTaskExecutionInformation">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="twsbat:SellingZonesWithDefaultRatesTaskExecutionInformation">new SellingZonesWithDefaultRatesTaskExecutionInformation()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="ContinueProcess" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int32, scg:List(x:Int64))" Name="ZoneIdsWithDefaultRatesByCountryIds">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int32, scg:List(x:Int64))">new Dictionary&lt;int, List&lt;long&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:Int64)" Name="ZoneIdsWithMissingRates" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:NewPriceList)" Name="SalePricelists" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:NewCustomerPriceListChange)" Name="CustomerChanges" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SalePricelistRPChange)" Name="AllSalePricelistRPChanges" />
      <Variable x:TypeArguments="x:Int64" Name="StateBackupId" />
      <Variable x:TypeArguments="twse:AllCustomerCountriesToChange" Name="AllCustomerCountriesToChange" />
      <Variable x:TypeArguments="twse:AllCustomerCountriesToAdd" Name="AllCustomerCountriesToAdd" />
      <Variable x:TypeArguments="twse:AllDataByZone" Name="AllDataByZone" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int32, scg:List(twbe:NewPriceList))" Name="CustomerPriceListsByCurrencyId" />
      <Variable x:TypeArguments="s:Nullable(x:Int32)" Name="ReservedOwnerPriceListId" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int32, x:Boolean)" Name="SubscriberOwnerHasChangesByOwnerId">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int32, x:Boolean)">new Dictionary&lt;int, bool&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="twsba:RatePlanSubProcessOutput" Name="RatePlanSubProcessOutput" />
      <Variable x:TypeArguments="vb:ProcessCompletedEventPayload" Name="SubProcessEventPayload" />
      <Variable x:TypeArguments="scg:List(x:Int64)" Name="AllPricelistFileIds">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(x:Int64)">new List&lt;long&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="RemainingCustomerCount" />
      <Variable x:TypeArguments="x:String" Name="PublisherOwnerName" />
    </Sequence.Variables>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_22" Message="Read rate plan changes.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <twsba1:GetChanges sap2010:WorkflowViewState.IdRef="GetChanges_2">
      <twsba1:GetChanges.Changes>
        <OutArgument x:TypeArguments="twse:Changes">
          <mca:CSharpReference x:TypeArguments="twse:Changes">Changes</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetChanges.Changes>
      <twsba1:GetChanges.OwnerId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.OwnerId</mca:CSharpValue>
        </InArgument>
      </twsba1:GetChanges.OwnerId>
      <twsba1:GetChanges.OwnerType>
        <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
          <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
        </InArgument>
      </twsba1:GetChanges.OwnerType>
    </twsba1:GetChanges>
    <twsba1:GetOwnerName sap2010:WorkflowViewState.IdRef="GetOwnerName_1" IsSubscriber="False">
      <twsba1:GetOwnerName.OwnerId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.OwnerId</mca:CSharpValue>
        </InArgument>
      </twsba1:GetOwnerName.OwnerId>
      <twsba1:GetOwnerName.OwnerName>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">PublisherOwnerName</mca:CSharpReference>
        </OutArgument>
      </twsba1:GetOwnerName.OwnerName>
      <twsba1:GetOwnerName.OwnerType>
        <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
          <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
        </InArgument>
      </twsba1:GetOwnerName.OwnerType>
      <twsba1:GetOwnerName.SubscriberOwnerIds>
        <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:Int32)">Input.SubscriberOwnerIds</mca:CSharpValue>
        </InArgument>
      </twsba1:GetOwnerName.SubscriberOwnerIds>
    </twsba1:GetOwnerName>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_28">
      <vbw:WriteTrackingMessage.Message>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">string.Format("Started rate planning process for {0}.", PublisherOwnerName)</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Message>
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <local:RatePlanSubProcess sap2010:WorkflowViewState.IdRef="RatePlanSubProcess_1">
      <local:RatePlanSubProcess.Input>
        <InArgument x:TypeArguments="twsba:RatePlanSubProcessInput">
          <mca:CSharpValue x:TypeArguments="twsba:RatePlanSubProcessInput" xml:space="preserve">new RatePlanSubProcessInput
            {
                OwnerId=Input.OwnerId,
                OwnerType=Input.OwnerType,
                IsSubscriberOwner = false,
                CurrencyId=Input.CurrencyId,
                EffectiveDate=Input.EffectiveDate,
                Changes=Changes,
                UserId=Input.UserId,
                FollowPublisherRatesBED = Input.FollowPublisherRatesBED,
            }</mca:CSharpValue>
        </InArgument>
      </local:RatePlanSubProcess.Input>
      <local:RatePlanSubProcess.Output>
        <OutArgument x:TypeArguments="twsba:RatePlanSubProcessOutput">
          <mca:CSharpReference x:TypeArguments="twsba:RatePlanSubProcessOutput">RatePlanSubProcessOutput</mca:CSharpReference>
        </OutArgument>
      </local:RatePlanSubProcess.Output>
    </local:RatePlanSubProcess>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_30">
      <vbw:WriteTrackingMessage.Message>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished rate planning process for {0}.", PublisherOwnerName)</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Message>
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <If sap2010:WorkflowViewState.IdRef="If_18">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">RatePlanSubProcessOutput.ContinueRatePlanProcess</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
          <twsba1:AppendPricelistFileIds sap2010:WorkflowViewState.IdRef="AppendPricelistFileIds_1">
            <twsba1:AppendPricelistFileIds.AllPricelistFileIds>
              <InArgument x:TypeArguments="scg:List(x:Int64)">
                <mca:CSharpValue x:TypeArguments="scg:List(x:Int64)">AllPricelistFileIds</mca:CSharpValue>
              </InArgument>
            </twsba1:AppendPricelistFileIds.AllPricelistFileIds>
            <twsba1:AppendPricelistFileIds.OwnerPricelistFileIds>
              <InArgument x:TypeArguments="scg:List(x:Int64)">
                <mca:CSharpValue x:TypeArguments="scg:List(x:Int64)">RatePlanSubProcessOutput.PricelistFileIds</mca:CSharpValue>
              </InArgument>
            </twsba1:AppendPricelistFileIds.OwnerPricelistFileIds>
          </twsba1:AppendPricelistFileIds>
          <If sap2010:WorkflowViewState.IdRef="If_16">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">Input.SubscriberOwnerIds != null</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32">RemainingCustomerCount</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">Input.SubscriberOwnerIds.Count()</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <ParallelForEach x:TypeArguments="x:Int32" DisplayName="ParallelForEach&lt;Int32&gt;" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1">
                  <ParallelForEach.Values>
                    <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:Int32)">Input.SubscriberOwnerIds</mca:CSharpValue>
                    </InArgument>
                  </ParallelForEach.Values>
                  <ActivityAction x:TypeArguments="x:Int32">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="subscriberOwnerId" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="SubscriberCustomersProcessing" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="ProcessingCustomerName" />
                      </Sequence.Variables>
                      <twsba1:GetOwnerName sap2010:WorkflowViewState.IdRef="GetOwnerName_2" IsSubscriber="True">
                        <twsba1:GetOwnerName.OwnerId>
                          <InArgument x:TypeArguments="x:Int32">
                            <mca:CSharpValue x:TypeArguments="x:Int32">subscriberOwnerId</mca:CSharpValue>
                          </InArgument>
                        </twsba1:GetOwnerName.OwnerId>
                        <twsba1:GetOwnerName.OwnerName>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String">ProcessingCustomerName</mca:CSharpReference>
                          </OutArgument>
                        </twsba1:GetOwnerName.OwnerName>
                        <twsba1:GetOwnerName.OwnerType>
                          <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                            <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
                          </InArgument>
                        </twsba1:GetOwnerName.OwnerType>
                        <twsba1:GetOwnerName.SubscriberOwnerIds>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)">
                            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:Int32)">Input.SubscriberOwnerIds</mca:CSharpValue>
                          </InArgument>
                        </twsba1:GetOwnerName.SubscriberOwnerIds>
                      </twsba1:GetOwnerName>
                      <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_23">
                        <vbw:WriteTrackingMessage.Message>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">string.Format("Started rate planning sub process for {0}.",ProcessingCustomerName)</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Message>
                        <vbw:WriteTrackingMessage.Severity>
                          <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                            <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Severity>
                      </vbw:WriteTrackingMessage>
                      <vbw:RunProcess ProcessInstanceId="{x:Null}" TerminateIfFailed="{x:Null}" TerminationMessage="{x:Null}" sap2010:WorkflowViewState.IdRef="RunProcess_1" WaitProcessCompleted="True">
                        <vbw:RunProcess.Input>
                          <InArgument x:TypeArguments="vbe:BaseProcessInputArgument">
                            <mca:CSharpValue x:TypeArguments="vbe:BaseProcessInputArgument" xml:space="preserve">new RatePlanSubProcessInput
            {
                OwnerId = subscriberOwnerId,
                OwnerType = TOne.WhS.BusinessEntity.Entities.SalePriceListOwnerType.Customer,
                IsSubscriberOwner = true,
                CurrencyId = Input.CurrencyId,
                EffectiveDate = Input.EffectiveDate,
                Changes = Changes,
                UserId = Input.UserId,
                OwnerName = ProcessingCustomerName,
                FollowPublisherRatesBED = Input.FollowPublisherRatesBED,
                PublisherId = Input.OwnerId,
                FollowPublisherRoutingProduct = Input.FollowPublisherRountingProduct
            }</mca:CSharpValue>
                          </InArgument>
                        </vbw:RunProcess.Input>
                        <vbw:RunProcess.ProcessCompletedEventPayload>
                          <OutArgument x:TypeArguments="vb:ProcessCompletedEventPayload">
                            <mca:CSharpReference x:TypeArguments="vb:ProcessCompletedEventPayload">SubProcessEventPayload</mca:CSharpReference>
                          </OutArgument>
                        </vbw:RunProcess.ProcessCompletedEventPayload>
                      </vbw:RunProcess>
                      <If sap2010:WorkflowViewState.IdRef="If_20">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">SubProcessEventPayload.ProcessStatus == Vanrise.BusinessProcess.Entities.BPInstanceStatus.Completed</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <If sap2010:WorkflowViewState.IdRef="If_24">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">!(SubProcessEventPayload.ProcessOutput as RatePlanSubProcessOutput).TerminatedDueBusinessRulesViolation</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_26">
                                <AddToCollection x:TypeArguments="scg:KeyValuePair(x:Int32, x:Boolean)" DisplayName="AddToCollection&lt;KeyValuePair&lt;Int32,Boolean&gt;&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_9">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="scg:KeyValuePair(x:Int32, x:Boolean)">
                                      <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:Int32, x:Boolean)">new KeyValuePair&lt;int,bool&gt;(subscriberOwnerId,(SubProcessEventPayload.ProcessOutput as RatePlanSubProcessOutput).ContinueRatePlanProcess)</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:Int32, x:Boolean))">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:Int32, x:Boolean))">SubscriberOwnerHasChangesByOwnerId</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                                <twsba1:AppendPricelistFileIds sap2010:WorkflowViewState.IdRef="AppendPricelistFileIds_3">
                                  <twsba1:AppendPricelistFileIds.AllPricelistFileIds>
                                    <InArgument x:TypeArguments="scg:List(x:Int64)">
                                      <mca:CSharpValue x:TypeArguments="scg:List(x:Int64)">AllPricelistFileIds</mca:CSharpValue>
                                    </InArgument>
                                  </twsba1:AppendPricelistFileIds.AllPricelistFileIds>
                                  <twsba1:AppendPricelistFileIds.OwnerPricelistFileIds>
                                    <InArgument x:TypeArguments="scg:List(x:Int64)">
                                      <mca:CSharpValue x:TypeArguments="scg:List(x:Int64)">(SubProcessEventPayload.ProcessOutput as RatePlanSubProcessOutput).PricelistFileIds</mca:CSharpValue>
                                    </InArgument>
                                  </twsba1:AppendPricelistFileIds.OwnerPricelistFileIds>
                                </twsba1:AppendPricelistFileIds>
                              </Sequence>
                            </If.Then>
                          </If>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                            <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4">
                              <TerminateWorkflow.Reason>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">String.Format("Rate planning sub process for {0} failed due to error: {1}", ProcessingCustomerName, SubProcessEventPayload.LastProcessMessage)</mca:CSharpValue>
                                </InArgument>
                              </TerminateWorkflow.Reason>
                            </TerminateWorkflow>
                          </Sequence>
                        </If.Else>
                      </If>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <mca:CSharpReference x:TypeArguments="x:Int32">RemainingCustomerCount</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <mca:CSharpValue x:TypeArguments="x:Int32">RemainingCustomerCount - 1</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_24">
                        <vbw:WriteTrackingMessage.Message>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished rate planning sub process for {0}. {1} customer(s) are remaining", ProcessingCustomerName,RemainingCustomerCount)</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Message>
                        <vbw:WriteTrackingMessage.Severity>
                          <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                            <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Severity>
                      </vbw:WriteTrackingMessage>
                    </Sequence>
                  </ActivityAction>
                </ParallelForEach>
              </Sequence>
            </If.Then>
          </If>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Default="True" Name="ContinueSellingZones" />
            </Sequence.Variables>
            <vbw:AssignTask x:TypeArguments="twsbat:PreviewTaskExecutionInformation" ExecutedTask="{x:Null}" sap2010:WorkflowViewState.IdRef="AssignTask`1_3" TaskTitle="Rate Plan Preview">
              <vbw:AssignTask.AssignedTo>
                <InArgument x:TypeArguments="vbe:BPTaskAssignee">
                  <mca:CSharpValue x:TypeArguments="vbe:BPTaskAssignee">new Vanrise.BusinessProcess.MainExtensions.InitiatorBPTaskAssignee()</mca:CSharpValue>
                </InArgument>
              </vbw:AssignTask.AssignedTo>
              <vbw:AssignTask.TaskData>
                <InArgument x:TypeArguments="vbe:BPTaskData">
                  <mca:CSharpValue x:TypeArguments="vbe:BPTaskData" xml:space="preserve">new TOne.WhS.Sales.BP.Arguments.Tasks.PreviewTaskData()
{
	OwnerType = Input.OwnerType,
    OwnerId = Input.OwnerId
}</mca:CSharpValue>
                </InArgument>
              </vbw:AssignTask.TaskData>
              <vbw:AssignTask.TaskExecutionInformation>
                <OutArgument x:TypeArguments="twsbat:PreviewTaskExecutionInformation">
                  <mca:CSharpReference x:TypeArguments="twsbat:PreviewTaskExecutionInformation">ContinueExecution</mca:CSharpReference>
                </OutArgument>
              </vbw:AssignTask.TaskExecutionInformation>
            </vbw:AssignTask>
            <If sap2010:WorkflowViewState.IdRef="If_14">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">ContinueExecution.Decision</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_25">
                    <vbw:WriteTrackingMessage.Message>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">string.Format("Creating Backup for {0}.", PublisherOwnerName)</mca:CSharpValue>
                      </InArgument>
                    </vbw:WriteTrackingMessage.Message>
                    <vbw:WriteTrackingMessage.Severity>
                      <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                      </InArgument>
                    </vbw:WriteTrackingMessage.Severity>
                  </vbw:WriteTrackingMessage>
                  <twsba1:BackupData PublisherOwnerId="{x:Null}" sap2010:WorkflowViewState.IdRef="BackupData_2">
                    <twsba1:BackupData.OwnerId>
                      <InArgument x:TypeArguments="x:Int32">
                        <mca:CSharpValue x:TypeArguments="x:Int32">Input.OwnerId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:BackupData.OwnerId>
                    <twsba1:BackupData.OwnerType>
                      <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                        <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
                      </InArgument>
                    </twsba1:BackupData.OwnerType>
                    <twsba1:BackupData.StateBackupId>
                      <OutArgument x:TypeArguments="x:Int64">
                        <mca:CSharpReference x:TypeArguments="x:Int64">StateBackupId</mca:CSharpReference>
                      </OutArgument>
                    </twsba1:BackupData.StateBackupId>
                    <twsba1:BackupData.UserId>
                      <InArgument x:TypeArguments="x:Int32">
                        <mca:CSharpValue x:TypeArguments="x:Int32">Input.UserId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:BackupData.UserId>
                  </twsba1:BackupData>
                  <twsba1:SetStateBackupIdForOwnerPricelists sap2010:WorkflowViewState.IdRef="SetStateBackupIdForOwnerPricelists_1">
                    <twsba1:SetStateBackupIdForOwnerPricelists.OwnerId>
                      <InArgument x:TypeArguments="x:Int32">
                        <mca:CSharpValue x:TypeArguments="x:Int32">Input.OwnerId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SetStateBackupIdForOwnerPricelists.OwnerId>
                    <twsba1:SetStateBackupIdForOwnerPricelists.OwnerType>
                      <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                        <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SetStateBackupIdForOwnerPricelists.OwnerType>
                    <twsba1:SetStateBackupIdForOwnerPricelists.StateBackupId>
                      <InArgument x:TypeArguments="x:Int64">
                        <mca:CSharpValue x:TypeArguments="x:Int64">StateBackupId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SetStateBackupIdForOwnerPricelists.StateBackupId>
                  </twsba1:SetStateBackupIdForOwnerPricelists>
                  <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_19">
                    <vbw:WriteTrackingMessage.Message>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Backup for {0}.", PublisherOwnerName)</mca:CSharpValue>
                      </InArgument>
                    </vbw:WriteTrackingMessage.Message>
                    <vbw:WriteTrackingMessage.Severity>
                      <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                      </InArgument>
                    </vbw:WriteTrackingMessage.Severity>
                  </vbw:WriteTrackingMessage>
                  <If sap2010:WorkflowViewState.IdRef="If_17">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Input.SubscriberOwnerIds != null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">
                              <mca:CSharpReference x:TypeArguments="x:Int32">RemainingCustomerCount</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">
                              <mca:CSharpValue x:TypeArguments="x:Int32">SubscriberOwnerHasChangesByOwnerId.Count(item =&gt; item.Value == true)</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ForEach x:TypeArguments="x:Int32" DisplayName="ForEach&lt;Int32&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
                          <ForEach.Values>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)">
                              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:Int32)">Input.SubscriberOwnerIds</mca:CSharpValue>
                            </InArgument>
                          </ForEach.Values>
                          <ActivityAction x:TypeArguments="x:Int32">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Int32" Name="subscriberOwnerId" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="SubscriberOwnersBackup" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Default="False" Name="ownerHasChanges" />
                                <Variable x:TypeArguments="x:String" Name="BackupCustomerName" />
                              </Sequence.Variables>
                              <If sap2010:WorkflowViewState.IdRef="If_19">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">SubscriberOwnerHasChangesByOwnerId.TryGetValue(subscriberOwnerId,out ownerHasChanges) &amp;&amp; ownerHasChanges</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <twsba1:GetOwnerName sap2010:WorkflowViewState.IdRef="GetOwnerName_3" IsSubscriber="True">
                                      <twsba1:GetOwnerName.OwnerId>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">subscriberOwnerId</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:GetOwnerName.OwnerId>
                                      <twsba1:GetOwnerName.OwnerName>
                                        <OutArgument x:TypeArguments="x:String">
                                          <mca:CSharpReference x:TypeArguments="x:String">BackupCustomerName</mca:CSharpReference>
                                        </OutArgument>
                                      </twsba1:GetOwnerName.OwnerName>
                                      <twsba1:GetOwnerName.OwnerType>
                                        <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                                          <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:GetOwnerName.OwnerType>
                                      <twsba1:GetOwnerName.SubscriberOwnerIds>
                                        <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)">
                                          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:Int32)">Input.SubscriberOwnerIds</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:GetOwnerName.SubscriberOwnerIds>
                                    </twsba1:GetOwnerName>
                                    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_18">
                                      <vbw:WriteTrackingMessage.Message>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">string.Format("Creating Backup for {0}.", BackupCustomerName)</mca:CSharpValue>
                                        </InArgument>
                                      </vbw:WriteTrackingMessage.Message>
                                      <vbw:WriteTrackingMessage.Severity>
                                        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                                          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                                        </InArgument>
                                      </vbw:WriteTrackingMessage.Severity>
                                    </vbw:WriteTrackingMessage>
                                    <twsba1:BackupData sap2010:WorkflowViewState.IdRef="BackupData_3">
                                      <twsba1:BackupData.OwnerId>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">subscriberOwnerId</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:BackupData.OwnerId>
                                      <twsba1:BackupData.OwnerType>
                                        <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                                          <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:BackupData.OwnerType>
                                      <twsba1:BackupData.PublisherOwnerId>
                                        <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                          <mca:CSharpValue x:TypeArguments="s:Nullable(x:Int32)">Input.OwnerId</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:BackupData.PublisherOwnerId>
                                      <twsba1:BackupData.StateBackupId>
                                        <OutArgument x:TypeArguments="x:Int64">
                                          <mca:CSharpReference x:TypeArguments="x:Int64">StateBackupId</mca:CSharpReference>
                                        </OutArgument>
                                      </twsba1:BackupData.StateBackupId>
                                      <twsba1:BackupData.UserId>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">Input.UserId</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:BackupData.UserId>
                                    </twsba1:BackupData>
                                    <twsba1:SetStateBackupIdForOwnerPricelists sap2010:WorkflowViewState.IdRef="SetStateBackupIdForOwnerPricelists_2">
                                      <twsba1:SetStateBackupIdForOwnerPricelists.OwnerId>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">subscriberOwnerId</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:SetStateBackupIdForOwnerPricelists.OwnerId>
                                      <twsba1:SetStateBackupIdForOwnerPricelists.OwnerType>
                                        <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                                          <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">TOne.WhS.BusinessEntity.Entities.SalePriceListOwnerType.Customer</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:SetStateBackupIdForOwnerPricelists.OwnerType>
                                      <twsba1:SetStateBackupIdForOwnerPricelists.StateBackupId>
                                        <InArgument x:TypeArguments="x:Int64">
                                          <mca:CSharpValue x:TypeArguments="x:Int64">StateBackupId</mca:CSharpValue>
                                        </InArgument>
                                      </twsba1:SetStateBackupIdForOwnerPricelists.StateBackupId>
                                    </twsba1:SetStateBackupIdForOwnerPricelists>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">RemainingCustomerCount</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">RemainingCustomerCount-1</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_26">
                                      <vbw:WriteTrackingMessage.Message>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Backup for {0}. {1} customer(s) are remaining", BackupCustomerName, RemainingCustomerCount)</mca:CSharpValue>
                                        </InArgument>
                                      </vbw:WriteTrackingMessage.Message>
                                      <vbw:WriteTrackingMessage.Severity>
                                        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                                          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                                        </InArgument>
                                      </vbw:WriteTrackingMessage.Severity>
                                    </vbw:WriteTrackingMessage>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ForEach>
                      </Sequence>
                    </If.Then>
                  </If>
                  <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_17" Message="Started synchronizing with existing entities.">
                    <vbw:WriteTrackingMessage.Severity>
                      <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                      </InArgument>
                    </vbw:WriteTrackingMessage.Severity>
                  </vbw:WriteTrackingMessage>
                  <twsba1:SyncImportedDataWithDB sap2010:WorkflowViewState.IdRef="SyncImportedDataWithDB_3">
                    <twsba1:SyncImportedDataWithDB.CurrencyId>
                      <InArgument x:TypeArguments="x:Int32">
                        <mca:CSharpValue x:TypeArguments="x:Int32">Input.CurrencyId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SyncImportedDataWithDB.CurrencyId>
                    <twsba1:SyncImportedDataWithDB.EffectiveOn>
                      <InArgument x:TypeArguments="s:DateTime">
                        <mca:CSharpValue x:TypeArguments="s:DateTime">Input.EffectiveDate</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SyncImportedDataWithDB.EffectiveOn>
                    <twsba1:SyncImportedDataWithDB.OwnerId>
                      <InArgument x:TypeArguments="x:Int32">
                        <mca:CSharpValue x:TypeArguments="x:Int32">Input.OwnerId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SyncImportedDataWithDB.OwnerId>
                    <twsba1:SyncImportedDataWithDB.OwnerType>
                      <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                        <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SyncImportedDataWithDB.OwnerType>
                    <twsba1:SyncImportedDataWithDB.PricelistFileIds>
                      <InArgument x:TypeArguments="scg:List(x:Int64)">
                        <mca:CSharpValue x:TypeArguments="scg:List(x:Int64)">AllPricelistFileIds</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SyncImportedDataWithDB.PricelistFileIds>
                    <twsba1:SyncImportedDataWithDB.RerservedSalePriceListId>
                      <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(x:Int32)">ReservedSalePriceListId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SyncImportedDataWithDB.RerservedSalePriceListId>
                    <twsba1:SyncImportedDataWithDB.StateBackupId>
                      <InArgument x:TypeArguments="x:Int64">
                        <mca:CSharpValue x:TypeArguments="x:Int64">StateBackupId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:SyncImportedDataWithDB.StateBackupId>
                  </twsba1:SyncImportedDataWithDB>
                  <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_27" Message="Finished synchronizing.">
                    <vbw:WriteTrackingMessage.Severity>
                      <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                      </InArgument>
                    </vbw:WriteTrackingMessage.Severity>
                  </vbw:WriteTrackingMessage>
                  <twsba1:DeleteRatePlanDraft sap2010:WorkflowViewState.IdRef="DeleteRatePlanDraft_2">
                    <twsba1:DeleteRatePlanDraft.OwnerId>
                      <InArgument x:TypeArguments="x:Int32">
                        <mca:CSharpValue x:TypeArguments="x:Int32">Input.OwnerId</mca:CSharpValue>
                      </InArgument>
                    </twsba1:DeleteRatePlanDraft.OwnerId>
                    <twsba1:DeleteRatePlanDraft.OwnerType>
                      <InArgument x:TypeArguments="twbe:SalePriceListOwnerType">
                        <mca:CSharpValue x:TypeArguments="twbe:SalePriceListOwnerType">Input.OwnerType</mca:CSharpValue>
                      </InArgument>
                    </twsba1:DeleteRatePlanDraft.OwnerType>
                  </twsba1:DeleteRatePlanDraft>
                </Sequence>
              </If.Then>
              <If.Else>
                <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_20" Message="The process has been cancelled">
                  <vbw:WriteTrackingMessage.Severity>
                    <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                      <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Severity>
                </vbw:WriteTrackingMessage>
              </If.Else>
            </If>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_21" Message="The process did not detect any changes.">
          <vbw:WriteTrackingMessage.Severity>
            <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
            </InArgument>
          </vbw:WriteTrackingMessage.Severity>
        </vbw:WriteTrackingMessage>
      </If.Else>
    </If>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_15" Message="Started cleaning temporary data.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <twsba1:CleanTemporaryTables sap2010:WorkflowViewState.IdRef="CleanTemporaryTables_1" />
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_16" Message="Finished cleaning temporary data.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <sads:DebugSymbol.Symbol>dzlDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuV2hTLlNhbGVzLkJQXFJhdGVQbGFuLnhhbWyqAUcDtwYOAgEBYgtijAEDAecCkwELkwG2AQMBjgKWATWWATsDAY0CmQELmQGYAQMBtAGoAQuoAYQBAgFbrwELrwFoAgECtQEFuwEgAwGRRbwBBcwBGQMBhUPNAQXiARsDAZ9A4wEF7gEgAwHsPu8BBYQCIAMBuT2FAgWQAiADAYY8kQIFpgYKAwH3BKcGBa0GIAMBnASuBgWuBl0DAZsErwYFtQYgAwHAA7gBC7gBhQEDAZNFtQFhtQF6AwGSRb8BC78BXAMBuETEAQvEAVUDAd9DyQELyQFrAwGGQ98BC98BcQMBrELQAQvQAVUDAdNB1QEL1QFjAwH6QM0BWM0BXwMB+UDaAQvaAWsDAaBA6wEL6wGFAQMBxj/mAQvmAZQBAwHtPoECC4ECfwMBkz7yAQv8ASADAbo9jQILjQKFAQMB4DyIAguIApUBAwGHPJQCC5QCegMB+ASYAgmbBhQDAawGngYJpAYkAwHRBaoGC6oGhQEDAZ4EpwZhpwaDAQMBnQSyBguyBoUBAwHCA68GYa8GhAEDAcEDmQILpAIrAwHTOqUCC9QDEAMBmyrVAwuaBhYDAa0GoQYPoQaJAQMB0wWeBmWeBo4BAwHSBaECEaECgQEDAa07nAIRnAJrAwHUOqgCEagCcAMBnCqsAg/SAxoDAfUq1wM91wNDAwGuBtkDDe0DHgMBiyjuAw2ZBhIDAa8GrQIRuAIaAwGgObkCEdEDIwMB9irqAxPqA4gBAwHBKeEDE+UDFAMB5yjZA6kB2QO8AQMB5ijcAxPcA58BAwGMKPEDE/EDbAMBsAb1AxGOBhwDAeYHkQYRlwYsAwGKB7UCF7UCdAMB+jmwAhewAnIDAaE5vAIXvAJ9AwHHOMMCFc8DIAMB9yr2AxOBBC4DAdYmggQTlwQnAwHtI5gEE6gEPwMB3iGpBBO0BC4DAakgtQQTzgUYAwHLD88FE9UFLgMB7w7WBRP6BTMDAfgJ+wUTgQYuAwGcCYIGE40GMAMB5weUBheUBpEBAwGMB5EGbZEGjQEDAYsHxwIX3AItAwHZNd0CF+gCMgMBojTpAheBAygDAeoyggMXtgMcAwHmLbcDF8IDIAMBryzDAxfOAzIDAfgq/gMZ/gOTAQMBsSf5Axn5A5QBAwHXJo8EGY8EawMB/CWFBBmFBGMDAaIligQZigR5AwHIJJQEGZQEYgMB7iOlBBmlBGMDAZMjmwQZmwRjAwG5IqAEGaAEeQMB3yGxBBmxBJMBAwGEIawEGawElAEDAaoguAQZuAR4AwHMD7wEF8wFIgMBphDSBRnSBZMBAwHxDs8Fb88FngEDAfAO7QUZ7QVzAwGVDtkFGdkFZgMBuw3eBRneBWwDAeEM9wUZ9wVjAwGHDPIFGfIFeQMBrQvjBRnjBWMDAdMK6AUZ6AV5AwH5Cf4FGf4FkwEDAZ4J+wVv+wWIAQMBnQmFBhmFBmMDAcIIigYZigZ5AwHoB9kCHdkCgwEDAew3ygIdygJrAwGRN88CHc8CeQMBtjbHAmrHAnADAbU21AId1AJ9AwHaNeUCHeUClwEDAf404AId4AKtAQMBozTsAh35AiADAccz/gId/gKQAQMB7DLpAsMB6QLJAQMB6zKFAx2FA78BAwHnLYkDG6kDIAMBny+sAxu0AyYDAcIuvwMdvwN0AwGLLboDHboDeAMBsCzLAx3LA5cBAwHUK8YDHcYD5AEDAfkqvQQZyAQiAwH0HskEGcsFIwMBpxCMAyGMA8cBAwGgL5ADH6cDKgMB+y+tAx2zAzEDAcMuxQQfxQSjAQMBzx/ABB/ABHoDAfUezAQfzASFAQMBmh7TBB3JBSgDAagQkQMhmgMzAwGzMZsDIaYDQQMB/C+wAyOwA+8BAwHELtUET9UEVgMBqRDYBB/IBSQDAaoQmAMlmAOyAQMBjzKUAyeUA48CAwG0MaMDJ6MDwQEDAdgwngMnngOBAQMB/S/bBCXbBNQBAwGrEN8EI8YFLgMBiBHgBCX1BDsDAaQb9gQlgQVAAwHpGYIFJZwFOQMBlxadBSWtBVEDAf8TrgUluQUuAwHEEroFJcUFQAMBiRHyBCvyBJEBAwG9HeMEK+MEeQMB4BzoBCvoBIMBAwGDHOAEeOAEfgMBghztBCvtBIsBAwGlG/4EK/4EpQEDAcca+QQr+QSmAQMB6hmUBSuUBX0DAYwZhQUrhQV5AwGvGI8FK48FgQEDAdIXigUrigWLAQMB9RaZBSuZBXQDAZgWqgUrqgV1AwG6FaAFK6AFeQMB3RSlBSulBbwBAwGAFLYFK7YFgAEDAaITsQUrsQWGAQMBxRLCBSvCBaUBAwHnEb0FK70F3AEDAYoR</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteTrackingMessage_22" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="GetChanges_2" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="GetOwnerName_1" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_28" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="RatePlanSubProcess_1" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_30" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="AppendPricelistFileIds_1" sap:VirtualizedContainerService.HintSize="932,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="763,62" />
      <sap2010:ViewStateData Id="GetOwnerName_2" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_23" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="RunProcess_1" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AppendPricelistFileIds_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="464,358">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TerminateWorkflow_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="711,508">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="711,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_24" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="733,982">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_1" sap:VirtualizedContainerService.HintSize="763,1132">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="785,1358">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="932,1508">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssignTask`1_3" sap:VirtualizedContainerService.HintSize="910,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_25" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="BackupData_2" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="SetStateBackupIdForOwnerPricelists_1" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_19" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="516,62" />
      <sap2010:ViewStateData Id="GetOwnerName_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_18" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="BackupData_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="SetStateBackupIdForOwnerPricelists_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_26" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="264,496">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="464,646">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="486,770">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="516,920">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="538,1146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="663,1296">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_17" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="SyncImportedDataWithDB_3" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_27" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="DeleteRatePlanDraft_2" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="685,1916">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_20" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="910,2066">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="932,2252">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="954,3986">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_21" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="1179,4136">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_15" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="CleanTemporaryTables_1" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_16" sap:VirtualizedContainerService.HintSize="1179,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1201,4818">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.WhS.Sales.BP.RatePlan_1" sap:VirtualizedContainerService.HintSize="1241,4898">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>