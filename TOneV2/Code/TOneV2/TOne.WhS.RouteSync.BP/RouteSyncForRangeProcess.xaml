<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.WhS.RouteSync.BP.RouteSyncForRangeProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:TOne.WhS.RouteSync.BP.SubProcess"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scc="clr-namespace:System.Collections.Concurrent;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:twrba="clr-namespace:TOne.WhS.RouteSync.BP.Arguments;assembly=TOne.WhS.RouteSync.BP.Arguments"
 xmlns:twrba1="clr-namespace:TOne.WhS.RouteSync.BP.Activities;assembly=TOne.WhS.RouteSync.BP.Activities"
 xmlns:twre="clr-namespace:TOne.WhS.RouteSync.Entities;assembly=TOne.WhS.RouteSync.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(twrba:RouteSyncForRangeProcessInput)" />
    <x:Property Name="Output" Type="OutArgument(twrba:RouteSyncForRangeProcessOutput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.WhS.RouteSync.BP.RouteSyncForRangeProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TOne.WhS.RouteSync.BP</x:String>
      <x:String>TOne.WhS.RouteSync.BP.Arguments</x:String>
      <x:String>TOne.WhS.RouteSync.Entities</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>System.Collections.Concurrent</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Runtime</AssemblyReference>
      <AssemblyReference>Vanrise.Runtime.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.RouteSync.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.RouteSync.BP.Arguments</AssemblyReference>
      <AssemblyReference>TOne.WhS.RouteSync.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.Routing.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.Routing.Business</AssemblyReference>
      <AssemblyReference>TOne.WhS.Routing.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.WhS.RouteSync.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(twrba1:SwitchInProcess)" Name="switchesInProcess" />
      <Variable x:TypeArguments="twre:RouteSyncDefinition" Name="routeSyncDefinition" />
      <Variable x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)" Name="parentSwitchSyncOutputDict" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="twrba:RouteSyncForRangeProcessOutput">
          <mca:CSharpReference x:TypeArguments="twrba:RouteSyncForRangeProcessOutput">Output</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="twrba:RouteSyncForRangeProcessOutput">
          <mca:CSharpValue x:TypeArguments="twrba:RouteSyncForRangeProcessOutput">new RouteSyncForRangeProcessOutput()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <twrba1:GetRouteSyncDefinition sap2010:WorkflowViewState.IdRef="GetRouteSyncDefinition_1">
      <twrba1:GetRouteSyncDefinition.RouteSyncDefinition>
        <OutArgument x:TypeArguments="twre:RouteSyncDefinition">
          <mca:CSharpReference x:TypeArguments="twre:RouteSyncDefinition">routeSyncDefinition</mca:CSharpReference>
        </OutArgument>
      </twrba1:GetRouteSyncDefinition.RouteSyncDefinition>
      <twrba1:GetRouteSyncDefinition.RouteSyncDefinitionId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.RouteSyncDefinitionId</mca:CSharpValue>
        </InArgument>
      </twrba1:GetRouteSyncDefinition.RouteSyncDefinitionId>
    </twrba1:GetRouteSyncDefinition>
    <twrba1:LoadSwitchesInProcess sap2010:WorkflowViewState.IdRef="LoadSwitchesInProcess_1">
      <twrba1:LoadSwitchesInProcess.SwitchIds>
        <InArgument x:TypeArguments="scg:List(x:String)">
          <mca:CSharpValue x:TypeArguments="scg:List(x:String)">Input.FullRouteSyncSwitches.Select(itm =&gt; itm.SwitchId).ToList()</mca:CSharpValue>
        </InArgument>
      </twrba1:LoadSwitchesInProcess.SwitchIds>
      <twrba1:LoadSwitchesInProcess.SwitchesInProcess>
        <OutArgument x:TypeArguments="scg:List(twrba1:SwitchInProcess)">
          <mca:CSharpReference x:TypeArguments="scg:List(twrba1:SwitchInProcess)">switchesInProcess</mca:CSharpReference>
        </OutArgument>
      </twrba1:LoadSwitchesInProcess.SwitchesInProcess>
      <twrba1:LoadSwitchesInProcess.SwitchesInitializationData>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, twre:SwitchRouteSyncInitializationData)">
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, twre:SwitchRouteSyncInitializationData)">Input.SwitchesInitializationData</mca:CSharpValue>
        </InArgument>
      </twrba1:LoadSwitchesInProcess.SwitchesInitializationData>
      <twrba1:LoadSwitchesInProcess.SwitchesInitializationDataId>
        <InArgument x:TypeArguments="s:Nullable(s:Guid)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(s:Guid)">Input.SwitchesInitializationDataId</mca:CSharpValue>
        </InArgument>
      </twrba1:LoadSwitchesInProcess.SwitchesInitializationDataId>
    </twrba1:LoadSwitchesInProcess>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.ParentSwitchSyncOutputDict!=null</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">
              <mca:CSharpReference x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">parentSwitchSyncOutputDict</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">
              <mca:CSharpValue x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">Input.ParentSwitchSyncOutputDict</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <twrba1:GetParentSwitchSyncOutputDict sap2010:WorkflowViewState.IdRef="GetParentSwitchSyncOutputDict_1">
          <twrba1:GetParentSwitchSyncOutputDict.ParentProcessId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">Input.ParentWFRuntimeProcessId</mca:CSharpValue>
            </InArgument>
          </twrba1:GetParentSwitchSyncOutputDict.ParentProcessId>
          <twrba1:GetParentSwitchSyncOutputDict.ParentSwitchSyncOutputDict>
            <OutArgument x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">
              <mca:CSharpReference x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">parentSwitchSyncOutputDict</mca:CSharpReference>
            </OutArgument>
          </twrba1:GetParentSwitchSyncOutputDict.ParentSwitchSyncOutputDict>
        </twrba1:GetParentSwitchSyncOutputDict>
      </If.Else>
    </If>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
      <Parallel.Variables>
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="readRoutesStatus" />
      </Parallel.Variables>
      <twrba1:ReadRoutes sap2010:WorkflowViewState.IdRef="ReadRoutes_1">
        <twrba1:ReadRoutes.RangeInfo>
          <InArgument x:TypeArguments="twre:RouteRangeInfo">
            <mca:CSharpValue x:TypeArguments="twre:RouteRangeInfo">Input.RangeInfo</mca:CSharpValue>
          </InArgument>
        </twrba1:ReadRoutes.RangeInfo>
        <twrba1:ReadRoutes.RangeType>
          <InArgument x:TypeArguments="s:Nullable(twre:RouteRangeType)">
            <mca:CSharpValue x:TypeArguments="s:Nullable(twre:RouteRangeType)">Input.RangeType</mca:CSharpValue>
          </InArgument>
        </twrba1:ReadRoutes.RangeType>
        <twrba1:ReadRoutes.RouteReader>
          <InArgument x:TypeArguments="twre:RouteReader">
            <mca:CSharpValue x:TypeArguments="twre:RouteReader">routeSyncDefinition.Settings.RouteReader</mca:CSharpValue>
          </InArgument>
        </twrba1:ReadRoutes.RouteReader>
        <twrba1:ReadRoutes.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">readRoutesStatus</mca:CSharpReference>
          </OutArgument>
        </twrba1:ReadRoutes.Status>
        <twrba1:ReadRoutes.SwitchesInProcess>
          <InArgument x:TypeArguments="scg:List(twrba1:SwitchInProcess)">
            <mca:CSharpValue x:TypeArguments="scg:List(twrba1:SwitchInProcess)">switchesInProcess</mca:CSharpValue>
          </InArgument>
        </twrba1:ReadRoutes.SwitchesInProcess>
      </twrba1:ReadRoutes>
      <local:BuildRouteSyncByRange sap2010:WorkflowViewState.IdRef="BuildRouteSyncByRange_1">
        <local:BuildRouteSyncByRange.ParentSwitchSyncOutputDict>
          <InArgument x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">
            <mca:CSharpValue x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">parentSwitchSyncOutputDict</mca:CSharpValue>
          </InArgument>
        </local:BuildRouteSyncByRange.ParentSwitchSyncOutputDict>
        <local:BuildRouteSyncByRange.ReadRoutesStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">readRoutesStatus</mca:CSharpValue>
          </InArgument>
        </local:BuildRouteSyncByRange.ReadRoutesStatus>
        <local:BuildRouteSyncByRange.RouteRangeInfo>
          <InArgument x:TypeArguments="twre:RouteRangeInfo">
            <mca:CSharpValue x:TypeArguments="twre:RouteRangeInfo">Input.RangeInfo</mca:CSharpValue>
          </InArgument>
        </local:BuildRouteSyncByRange.RouteRangeInfo>
        <local:BuildRouteSyncByRange.RouteRangeType>
          <InArgument x:TypeArguments="twre:RouteRangeType">
            <mca:CSharpValue x:TypeArguments="twre:RouteRangeType">Input.RangeType</mca:CSharpValue>
          </InArgument>
        </local:BuildRouteSyncByRange.RouteRangeType>
        <local:BuildRouteSyncByRange.SwitchSyncOutputDict>
          <OutArgument x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">
            <mca:CSharpReference x:TypeArguments="scc:ConcurrentDictionary(x:String, twre:SwitchSyncOutput)">Output.SwitchSyncOutputDict</mca:CSharpReference>
          </OutArgument>
        </local:BuildRouteSyncByRange.SwitchSyncOutputDict>
        <local:BuildRouteSyncByRange.SwitchesInProcess>
          <InArgument x:TypeArguments="scg:List(twrba1:SwitchInProcess)">
            <mca:CSharpValue x:TypeArguments="scg:List(twrba1:SwitchInProcess)">switchesInProcess</mca:CSharpValue>
          </InArgument>
        </local:BuildRouteSyncByRange.SwitchesInProcess>
      </local:BuildRouteSyncByRange>
    </Parallel>
    <sads:DebugSymbol.Symbol>d01DOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuV2hTLlJvdXRlU3luYy5CUFxSb3V0ZVN5bmNGb3JSYW5nZVByb2Nlc3MueGFtbCJEA9wBDgIBAUoFVQ4DAZkBVgVhJQMBjAFiBXckAgFzeAWaAQoCAVKbAQXaARACAQJSC1KJAQMBoAFNC01zAwGaAVkLWXQDAZMBXgteYwMBjQFvC2+hAQMBhgFqC2p6AwGAAWULZZYBAgF6dAt0dQIBdHsLe3ACAVN/CYoBEgIBZo0BCZgBMAIBWZ8BB7kBGwIBLroBB9kBJQIBA4cBD4cBngECAW2CAQ+CAaABAgFnlQEPlQGgAQIBYJABD5ABagIBWqwBDawBewIBS7YBDbYBdAIBRKIBDaIBZQIBPbEBDbEBcQIBNqcBDacBcQIBL9YBDdYBdAIBJ9EBDdEBnwECASDMAQ3MAWUCARnCAQ3CAWkCARK9AQ29AZYBAgELxwENxwFlAgEE</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="554,62" />
      <sap2010:ViewStateData Id="GetRouteSyncDefinition_1" sap:VirtualizedContainerService.HintSize="554,22" />
      <sap2010:ViewStateData Id="LoadSwitchesInProcess_1" sap:VirtualizedContainerService.HintSize="554,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="GetParentSwitchSyncOutputDict_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="554,212" />
      <sap2010:ViewStateData Id="ReadRoutes_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="BuildRouteSyncByRange_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="554,86" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="576,688">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.WhS.RouteSync.BP.RouteSyncForRangeProcess_1" sap:VirtualizedContainerService.HintSize="616,768" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>