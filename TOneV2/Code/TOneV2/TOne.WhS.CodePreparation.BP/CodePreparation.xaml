<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.WhS.CodePreparation.BP.CodePreparation"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:twbe="clr-namespace:TOne.WhS.BusinessEntity.Entities;assembly=TOne.WhS.BusinessEntity.Entities"
 xmlns:twcba="clr-namespace:TOne.WhS.CodePreparation.BP.Arguments;assembly=TOne.WhS.CodePreparation.BP.Arguments"
 xmlns:twcba1="clr-namespace:TOne.WhS.CodePreparation.BP.Activities;assembly=TOne.WhS.CodePreparation.BP.Activities"
 xmlns:twcecp="clr-namespace:TOne.WhS.CodePreparation.Entities.CP.Processing;assembly=TOne.WhS.CodePreparation.Entities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(twcba:CodePreparationInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.WhS.CodePreparation.BP.CodePreparation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TOne.WhS.CodePreparation.BP.Arguments</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.BusinessEntity.Entities</AssemblyReference>
      <AssemblyReference>TOne.WhS.CodePreparation.BP.Activities</AssemblyReference>
      <AssemblyReference>TOne.WhS.CodePreparation.BP.Arguments</AssemblyReference>
      <AssemblyReference>TOne.WhS.CodePreparation.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.WhS.CodePreparation.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Root" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)" Name="CodesToAdd" />
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)" Name="CodesToClose" />
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)" Name="CodesToMove" />
      <Variable x:TypeArguments="s:DateTime" Name="MinimumDate" />
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:ZoneToProcess)" Name="ZonesToProcess" />
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:CountryToProcess)" Name="CountriesToProcess" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SaleZone)" Name="ExistingZoneEntities" />
      <Variable x:TypeArguments="scg:IEnumerable(twbe:SaleCode)" Name="ExistingCodeEntities" />
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:ExistingCode)" Name="ExistingCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:ChangedCode)" Name="ChangedCodes" />
      <Variable x:TypeArguments="scg:IEnumerable(twcecp:ChangedZone)" Name="ChangedZones" />
    </Sequence.Variables>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFromExcel</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <twcba1:GetDataFromSource sap2010:WorkflowViewState.IdRef="GetDataFromSource_2">
          <twcba1:GetDataFromSource.CodesToAdd>
            <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">CodesToAdd</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromSource.CodesToAdd>
          <twcba1:GetDataFromSource.CodesToClose>
            <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">CodesToClose</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromSource.CodesToClose>
          <twcba1:GetDataFromSource.CodesToMove>
            <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">CodesToMove</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromSource.CodesToMove>
          <twcba1:GetDataFromSource.EffectiveDate>
            <InArgument x:TypeArguments="s:DateTime">
              <mca:CSharpValue x:TypeArguments="s:DateTime">(DateTime)Input.EffectiveDate</mca:CSharpValue>
            </InArgument>
          </twcba1:GetDataFromSource.EffectiveDate>
          <twcba1:GetDataFromSource.FileId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">(int)Input.FileId</mca:CSharpValue>
            </InArgument>
          </twcba1:GetDataFromSource.FileId>
          <twcba1:GetDataFromSource.MinimumDate>
            <OutArgument x:TypeArguments="s:DateTime">
              <mca:CSharpReference x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromSource.MinimumDate>
        </twcba1:GetDataFromSource>
      </If.Then>
      <If.Else>
        <twcba1:GetDataFromView sap2010:WorkflowViewState.IdRef="GetDataFromView_1">
          <twcba1:GetDataFromView.CodesToAdd>
            <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">CodesToAdd</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromView.CodesToAdd>
          <twcba1:GetDataFromView.CodesToClose>
            <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">CodesToClose</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromView.CodesToClose>
          <twcba1:GetDataFromView.CodesToMove>
            <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">
              <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">CodesToMove</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromView.CodesToMove>
          <twcba1:GetDataFromView.MinimumDate>
            <OutArgument x:TypeArguments="s:DateTime">
              <mca:CSharpReference x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpReference>
            </OutArgument>
          </twcba1:GetDataFromView.MinimumDate>
          <twcba1:GetDataFromView.SellingNumberPlanId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">Input.SellingNumberPlanId</mca:CSharpValue>
            </InArgument>
          </twcba1:GetDataFromView.SellingNumberPlanId>
        </twcba1:GetDataFromView>
      </If.Else>
    </If>
    <twcba1:StructureDataByZones sap2010:WorkflowViewState.IdRef="StructureDataByZones_1">
      <twcba1:StructureDataByZones.CodesToAdd>
        <InArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">CodesToAdd</mca:CSharpValue>
        </InArgument>
      </twcba1:StructureDataByZones.CodesToAdd>
      <twcba1:StructureDataByZones.CodesToClose>
        <InArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">CodesToClose</mca:CSharpValue>
        </InArgument>
      </twcba1:StructureDataByZones.CodesToClose>
      <twcba1:StructureDataByZones.CodesToMove>
        <InArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">CodesToMove</mca:CSharpValue>
        </InArgument>
      </twcba1:StructureDataByZones.CodesToMove>
      <twcba1:StructureDataByZones.ZonesToProcess>
        <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:ZoneToProcess)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:ZoneToProcess)">ZonesToProcess</mca:CSharpReference>
        </OutArgument>
      </twcba1:StructureDataByZones.ZonesToProcess>
    </twcba1:StructureDataByZones>
    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
      <twcba1:StructureDataByCountries sap2010:WorkflowViewState.IdRef="StructureDataByCountries_1">
        <twcba1:StructureDataByCountries.CountriesToProcess>
          <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:CountryToProcess)">
            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:CountryToProcess)">CountriesToProcess</mca:CSharpReference>
          </OutArgument>
        </twcba1:StructureDataByCountries.CountriesToProcess>
        <twcba1:StructureDataByCountries.ZonesToProcess>
          <InArgument x:TypeArguments="scg:IEnumerable(twcecp:ZoneToProcess)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:ZoneToProcess)">ZonesToProcess</mca:CSharpValue>
          </InArgument>
        </twcba1:StructureDataByCountries.ZonesToProcess>
      </twcba1:StructureDataByCountries>
    </Sequence>
    <ForEach x:TypeArguments="twcecp:CountryToProcess" DisplayName="ForEach&lt;CountryToProcess&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
      <ForEach.Values>
        <InArgument x:TypeArguments="scg:IEnumerable(twcecp:CountryToProcess)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:CountryToProcess)">CountriesToProcess</mca:CSharpValue>
        </InArgument>
      </ForEach.Values>
      <ActivityAction x:TypeArguments="twcecp:CountryToProcess">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="twcecp:CountryToProcess" Name="Country" />
        </ActivityAction.Argument>
        <Sequence DisplayName="ProcessData" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:Dictionary(x:Int64, twcecp:ExistingZone)" Name="ExistingZonesByZoneId" />
            <Variable x:TypeArguments="scg:IEnumerable(twcecp:AddedCode)" Name="NewCodes" />
            <Variable x:TypeArguments="scg:IEnumerable(twcecp:AddedZone)" Name="NewZones" />
          </Sequence.Variables>
          <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
            <twcba1:GetExistingZones sap2010:WorkflowViewState.IdRef="GetExistingZones_1">
              <twcba1:GetExistingZones.ExistingZoneEntities>
                <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SaleZone)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SaleZone)">ExistingZoneEntities</mca:CSharpReference>
                </OutArgument>
              </twcba1:GetExistingZones.ExistingZoneEntities>
              <twcba1:GetExistingZones.MinimumDate>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
                </InArgument>
              </twcba1:GetExistingZones.MinimumDate>
              <twcba1:GetExistingZones.SellingNumberPlanID>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">Input.SellingNumberPlanId</mca:CSharpValue>
                </InArgument>
              </twcba1:GetExistingZones.SellingNumberPlanID>
            </twcba1:GetExistingZones>
            <twcba1:GetExistingCodes sap2010:WorkflowViewState.IdRef="GetExistingCodes_1">
              <twcba1:GetExistingCodes.ExistingCodeEntities>
                <OutArgument x:TypeArguments="scg:IEnumerable(twbe:SaleCode)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twbe:SaleCode)">ExistingCodeEntities</mca:CSharpReference>
                </OutArgument>
              </twcba1:GetExistingCodes.ExistingCodeEntities>
              <twcba1:GetExistingCodes.MinimumDate>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">MinimumDate</mca:CSharpValue>
                </InArgument>
              </twcba1:GetExistingCodes.MinimumDate>
              <twcba1:GetExistingCodes.SellingNumberPlanID>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">Input.SellingNumberPlanId</mca:CSharpValue>
                </InArgument>
              </twcba1:GetExistingCodes.SellingNumberPlanID>
            </twcba1:GetExistingCodes>
          </Parallel>
          <twcba1:PrepareExistingZones sap2010:WorkflowViewState.IdRef="PrepareExistingZones_1">
            <twcba1:PrepareExistingZones.ExistingZoneEntities>
              <InArgument x:TypeArguments="scg:IEnumerable(twbe:SaleZone)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SaleZone)">ExistingZoneEntities</mca:CSharpValue>
              </InArgument>
            </twcba1:PrepareExistingZones.ExistingZoneEntities>
            <twcba1:PrepareExistingZones.ExistingZonesByZoneId>
              <OutArgument x:TypeArguments="scg:Dictionary(x:Int64, twcecp:ExistingZone)">
                <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:Int64, twcecp:ExistingZone)">ExistingZonesByZoneId</mca:CSharpReference>
              </OutArgument>
            </twcba1:PrepareExistingZones.ExistingZonesByZoneId>
          </twcba1:PrepareExistingZones>
          <twcba1:PrepareExistingCodes sap2010:WorkflowViewState.IdRef="PrepareExistingCodes_1">
            <twcba1:PrepareExistingCodes.ExistingCodeEntities>
              <InArgument x:TypeArguments="scg:IEnumerable(twbe:SaleCode)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twbe:SaleCode)">ExistingCodeEntities</mca:CSharpValue>
              </InArgument>
            </twcba1:PrepareExistingCodes.ExistingCodeEntities>
            <twcba1:PrepareExistingCodes.ExistingCodes>
              <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:ExistingCode)">
                <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:ExistingCode)">ExistingCodes</mca:CSharpReference>
              </OutArgument>
            </twcba1:PrepareExistingCodes.ExistingCodes>
            <twcba1:PrepareExistingCodes.ExistingZonesByZoneId>
              <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twcecp:ExistingZone)">
                <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twcecp:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
              </InArgument>
            </twcba1:PrepareExistingCodes.ExistingZonesByZoneId>
          </twcba1:PrepareExistingCodes>
          <twcba1:ProcessCountryCodes sap2010:WorkflowViewState.IdRef="ProcessCountryCodes_1">
            <twcba1:ProcessCountryCodes.ChangedCodes>
              <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:ChangedCode)">
                <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:ChangedCode)">ChangedCodes</mca:CSharpReference>
              </OutArgument>
            </twcba1:ProcessCountryCodes.ChangedCodes>
            <twcba1:ProcessCountryCodes.ChangedZones>
              <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:ChangedZone)">
                <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:ChangedZone)">ChangedZones</mca:CSharpReference>
              </OutArgument>
            </twcba1:ProcessCountryCodes.ChangedZones>
            <twcba1:ProcessCountryCodes.CodesToAdd>
              <InArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:CodeToAdd)">CodesToAdd</mca:CSharpValue>
              </InArgument>
            </twcba1:ProcessCountryCodes.CodesToAdd>
            <twcba1:ProcessCountryCodes.CodesToClose>
              <InArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:CodeToClose)">CodesToClose</mca:CSharpValue>
              </InArgument>
            </twcba1:ProcessCountryCodes.CodesToClose>
            <twcba1:ProcessCountryCodes.CodesToMove>
              <InArgument x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:CodeToMove)">CodesToMove</mca:CSharpValue>
              </InArgument>
            </twcba1:ProcessCountryCodes.CodesToMove>
            <twcba1:ProcessCountryCodes.ExistingCodes>
              <InArgument x:TypeArguments="scg:IEnumerable(twcecp:ExistingCode)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:ExistingCode)">ExistingCodes</mca:CSharpValue>
              </InArgument>
            </twcba1:ProcessCountryCodes.ExistingCodes>
            <twcba1:ProcessCountryCodes.ExistingZonesByZoneId>
              <InArgument x:TypeArguments="scg:Dictionary(x:Int64, twcecp:ExistingZone)">
                <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Int64, twcecp:ExistingZone)">ExistingZonesByZoneId</mca:CSharpValue>
              </InArgument>
            </twcba1:ProcessCountryCodes.ExistingZonesByZoneId>
            <twcba1:ProcessCountryCodes.NewCodes>
              <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:AddedCode)">
                <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:AddedCode)">NewCodes</mca:CSharpReference>
              </OutArgument>
            </twcba1:ProcessCountryCodes.NewCodes>
            <twcba1:ProcessCountryCodes.NewZones>
              <OutArgument x:TypeArguments="scg:IEnumerable(twcecp:AddedZone)">
                <mca:CSharpReference x:TypeArguments="scg:IEnumerable(twcecp:AddedZone)">NewZones</mca:CSharpReference>
              </OutArgument>
            </twcba1:ProcessCountryCodes.NewZones>
          </twcba1:ProcessCountryCodes>
          <twcba1:ReserveIdsForNewEntities sap2010:WorkflowViewState.IdRef="ReserveIdsForNewEntities_1">
            <twcba1:ReserveIdsForNewEntities.NewCodes>
              <InArgument x:TypeArguments="scg:IEnumerable(twcecp:AddedCode)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:AddedCode)">NewCodes</mca:CSharpValue>
              </InArgument>
            </twcba1:ReserveIdsForNewEntities.NewCodes>
            <twcba1:ReserveIdsForNewEntities.NewZones>
              <InArgument x:TypeArguments="scg:IEnumerable(twcecp:AddedZone)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:AddedZone)">NewZones</mca:CSharpValue>
              </InArgument>
            </twcba1:ReserveIdsForNewEntities.NewZones>
          </twcba1:ReserveIdsForNewEntities>
          <Parallel DisplayName="ApplyNewAndChangedDataToTempTables" sap2010:WorkflowViewState.IdRef="Parallel_2">
            <twcba1:ApplyNewZonesToDB sap2010:WorkflowViewState.IdRef="ApplyNewZonesToDB_1">
              <twcba1:ApplyNewZonesToDB.NewZones>
                <InArgument x:TypeArguments="scg:IEnumerable(twcecp:AddedZone)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:AddedZone)">NewZones</mca:CSharpValue>
                </InArgument>
              </twcba1:ApplyNewZonesToDB.NewZones>
              <twcba1:ApplyNewZonesToDB.SellingNumberPlanId>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">Input.SellingNumberPlanId</mca:CSharpValue>
                </InArgument>
              </twcba1:ApplyNewZonesToDB.SellingNumberPlanId>
            </twcba1:ApplyNewZonesToDB>
            <twcba1:ApplyChangedZonesToDB sap2010:WorkflowViewState.IdRef="ApplyChangedZonesToDB_1">
              <twcba1:ApplyChangedZonesToDB.ChangedZones>
                <InArgument x:TypeArguments="scg:IEnumerable(twcecp:ChangedZone)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:ChangedZone)">ChangedZones</mca:CSharpValue>
                </InArgument>
              </twcba1:ApplyChangedZonesToDB.ChangedZones>
            </twcba1:ApplyChangedZonesToDB>
            <twcba1:ApplyNewCodesToDB sap2010:WorkflowViewState.IdRef="ApplyNewCodesToDB_1">
              <twcba1:ApplyNewCodesToDB.NewCodes>
                <InArgument x:TypeArguments="scg:IEnumerable(twcecp:AddedCode)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:AddedCode)">NewCodes</mca:CSharpValue>
                </InArgument>
              </twcba1:ApplyNewCodesToDB.NewCodes>
            </twcba1:ApplyNewCodesToDB>
            <twcba1:ApplyChangedCodesToDB sap2010:WorkflowViewState.IdRef="ApplyChangedCodesToDB_1">
              <twcba1:ApplyChangedCodesToDB.ChangedCodes>
                <InArgument x:TypeArguments="scg:IEnumerable(twcecp:ChangedCode)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(twcecp:ChangedCode)">ChangedCodes</mca:CSharpValue>
                </InArgument>
              </twcba1:ApplyChangedCodesToDB.ChangedCodes>
            </twcba1:ApplyChangedCodesToDB>
          </Parallel>
        </Sequence>
      </ActivityAction>
    </ForEach>
    <twcba1:SyncImportedDataWithDB sap2010:WorkflowViewState.IdRef="SyncImportedDataWithDB_1">
      <twcba1:SyncImportedDataWithDB.SellingNumberPlanId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">Input.SellingNumberPlanId</mca:CSharpValue>
        </InArgument>
      </twcba1:SyncImportedDataWithDB.SellingNumberPlanId>
    </twcba1:SyncImportedDataWithDB>
    <sads:DebugSymbol.Symbol>d0pDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuV2hTLkNvZGVQcmVwYXJhdGlvbi5CUFxDb2RlUHJlcGFyYXRpb24ueGFtbEU2A+gCDgIBAUQFiQEKAwHHBIoBBZ8BIwMBkgSgAQWtARADAfYDrgEF3wIPAgEQ4AIF5gIlAgECRwtHWwMByARLCWokAwGXBW0JhwEiAwHVBJIBC5IBcAMBugScAQucAXwDAa0EjQELjQFsAwGgBJcBC5cBbgMBkwShAQesASkDAfcDsQELsQF7AwHpA7gBCd0CFAIBEeMCC+MCYQIBA1MPU3wDAdkFTg9OeAMBzAVnD2diAwG/BV0PXWwDAbIFYg9iXQMBpQVYD1h6AwGYBXUPdXwDAYoFcA9weAMB/QR/D39iAwHwBIQBD4QBZQMB4wR6D3p6AwHWBKkBDakBdgMBhQSkAQ2kAYUBAwH4A74BC+EBFgMBgAPiAQvtASkDAd0C7gEL/gEpAwGpAv8BC60CKAMBjwGuAgu5Ai0CAWy6AgvcAhYCARK/AQ3PAScDAbUD0AEN4AEnAwGBA+UBEeUBeQMB7wLqARHqAZABAwHeAvYBEfYBgAEDAcwC8QER8QF5AwG7AvsBEfsBiAEDAaoCmwIRmwJ4AwGYApECEZECdgMBhwKlAhGlAngDAfYBjAIRjAJyAwHlAYICEYICfgMB1AGqAhGqAngDAcMBoAIRoAKIAQMBsgGWAhGWAnQDAaEBhwIRhwJ+AwGQAbECEbECcAIBfrYCEbYCcAIBbbsCDcYCKAIBSccCDc0CLAIBN84CDdQCKAIBJdUCDdsCLAIBE8IBE8IBgwEDAdgDzAETzAFpAwHHA8cBE8cBXgMBtgPdARPdAWkDAaQD0wET0wGDAQMBkwPYARPYAV4DAYIDwwITwwJpAgFbvgITvgJyAgFKygITygJ4AgE40QIT0QJyAgEm2AIT2AJ4AgEU</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetDataFromSource_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetDataFromView_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1086,210" />
      <sap2010:ViewStateData Id="StructureDataByZones_1" sap:VirtualizedContainerService.HintSize="1086,22" />
      <sap2010:ViewStateData Id="StructureDataByCountries_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="1086,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetExistingZones_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="GetExistingCodes_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="1034,86" />
      <sap2010:ViewStateData Id="PrepareExistingZones_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="PrepareExistingCodes_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="ProcessCountryCodes_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="ReserveIdsForNewEntities_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="ApplyNewZonesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedZonesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyNewCodesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyChangedCodesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="1034,86" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="1056,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="1086,734" />
      <sap2010:ViewStateData Id="SyncImportedDataWithDB_1" sap:VirtualizedContainerService.HintSize="1086,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1108,1418">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.WhS.CodePreparation.BP.CodePreparation_1" sap:VirtualizedContainerService.HintSize="1148,1498" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>