<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.LCRProcess.UpdateCodeZoneMatchProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:TOne.LCRProcess.Entities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:te="clr-namespace:TOne.Entities;assembly=TOne.Entities"
 xmlns:tla="clr-namespace:TOne.LCRProcess.Arguments;assembly=TOne.LCRProcess.Arguments"
 xmlns:tla1="clr-namespace:TOne.LCRProcess.Activities;assembly=TOne.LCRProcess.Activities"
 xmlns:tle="clr-namespace:TOne.LCR.Entities;assembly=TOne.LCR.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(tla:UpdateCodeZoneMatchProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.LCRProcess.UpdateCodeZoneMatchProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>NHibernate.Classic</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities.Debugger</x:String>
      <x:String>System.Activities.Debugger.Symbol</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TABS</x:String>
      <x:String>TOne.Caching</x:String>
      <x:String>TABS.Components</x:String>
      <x:String>TOne.Entities</x:String>
      <x:String>TOne.LCRProcess.Activities</x:String>
      <x:String>Vanrise.BusinessProcess.WFActivities</x:String>
      <x:String>Vanrise.Common</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>TOne.LCRProcess</x:String>
      <x:String>TOne.LCRProcess.Arguments</x:String>
      <x:String>TOne.LCRProcess.Entities</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>NHibernate</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>TABS.Addons.Utilities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Caching</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>TABS.Plugins.Framework</AssemblyReference>
      <AssemblyReference>TABS</AssemblyReference>
      <AssemblyReference>TOne.Caching</AssemblyReference>
      <AssemblyReference>TOne.Entities</AssemblyReference>
      <AssemblyReference>TOne.LCR.Entities</AssemblyReference>
      <AssemblyReference>TOne.LCRProcess.Activities</AssemblyReference>
      <AssemblyReference>TOne.LCRProcess.Arguments</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.LCRProcess</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="start">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.Now</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="local:CodeZoneMatchProcessLastRunInfo" Name="lastRunInfo" />
      <Variable x:TypeArguments="scg:List(tle:SupplierCodeInfo)" Name="suppliersCodeInfo" />
      <Variable x:TypeArguments="te:CodeList" Name="distinctCodesFromCodes" />
      <Variable x:TypeArguments="te:CodeList" Name="distinctCodesFromCodeMatches" />
      <Variable x:TypeArguments="te:CodeList" Name="addedDistinctCodes" />
      <Variable x:TypeArguments="x:Boolean" Name="buildEntireCodeMatches" />
    </Sequence.Variables>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_1">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String">String.Format("{0}: Update {1} Code/Zone Match Process Started", DateTime.Now, Input.IsFuture? "Future": "Current")</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <vbw:GetDefinitionObjectState x:TypeArguments="local:CodeZoneMatchProcessLastRunInfo" sap2010:WorkflowViewState.IdRef="GetDefinitionObjectState`1_1">
      <vbw:GetDefinitionObjectState.ObjectKey>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">Input.IsFuture.ToString()</mca:CSharpValue>
        </InArgument>
      </vbw:GetDefinitionObjectState.ObjectKey>
      <vbw:GetDefinitionObjectState.Result>
        <OutArgument x:TypeArguments="local:CodeZoneMatchProcessLastRunInfo">
          <mca:CSharpReference x:TypeArguments="local:CodeZoneMatchProcessLastRunInfo">lastRunInfo</mca:CSharpReference>
        </OutArgument>
      </vbw:GetDefinitionObjectState.Result>
    </vbw:GetDefinitionObjectState>
    <tla1:GetActiveSuppliersCodeInfo Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetActiveSuppliersCodeInfo_1">
      <tla1:GetActiveSuppliersCodeInfo.CodeEffectiveAfter>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">lastRunInfo.CodeEffectiveOn</mca:CSharpValue>
        </InArgument>
      </tla1:GetActiveSuppliersCodeInfo.CodeEffectiveAfter>
      <tla1:GetActiveSuppliersCodeInfo.CodeEffectiveOn>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">Input.CodeEffectiveOn</mca:CSharpValue>
        </InArgument>
      </tla1:GetActiveSuppliersCodeInfo.CodeEffectiveOn>
      <tla1:GetActiveSuppliersCodeInfo.SuppliersCodeInfo>
        <OutArgument x:TypeArguments="scg:List(tle:SupplierCodeInfo)">
          <mca:CSharpReference x:TypeArguments="scg:List(tle:SupplierCodeInfo)">suppliersCodeInfo</mca:CSharpReference>
        </OutArgument>
      </tla1:GetActiveSuppliersCodeInfo.SuppliersCodeInfo>
    </tla1:GetActiveSuppliersCodeInfo>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
      <tla1:GetDistinctCodes Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetDistinctCodes_1">
        <tla1:GetDistinctCodes.CodeEffectiveOn>
          <InArgument x:TypeArguments="s:DateTime">
            <mca:CSharpValue x:TypeArguments="s:DateTime">Input.CodeEffectiveOn</mca:CSharpValue>
          </InArgument>
        </tla1:GetDistinctCodes.CodeEffectiveOn>
        <tla1:GetDistinctCodes.DistinctCodes>
          <OutArgument x:TypeArguments="te:CodeList">
            <mca:CSharpReference x:TypeArguments="te:CodeList">distinctCodesFromCodes</mca:CSharpReference>
          </OutArgument>
        </tla1:GetDistinctCodes.DistinctCodes>
        <tla1:GetDistinctCodes.SuppliersCodeInfo>
          <InArgument x:TypeArguments="scg:List(tle:SupplierCodeInfo)">
            <mca:CSharpValue x:TypeArguments="scg:List(tle:SupplierCodeInfo)">suppliersCodeInfo</mca:CSharpValue>
          </InArgument>
        </tla1:GetDistinctCodes.SuppliersCodeInfo>
      </tla1:GetDistinctCodes>
      <tla1:GetDistinctCodesFromCodeMatch Status="{x:Null}" sap2010:WorkflowViewState.IdRef="GetDistinctCodesFromCodeMatch_1">
        <tla1:GetDistinctCodesFromCodeMatch.DistinctCodes>
          <OutArgument x:TypeArguments="te:CodeList">
            <mca:CSharpReference x:TypeArguments="te:CodeList">distinctCodesFromCodeMatches</mca:CSharpReference>
          </OutArgument>
        </tla1:GetDistinctCodesFromCodeMatch.DistinctCodes>
        <tla1:GetDistinctCodesFromCodeMatch.IsFuture>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
          </InArgument>
        </tla1:GetDistinctCodesFromCodeMatch.IsFuture>
        <tla1:GetDistinctCodesFromCodeMatch.SuppliersCodeInfo>
          <InArgument x:TypeArguments="scg:List(tle:SupplierCodeInfo)">
            <mca:CSharpValue x:TypeArguments="scg:List(tle:SupplierCodeInfo)">suppliersCodeInfo</mca:CSharpValue>
          </InArgument>
        </tla1:GetDistinctCodesFromCodeMatch.SuppliersCodeInfo>
      </tla1:GetDistinctCodesFromCodeMatch>
    </Parallel>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_3">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String">distinctCodesFromCodes.DistinctCodes.Count().ToString()</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_4">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String">distinctCodesFromCodeMatches.DistinctCodes.Count().ToString()</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <tla1:ExtractAddedDistinctCodes sap2010:WorkflowViewState.IdRef="ExtractAddedDistinctCodes_1">
      <tla1:ExtractAddedDistinctCodes.AddedDistinctCodes>
        <OutArgument x:TypeArguments="te:CodeList">
          <mca:CSharpReference x:TypeArguments="te:CodeList">addedDistinctCodes</mca:CSharpReference>
        </OutArgument>
      </tla1:ExtractAddedDistinctCodes.AddedDistinctCodes>
      <tla1:ExtractAddedDistinctCodes.DistinctCodesFromCode>
        <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">distinctCodesFromCodes.DistinctCodes</mca:CSharpValue>
        </InArgument>
      </tla1:ExtractAddedDistinctCodes.DistinctCodesFromCode>
      <tla1:ExtractAddedDistinctCodes.DistinctCodesFromCodeMatch>
        <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">distinctCodesFromCodeMatches.DistinctCodes</mca:CSharpValue>
        </InArgument>
      </tla1:ExtractAddedDistinctCodes.DistinctCodesFromCodeMatch>
    </tla1:ExtractAddedDistinctCodes>
    <If sap2010:WorkflowViewState.IdRef="If_2">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">addedDistinctCodes.DistinctCodes.Count() &gt; 100</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">
              <mca:CSharpReference x:TypeArguments="x:Boolean">buildEntireCodeMatches</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">
              <mca:CSharpReference x:TypeArguments="x:Boolean">buildEntireCodeMatches</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If sap2010:WorkflowViewState.IdRef="If_3">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">buildEntireCodeMatches</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <tla1:CreateCodeMatchTempTable sap2010:WorkflowViewState.IdRef="CreateCodeMatchTempTable_1">
          <tla1:CreateCodeMatchTempTable.IsFuture>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
            </InArgument>
          </tla1:CreateCodeMatchTempTable.IsFuture>
        </tla1:CreateCodeMatchTempTable>
      </If.Then>
      <If.Else>
        <tla1:CopyCodeMatchTableWithValidItems Status="{x:Null}" sap2010:WorkflowViewState.IdRef="CopyCodeMatchTableWithValidItems_1">
          <tla1:CopyCodeMatchTableWithValidItems.DistinctCodes>
            <InArgument x:TypeArguments="te:CodeList">
              <mca:CSharpValue x:TypeArguments="te:CodeList">distinctCodesFromCodes</mca:CSharpValue>
            </InArgument>
          </tla1:CopyCodeMatchTableWithValidItems.DistinctCodes>
          <tla1:CopyCodeMatchTableWithValidItems.IsFuture>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
            </InArgument>
          </tla1:CopyCodeMatchTableWithValidItems.IsFuture>
          <tla1:CopyCodeMatchTableWithValidItems.SupplierCodeInfo>
            <InArgument x:TypeArguments="scg:List(tle:SupplierCodeInfo)">
              <mca:CSharpValue x:TypeArguments="scg:List(tle:SupplierCodeInfo)">suppliersCodeInfo</mca:CSharpValue>
            </InArgument>
          </tla1:CopyCodeMatchTableWithValidItems.SupplierCodeInfo>
        </tla1:CopyCodeMatchTableWithValidItems>
      </If.Else>
    </If>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_2">
      <Parallel.Variables>
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="loadCodesForSupplierTaskStatus" />
        <Variable x:TypeArguments="te:TOneQueue(s:Tuple(x:String, scg:List(tle:LCRCode)))" Name="queueSuppliersCodes" />
        <Variable x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))" Name="queueCodeMatches" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="buildCodeMatchesFromSupplierCodesTaskStatus" />
        <Variable x:TypeArguments="te:TOneQueue(x:Object)" Name="queuePreparedCodeMatchesForDBApply" />
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareCodeMatchesForDBApplyTaskStatus" />
      </Parallel.Variables>
      <tla1:LoadCodesForActiveSuppliers sap2010:WorkflowViewState.IdRef="LoadCodesForActiveSuppliers_1">
        <tla1:LoadCodesForActiveSuppliers.EffectiveOn>
          <InArgument x:TypeArguments="s:DateTime">
            <mca:CSharpValue x:TypeArguments="s:DateTime">Input.CodeEffectiveOn</mca:CSharpValue>
          </InArgument>
        </tla1:LoadCodesForActiveSuppliers.EffectiveOn>
        <tla1:LoadCodesForActiveSuppliers.OnlySuppliersWithUpdatedCodes>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">!buildEntireCodeMatches</mca:CSharpValue>
          </InArgument>
        </tla1:LoadCodesForActiveSuppliers.OnlySuppliersWithUpdatedCodes>
        <tla1:LoadCodesForActiveSuppliers.OutputQueue>
          <InOutArgument x:TypeArguments="te:TOneQueue(s:Tuple(x:String, scg:List(tle:LCRCode)))">
            <mca:CSharpReference x:TypeArguments="te:TOneQueue(s:Tuple(x:String, scg:List(tle:LCRCode)))">queueSuppliersCodes</mca:CSharpReference>
          </InOutArgument>
        </tla1:LoadCodesForActiveSuppliers.OutputQueue>
        <tla1:LoadCodesForActiveSuppliers.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">loadCodesForSupplierTaskStatus</mca:CSharpReference>
          </OutArgument>
        </tla1:LoadCodesForActiveSuppliers.Status>
        <tla1:LoadCodesForActiveSuppliers.SuppliersCodeInfo>
          <InArgument x:TypeArguments="scg:List(tle:SupplierCodeInfo)">
            <mca:CSharpValue x:TypeArguments="scg:List(tle:SupplierCodeInfo)">suppliersCodeInfo</mca:CSharpValue>
          </InArgument>
        </tla1:LoadCodesForActiveSuppliers.SuppliersCodeInfo>
      </tla1:LoadCodesForActiveSuppliers>
      <tla1:BuildCodeMatchFromSupplierCodes sap2010:WorkflowViewState.IdRef="BuildCodeMatchFromSupplierCodes_1">
        <tla1:BuildCodeMatchFromSupplierCodes.DistinctCodes>
          <InArgument x:TypeArguments="te:CodeList">
            <mca:CSharpValue x:TypeArguments="te:CodeList">distinctCodesFromCodeMatches</mca:CSharpValue>
          </InArgument>
        </tla1:BuildCodeMatchFromSupplierCodes.DistinctCodes>
        <tla1:BuildCodeMatchFromSupplierCodes.InputQueue>
          <InArgument x:TypeArguments="te:TOneQueue(s:Tuple(x:String, scg:List(tle:LCRCode)))">
            <mca:CSharpValue x:TypeArguments="te:TOneQueue(s:Tuple(x:String, scg:List(tle:LCRCode)))">queueSuppliersCodes</mca:CSharpValue>
          </InArgument>
        </tla1:BuildCodeMatchFromSupplierCodes.InputQueue>
        <tla1:BuildCodeMatchFromSupplierCodes.OutputQueue>
          <InOutArgument x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">
            <mca:CSharpReference x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">queueCodeMatches</mca:CSharpReference>
          </InOutArgument>
        </tla1:BuildCodeMatchFromSupplierCodes.OutputQueue>
        <tla1:BuildCodeMatchFromSupplierCodes.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">loadCodesForSupplierTaskStatus</mca:CSharpValue>
          </InArgument>
        </tla1:BuildCodeMatchFromSupplierCodes.PreviousActivityStatus>
        <tla1:BuildCodeMatchFromSupplierCodes.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchesFromSupplierCodesTaskStatus</mca:CSharpReference>
          </OutArgument>
        </tla1:BuildCodeMatchFromSupplierCodes.Status>
      </tla1:BuildCodeMatchFromSupplierCodes>
      <tla1:PrepareCodeMatchesForDBApply sap2010:WorkflowViewState.IdRef="PrepareCodeMatchesForDBApply_1">
        <tla1:PrepareCodeMatchesForDBApply.InputQueue>
          <InArgument x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">
            <mca:CSharpValue x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">queueCodeMatches</mca:CSharpValue>
          </InArgument>
        </tla1:PrepareCodeMatchesForDBApply.InputQueue>
        <tla1:PrepareCodeMatchesForDBApply.IsFuture>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
          </InArgument>
        </tla1:PrepareCodeMatchesForDBApply.IsFuture>
        <tla1:PrepareCodeMatchesForDBApply.OutputQueue>
          <InOutArgument x:TypeArguments="te:TOneQueue(x:Object)">
            <mca:CSharpReference x:TypeArguments="te:TOneQueue(x:Object)">queuePreparedCodeMatchesForDBApply</mca:CSharpReference>
          </InOutArgument>
        </tla1:PrepareCodeMatchesForDBApply.OutputQueue>
        <tla1:PrepareCodeMatchesForDBApply.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchesFromSupplierCodesTaskStatus</mca:CSharpValue>
          </InArgument>
        </tla1:PrepareCodeMatchesForDBApply.PreviousActivityStatus>
        <tla1:PrepareCodeMatchesForDBApply.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">prepareCodeMatchesForDBApplyTaskStatus</mca:CSharpReference>
          </OutArgument>
        </tla1:PrepareCodeMatchesForDBApply.Status>
      </tla1:PrepareCodeMatchesForDBApply>
      <tla1:ApplyCodeMatchesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyCodeMatchesToDB_1">
        <tla1:ApplyCodeMatchesToDB.InputQueue>
          <InArgument x:TypeArguments="te:TOneQueue(x:Object)">
            <mca:CSharpValue x:TypeArguments="te:TOneQueue(x:Object)">queuePreparedCodeMatchesForDBApply</mca:CSharpValue>
          </InArgument>
        </tla1:ApplyCodeMatchesToDB.InputQueue>
        <tla1:ApplyCodeMatchesToDB.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">prepareCodeMatchesForDBApplyTaskStatus</mca:CSharpValue>
          </InArgument>
        </tla1:ApplyCodeMatchesToDB.PreviousActivityStatus>
      </tla1:ApplyCodeMatchesToDB>
    </Parallel>
    <If sap2010:WorkflowViewState.IdRef="If_4">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">!buildEntireCodeMatches</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Parallel sap2010:WorkflowViewState.IdRef="Parallel_3">
          <Parallel.Variables>
            <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="buildCodeMatchTaskStatus" />
            <Variable x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))" Name="queueCodeMatches" />
            <Variable x:TypeArguments="te:TOneQueue(x:Object)" Name="queuePreparedCodeMatchesForDBApply" />
            <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareCodeMatchesForDBApplyTaskStatus" />
          </Parallel.Variables>
          <tla1:BuildCodeMatchFromDistinctCodes sap2010:WorkflowViewState.IdRef="BuildCodeMatchFromDistinctCodes_1">
            <tla1:BuildCodeMatchFromDistinctCodes.DistinctCodes>
              <InArgument x:TypeArguments="te:CodeList">
                <mca:CSharpValue x:TypeArguments="te:CodeList">addedDistinctCodes</mca:CSharpValue>
              </InArgument>
            </tla1:BuildCodeMatchFromDistinctCodes.DistinctCodes>
            <tla1:BuildCodeMatchFromDistinctCodes.EffectiveOn>
              <InArgument x:TypeArguments="s:DateTime">
                <mca:CSharpValue x:TypeArguments="s:DateTime">Input.CodeEffectiveOn</mca:CSharpValue>
              </InArgument>
            </tla1:BuildCodeMatchFromDistinctCodes.EffectiveOn>
            <tla1:BuildCodeMatchFromDistinctCodes.OutputQueue>
              <InOutArgument x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">
                <mca:CSharpReference x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">queueCodeMatches</mca:CSharpReference>
              </InOutArgument>
            </tla1:BuildCodeMatchFromDistinctCodes.OutputQueue>
            <tla1:BuildCodeMatchFromDistinctCodes.Status>
              <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchTaskStatus</mca:CSharpReference>
              </OutArgument>
            </tla1:BuildCodeMatchFromDistinctCodes.Status>
            <tla1:BuildCodeMatchFromDistinctCodes.SupplierCodeInfo>
              <InArgument x:TypeArguments="scg:List(tle:SupplierCodeInfo)">
                <mca:CSharpValue x:TypeArguments="scg:List(tle:SupplierCodeInfo)">suppliersCodeInfo</mca:CSharpValue>
              </InArgument>
            </tla1:BuildCodeMatchFromDistinctCodes.SupplierCodeInfo>
          </tla1:BuildCodeMatchFromDistinctCodes>
          <tla1:PrepareCodeMatchesForDBApply sap2010:WorkflowViewState.IdRef="PrepareCodeMatchesForDBApply_2">
            <tla1:PrepareCodeMatchesForDBApply.InputQueue>
              <InArgument x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">
                <mca:CSharpValue x:TypeArguments="te:TOneQueue(scg:List(tle:CodeMatch))">queueCodeMatches</mca:CSharpValue>
              </InArgument>
            </tla1:PrepareCodeMatchesForDBApply.InputQueue>
            <tla1:PrepareCodeMatchesForDBApply.IsFuture>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
              </InArgument>
            </tla1:PrepareCodeMatchesForDBApply.IsFuture>
            <tla1:PrepareCodeMatchesForDBApply.OutputQueue>
              <InOutArgument x:TypeArguments="te:TOneQueue(x:Object)">
                <mca:CSharpReference x:TypeArguments="te:TOneQueue(x:Object)">queuePreparedCodeMatchesForDBApply</mca:CSharpReference>
              </InOutArgument>
            </tla1:PrepareCodeMatchesForDBApply.OutputQueue>
            <tla1:PrepareCodeMatchesForDBApply.PreviousActivityStatus>
              <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchTaskStatus</mca:CSharpValue>
              </InArgument>
            </tla1:PrepareCodeMatchesForDBApply.PreviousActivityStatus>
            <tla1:PrepareCodeMatchesForDBApply.Status>
              <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">prepareCodeMatchesForDBApplyTaskStatus</mca:CSharpReference>
              </OutArgument>
            </tla1:PrepareCodeMatchesForDBApply.Status>
          </tla1:PrepareCodeMatchesForDBApply>
          <tla1:ApplyCodeMatchesToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyCodeMatchesToDB_2">
            <tla1:ApplyCodeMatchesToDB.InputQueue>
              <InArgument x:TypeArguments="te:TOneQueue(x:Object)">
                <mca:CSharpValue x:TypeArguments="te:TOneQueue(x:Object)">queuePreparedCodeMatchesForDBApply</mca:CSharpValue>
              </InArgument>
            </tla1:ApplyCodeMatchesToDB.InputQueue>
            <tla1:ApplyCodeMatchesToDB.PreviousActivityStatus>
              <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">prepareCodeMatchesForDBApplyTaskStatus</mca:CSharpValue>
              </InArgument>
            </tla1:ApplyCodeMatchesToDB.PreviousActivityStatus>
          </tla1:ApplyCodeMatchesToDB>
        </Parallel>
      </If.Then>
    </If>
    <tla1:CreateZoneMatchTempTable sap2010:WorkflowViewState.IdRef="CreateZoneMatchTempTable_1">
      <tla1:CreateZoneMatchTempTable.IsFuture>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
        </InArgument>
      </tla1:CreateZoneMatchTempTable.IsFuture>
    </tla1:CreateZoneMatchTempTable>
    <tla1:UpdateZoneMatchInDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="UpdateZoneMatchInDB_1">
      <tla1:UpdateZoneMatchInDB.IsFuture>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
        </InArgument>
      </tla1:UpdateZoneMatchInDB.IsFuture>
    </tla1:UpdateZoneMatchInDB>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_4">
      <tla1:CreateIndexesOnCodeMatchTable Status="{x:Null}" sap2010:WorkflowViewState.IdRef="CreateIndexesOnCodeMatchTable_1">
        <tla1:CreateIndexesOnCodeMatchTable.IsFuture>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
          </InArgument>
        </tla1:CreateIndexesOnCodeMatchTable.IsFuture>
      </tla1:CreateIndexesOnCodeMatchTable>
      <tla1:CreateIndexesOnZoneMatchTable Status="{x:Null}" sap2010:WorkflowViewState.IdRef="CreateIndexesOnZoneMatchTable_1">
        <tla1:CreateIndexesOnZoneMatchTable.IsFuture>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
          </InArgument>
        </tla1:CreateIndexesOnZoneMatchTable.IsFuture>
      </tla1:CreateIndexesOnZoneMatchTable>
    </Parallel>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_5">
      <tla1:SwapCodeMatchTableWithTemp sap2010:WorkflowViewState.IdRef="SwapCodeMatchTableWithTemp_1">
        <tla1:SwapCodeMatchTableWithTemp.IsFuture>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
          </InArgument>
        </tla1:SwapCodeMatchTableWithTemp.IsFuture>
      </tla1:SwapCodeMatchTableWithTemp>
      <tla1:SwapCodeMatchTableWithTemp sap2010:WorkflowViewState.IdRef="SwapCodeMatchTableWithTemp_2">
        <tla1:SwapCodeMatchTableWithTemp.IsFuture>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IsFuture</mca:CSharpValue>
          </InArgument>
        </tla1:SwapCodeMatchTableWithTemp.IsFuture>
      </tla1:SwapCodeMatchTableWithTemp>
    </Parallel>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">
          <mca:CSharpReference x:TypeArguments="s:DateTime">lastRunInfo.CodeEffectiveOn</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">Input.CodeEffectiveOn</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <vbw:SaveDefinitionObjectState sap2010:WorkflowViewState.IdRef="SaveDefinitionObjectState_1">
      <vbw:SaveDefinitionObjectState.ObjectKey>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">Input.IsFuture.ToString()</mca:CSharpValue>
        </InArgument>
      </vbw:SaveDefinitionObjectState.ObjectKey>
      <vbw:SaveDefinitionObjectState.ObjectValue>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object">lastRunInfo</mca:CSharpValue>
        </InArgument>
      </vbw:SaveDefinitionObjectState.ObjectValue>
    </vbw:SaveDefinitionObjectState>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_2">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String">String.Format("{0}: Process done in {1}", DateTime.Now, (DateTime.Now - start))</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <sads:DebugSymbol.Symbol>d0lDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuTENSUHJvY2Vzc1xVcGRhdGVDb2RlWm9uZU1hdGNoUHJvY2Vzcy54YW1salQDiwQOAgEBWAtYVwIBAmIFZhEDAY8GZwVyJAMB/AVzBYMBJwMB4AWEAQWnARADAacFqAEFrAERAwGdBa0BBbEBEQMBkwWyAQXCASYDAfcEwwEF4QEKAwHXBOIBBYQCCgMBpwSFAgXrAhADAaMC7AIFvgMKAgF5vwMFxQMlAgFvxgMFzAMgAgFlzQMF3AMQAgFQ3QMF7AMQAgE77QMF+AMOAgEo+QMFhAQlAgEVhQQFiQQRAgELZAlkugEDAZAGbwtveQMBhgZqC2piAwH9BXYLdmYDAfMFewt7YAMB6gWAAQuAAXgDAeEFhQEHlQEfAwHEBZYBB6YBLAMBqAWqAQmqAX4DAZ4FrwEJrwGEAQMBlAW/AQu/AYQBAwGKBboBC7oBfgMBgQW1AQu1AWYDAfgExgELxgF7AwHYBMoBCdMBEgMB7ATWAQnfARIDAeEE5QEL5QFgAwGoBOkBCe8BKQMBzQTyAQmCAjEDAbEEjgIHqAIqAwHbA6kCB8MCLgMBjwPEAgfeAisDAcMC3wIH6gIjAwGkAu8CC+8CYQIBevMCCbwDFAMBgwHCAwvCA1gCAXDJAwvJA1gCAWbOAwfUAywCAVvVAwfbAywCAVHeAwfkAykCAUblAwfrAykCATz1Awv1A2ACATLwAwvwA24CASmBBAuBBFQCAR/8Awv8A2ICARaHBAmHBJYBAgEMjQENjQFsAwHXBYgBDYgBYgMBzgWSAQ2SAXIDAcUFmQENmQFyAwG7BaMBDaMBcgMBsgWeAQ2eAVoDAakF0QE10QE5AwH2BM0BD80BbAMB7QTdATXdAToDAesE2QEP2QFsAwHiBOwBD+wBXAMBzgT/AQ//AXQDAcQE9QEP9QFmAwG7BPoBD/oBXAMBsgSRAg2RAmIDAZgEoAINoAJ/AwGJBJsCDZsClAEDAfoDlgINlgJjAwHrA6UCDaUCcgMB3AO7Ag27AncDAcwDsQINsQKMAQMBvQOsAg2sAmoDAa4DwAINwAKMAQMBnwO2Ag22AoABAwGQA9YCDdYChAEDAYADxwINxwJ4AwHxAtsCDdsChwEDAeIC0QIN0QKDAQMB0wLMAg3MAloDAcQC5wIN5wJ/AwG0AuICDeICewMBpQL6AguUAzIDAeEBlQMLrwMvAwGfAbADC7sDJwMBhAHRAw3RA1oCAVzYAw3YA1oCAVLhAw3hA1oCAUfoAw3oA1oCAT2RAxGRA3YDAZYCggMRggNmAwGJAv0CEf0CZAMB/AGMAxGMA30DAe8BhwMRhwOEAQMB4gGnAxGnA3UDAdQBmAMRmAN8AwHHAawDEawDiwEDAboBogMRogOHAQMBrQGdAxGdA14DAaABuAMRuAODAQMBkgGzAxGzA38DAYUB</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="1034,62" />
      <sap2010:ViewStateData Id="GetDefinitionObjectState`1_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="GetActiveSuppliersCodeInfo_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="GetDistinctCodes_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="GetDistinctCodesFromCodeMatch_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="1034,86" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="1034,62" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="1034,62" />
      <sap2010:ViewStateData Id="ExtractAddedDistinctCodes_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1034,212" />
      <sap2010:ViewStateData Id="CreateCodeMatchTempTable_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyCodeMatchTableWithValidItems_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="1034,210" />
      <sap2010:ViewStateData Id="LoadCodesForActiveSuppliers_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="BuildCodeMatchFromSupplierCodes_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareCodeMatchesForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyCodeMatchesToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="1034,86" />
      <sap2010:ViewStateData Id="BuildCodeMatchFromDistinctCodes_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareCodeMatchesForDBApply_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyCodeMatchesToDB_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_3" sap:VirtualizedContainerService.HintSize="794,86" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1034,236" />
      <sap2010:ViewStateData Id="CreateZoneMatchTempTable_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="UpdateZoneMatchInDB_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="CreateIndexesOnCodeMatchTable_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="CreateIndexesOnZoneMatchTable_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_4" sap:VirtualizedContainerService.HintSize="1034,86" />
      <sap2010:ViewStateData Id="SwapCodeMatchTableWithTemp_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="SwapCodeMatchTableWithTemp_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_5" sap:VirtualizedContainerService.HintSize="1034,86" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="1034,62" />
      <sap2010:ViewStateData Id="SaveDefinitionObjectState_1" sap:VirtualizedContainerService.HintSize="1034,22" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="1034,62" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1056,2248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.LCRProcess.UpdateCodeZoneMatchProcess_1" sap:VirtualizedContainerService.HintSize="1096,2328" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>