<Activity mc:Ignorable="sap sap2010 sads" x:Class="TOne.LCRProcess.BuildDifferentialLCRandRoutes"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.Core"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:tla="clr-namespace:TOne.LCRProcess.Activities;assembly=TOne.LCRProcess.Activities"
 xmlns:tle="clr-namespace:TOne.LCR.Entities;assembly=TOne.LCR.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="RoutingDatabaseId" Type="InArgument(x:Int32)" />
    <x:Property Name="RouteDetailBatchQueue" Type="InArgument(vq:BaseQueue(tle:RouteDetailBatch))" />
    <x:Property Name="LastRun" Type="InArgument(s:DateTime)" />
    <x:Property Name="RebuildZoneRates" Type="InArgument(x:Boolean)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>TOne.LCRProcess.BuildDifferentialLCRandRoutes_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>TOne.LCRProcess.Arguments</x:String>
      <x:String>Vanrise.Queueing</x:String>
      <x:String>TOne.LCR.Entities</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>NHibernate</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Caching</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>TOne.BusinessEntity.BProcess.Activities</AssemblyReference>
      <AssemblyReference>TOne.BusinessEntity.Entities</AssemblyReference>
      <AssemblyReference>TOne.Business</AssemblyReference>
      <AssemblyReference>TOne.Caching</AssemblyReference>
      <AssemblyReference>TOne.Entities</AssemblyReference>
      <AssemblyReference>TOne.LCR.Entities</AssemblyReference>
      <AssemblyReference>TOne.LCRProcess.Activities</AssemblyReference>
      <AssemblyReference>TOne.LCRProcess.Arguments</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TOne.LCRProcess</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(tle:RouteRule)" Name="routingRules" />
      <Variable x:TypeArguments="tle:CodeCustomers" Name="codeCustomers" />
      <Variable x:TypeArguments="scg1:HashSet(x:Int32)" Name="supplierZoneIds" />
      <Variable x:TypeArguments="scg1:HashSet(x:Int32)" Name="customerZoneIds" />
      <Variable x:TypeArguments="tle:CodeMatchesByCode" Name="codeMatchesByCode">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="tle:CodeMatchesByCode">new CodeMatchesByCode()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="tle:ZoneCustomerRates" Name="zoneCustomerRates">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="tle:ZoneCustomerRates">new ZoneCustomerRates()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="tle:SupplierZoneRates" Name="supplierZoneRates">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="tle:SupplierZoneRates">new SupplierZoneRates()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="buildCodeMatchStatus" />
    </Sequence.Variables>
    <tla:GetRouteCodesFromRules sap2010:WorkflowViewState.IdRef="GetRouteCodesFromRules_1">
      <tla:GetRouteCodesFromRules.CodeCustomers>
        <OutArgument x:TypeArguments="tle:CodeCustomers">
          <mca:CSharpReference x:TypeArguments="tle:CodeCustomers">codeCustomers</mca:CSharpReference>
        </OutArgument>
      </tla:GetRouteCodesFromRules.CodeCustomers>
      <tla:GetRouteCodesFromRules.LastRun>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">LastRun</mca:CSharpValue>
        </InArgument>
      </tla:GetRouteCodesFromRules.LastRun>
    </tla:GetRouteCodesFromRules>
    <tla:GetDifferentialRouteRules sap2010:WorkflowViewState.IdRef="GetDifferentialRouteRules_1">
      <tla:GetDifferentialRouteRules.LastRun>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">LastRun</mca:CSharpValue>
        </InArgument>
      </tla:GetDifferentialRouteRules.LastRun>
      <tla:GetDifferentialRouteRules.RouteRules>
        <OutArgument x:TypeArguments="scg:List(tle:RouteRule)">
          <mca:CSharpReference x:TypeArguments="scg:List(tle:RouteRule)">routingRules</mca:CSharpReference>
        </OutArgument>
      </tla:GetDifferentialRouteRules.RouteRules>
    </tla:GetDifferentialRouteRules>
    <tla:LoadCodeMatches sap2010:WorkflowViewState.IdRef="LoadCodeMatches_1">
      <tla:LoadCodeMatches.CodeMatchesByCode>
        <InOutArgument x:TypeArguments="tle:CodeMatchesByCode">
          <mca:CSharpReference x:TypeArguments="tle:CodeMatchesByCode">codeMatchesByCode</mca:CSharpReference>
        </InOutArgument>
      </tla:LoadCodeMatches.CodeMatchesByCode>
      <tla:LoadCodeMatches.CustomerZoneIds>
        <InOutArgument x:TypeArguments="scg1:HashSet(x:Int32)">
          <mca:CSharpReference x:TypeArguments="scg1:HashSet(x:Int32)">customerZoneIds</mca:CSharpReference>
        </InOutArgument>
      </tla:LoadCodeMatches.CustomerZoneIds>
      <tla:LoadCodeMatches.RoutingDatabaseId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">RoutingDatabaseId</mca:CSharpValue>
        </InArgument>
      </tla:LoadCodeMatches.RoutingDatabaseId>
      <tla:LoadCodeMatches.SupplierZoneIds>
        <InOutArgument x:TypeArguments="scg1:HashSet(x:Int32)">
          <mca:CSharpReference x:TypeArguments="scg1:HashSet(x:Int32)">supplierZoneIds</mca:CSharpReference>
        </InOutArgument>
      </tla:LoadCodeMatches.SupplierZoneIds>
      <tla:LoadCodeMatches.TargetCodes>
        <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">codeCustomers.Keys</mca:CSharpValue>
        </InArgument>
      </tla:LoadCodeMatches.TargetCodes>
    </tla:LoadCodeMatches>
    <tla:GetZoneRates sap2010:WorkflowViewState.IdRef="GetZoneRates_1">
      <tla:GetZoneRates.CustomerZoneIds>
        <InArgument x:TypeArguments="scg1:HashSet(x:Int32)">
          <mca:CSharpValue x:TypeArguments="scg1:HashSet(x:Int32)">customerZoneIds</mca:CSharpValue>
        </InArgument>
      </tla:GetZoneRates.CustomerZoneIds>
      <tla:GetZoneRates.CustomerZoneRates>
        <OutArgument x:TypeArguments="tle:ZoneCustomerRates">
          <mca:CSharpReference x:TypeArguments="tle:ZoneCustomerRates">zoneCustomerRates</mca:CSharpReference>
        </OutArgument>
      </tla:GetZoneRates.CustomerZoneRates>
      <tla:GetZoneRates.RebuildZoneRates>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">RebuildZoneRates</mca:CSharpValue>
        </InArgument>
      </tla:GetZoneRates.RebuildZoneRates>
      <tla:GetZoneRates.RoutingDatabaseId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">RoutingDatabaseId</mca:CSharpValue>
        </InArgument>
      </tla:GetZoneRates.RoutingDatabaseId>
      <tla:GetZoneRates.SupplierZoneIds>
        <InArgument x:TypeArguments="scg1:HashSet(x:Int32)">
          <mca:CSharpValue x:TypeArguments="scg1:HashSet(x:Int32)">supplierZoneIds</mca:CSharpValue>
        </InArgument>
      </tla:GetZoneRates.SupplierZoneIds>
      <tla:GetZoneRates.SupplierZoneRates>
        <OutArgument x:TypeArguments="tle:SupplierZoneRates">
          <mca:CSharpReference x:TypeArguments="tle:SupplierZoneRates">supplierZoneRates</mca:CSharpReference>
        </OutArgument>
      </tla:GetZoneRates.SupplierZoneRates>
    </tla:GetZoneRates>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
      <Parallel.Variables>
        <Variable x:TypeArguments="vq:BaseQueue(tle:SingleDestinationCodeMatches)" Name="queueSingleDestinationCodeMatch">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(tle:SingleDestinationCodeMatches)">new MemoryQueue&lt;SingleDestinationCodeMatches&gt;()</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="buildRoutesStatus" />
        <Variable x:TypeArguments="vq:BaseQueue(tle:RouteDetailBatch)" Name="queueRouteDetails" />
      </Parallel.Variables>
      <tla:BuildSingleDestinationCodeMatches sap2010:WorkflowViewState.IdRef="BuildSingleDestinationCodeMatches_1">
        <tla:BuildSingleDestinationCodeMatches.CodeMatches>
          <InArgument x:TypeArguments="tle:CodeMatchesByCode">
            <mca:CSharpValue x:TypeArguments="tle:CodeMatchesByCode">codeMatchesByCode</mca:CSharpValue>
          </InArgument>
        </tla:BuildSingleDestinationCodeMatches.CodeMatches>
        <tla:BuildSingleDestinationCodeMatches.OutputQueueForRouting>
          <InOutArgument x:TypeArguments="vq:BaseQueue(tle:SingleDestinationCodeMatches)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(tle:SingleDestinationCodeMatches)">queueSingleDestinationCodeMatch</mca:CSharpReference>
          </InOutArgument>
        </tla:BuildSingleDestinationCodeMatches.OutputQueueForRouting>
        <tla:BuildSingleDestinationCodeMatches.RebuildZoneRates>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">RebuildZoneRates</mca:CSharpValue>
          </InArgument>
        </tla:BuildSingleDestinationCodeMatches.RebuildZoneRates>
        <tla:BuildSingleDestinationCodeMatches.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchStatus</mca:CSharpReference>
          </OutArgument>
        </tla:BuildSingleDestinationCodeMatches.Status>
        <tla:BuildSingleDestinationCodeMatches.SupplierZoneRates>
          <InArgument x:TypeArguments="tle:SupplierZoneRates">
            <mca:CSharpValue x:TypeArguments="tle:SupplierZoneRates">supplierZoneRates</mca:CSharpValue>
          </InArgument>
        </tla:BuildSingleDestinationCodeMatches.SupplierZoneRates>
      </tla:BuildSingleDestinationCodeMatches>
      <tla:BuildRoutes sap2010:WorkflowViewState.IdRef="BuildRoutes_1">
        <tla:BuildRoutes.CustomerZoneRates>
          <InArgument x:TypeArguments="tle:ZoneCustomerRates">
            <mca:CSharpValue x:TypeArguments="tle:ZoneCustomerRates">zoneCustomerRates</mca:CSharpValue>
          </InArgument>
        </tla:BuildRoutes.CustomerZoneRates>
        <tla:BuildRoutes.InputQueue>
          <InArgument x:TypeArguments="vq:BaseQueue(tle:SingleDestinationCodeMatches)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(tle:SingleDestinationCodeMatches)">queueSingleDestinationCodeMatch</mca:CSharpValue>
          </InArgument>
        </tla:BuildRoutes.InputQueue>
        <tla:BuildRoutes.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(tle:RouteDetailBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(tle:RouteDetailBatch)">queueRouteDetails</mca:CSharpReference>
          </InOutArgument>
        </tla:BuildRoutes.OutputQueue>
        <tla:BuildRoutes.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildCodeMatchStatus</mca:CSharpValue>
          </InArgument>
        </tla:BuildRoutes.PreviousActivityStatus>
        <tla:BuildRoutes.RouteRules>
          <InArgument x:TypeArguments="scg:List(tle:RouteRule)">
            <mca:CSharpValue x:TypeArguments="scg:List(tle:RouteRule)">routingRules</mca:CSharpValue>
          </InArgument>
        </tla:BuildRoutes.RouteRules>
        <tla:BuildRoutes.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">buildRoutesStatus</mca:CSharpReference>
          </OutArgument>
        </tla:BuildRoutes.Status>
      </tla:BuildRoutes>
      <tla:UpdateRouteBatches Status="{x:Null}">
        <tla:UpdateRouteBatches.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">buildRoutesStatus</mca:CSharpValue>
          </InArgument>
        </tla:UpdateRouteBatches.PreviousActivityStatus>
        <tla:UpdateRouteBatches.RouteBatches>
          <InArgument x:TypeArguments="vq:BaseQueue(tle:RouteDetailBatch)">
            <mca:CSharpValue x:TypeArguments="vq:BaseQueue(tle:RouteDetailBatch)">queueRouteDetails</mca:CSharpValue>
          </InArgument>
        </tla:UpdateRouteBatches.RouteBatches>
        <tla:UpdateRouteBatches.RoutingDatabaseId>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">RoutingDatabaseId</mca:CSharpValue>
          </InArgument>
        </tla:UpdateRouteBatches.RoutingDatabaseId>
        <sap2010:WorkflowViewState.IdRef>UpdateRouteBatches_1</sap2010:WorkflowViewState.IdRef>
      </tla:UpdateRouteBatches>
    </Parallel>
    <sads:DebugSymbol.Symbol>d1lDOlxURlNcVE9uZVYyXENvZGVcVE9uZVYyXFRPbmUuTENSUHJvY2Vzc1xTdWJQcm9jZXNzZXNcQnVpbGREaWZmZXJlbnRpYWxMQ1JhbmRSb3V0ZXMueGFtbCpJA4wCDgIBAVELUW0CARxWC1ZtAgEPWwtbbQIBAmAFayIDAckDbAV3JQMBrgN4BZIBGwMB7AKTAQWyARgDAZ0CswEFigIQAgEpYwtjZwMB1wNoC2hSAwHKA28Lb1IDAbwDdAt0bAMBrwOAAQuAAW0DAaEDjwELjwFsAwGUA4UBC4UBWQMBhwN7C3tvAwH6AooBC4oBbQMB7QKWAQuWAWUDAd8CrwELrwFvAwHSAqUBC6UBWQMBxQKgAQugAVoDAbgCqgELqgFlAwGrApsBC5sBbwMBngK3AQ23AaYBAgEqvQEH1wEvAwHMAdgBB/cBGQIBa/gBB4kCIAIBOtQBDdQBaQMBjQLKAQ3KAVwDAf0BwAENwAFpAwHtAc8BDc8BdQMB3QHFAQ3FAZgBAwHNAeoBDeoBbQMBvAHgAQ3gAZABAwGsAfQBDfQBcgMBnAHlAQ3lAX4DAYwB7wEN7wFmAgF82wEN2wFpAgFs+wEN+wFqAgFbhQINhQJbAgFLgAINgAJ2AgE7</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetRouteCodesFromRules_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="GetDifferentialRouteRules_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="LoadCodeMatches_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="GetZoneRates_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="BuildSingleDestinationCodeMatches_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="BuildRoutes_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="UpdateRouteBatches_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="794,86" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="816,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TOne.LCRProcess.BuildDifferentialLCRandRoutes_1" sap:VirtualizedContainerService.HintSize="856,538" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>