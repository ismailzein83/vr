<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.Notification.BP.ExecuteNotificationProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:Vanrise.Notification.BP"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:ve="clr-namespace:Vanrise.Entities;assembly=Vanrise.Entities"
 xmlns:vnba="clr-namespace:Vanrise.Notification.BP.Arguments;assembly=Vanrise.Notification.BP.Arguments"
 xmlns:vnba1="clr-namespace:Vanrise.Notification.BP.Activities;assembly=Vanrise.Notification.BP.Activities"
 xmlns:vne="clr-namespace:Vanrise.Notification.Entities;assembly=Vanrise.Notification.Entities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vnba:ExecuteNotificationProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.Notification.BP.ExecuteNotificationProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Notification.BP.Arguments</x:String>
      <x:String>Vanrise.Notification.Entities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="vne:VRNotification" Name="vrNotification" />
      <Variable x:TypeArguments="x:Boolean" Name="anyActionFailed" />
    </Sequence.Variables>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Execute Notification" />
    <vnba1:GetVRNotification sap2010:WorkflowViewState.IdRef="GetVRNotification_2">
      <vnba1:GetVRNotification.VRNotification>
        <OutArgument x:TypeArguments="vne:VRNotification">
          <mca:CSharpReference x:TypeArguments="vne:VRNotification">vrNotification</mca:CSharpReference>
        </OutArgument>
      </vnba1:GetVRNotification.VRNotification>
      <vnba1:GetVRNotification.VRNotificationId>
        <InArgument x:TypeArguments="x:Int64">
          <mca:CSharpValue x:TypeArguments="x:Int64">Input.NotificationId</mca:CSharpValue>
        </InArgument>
      </vnba1:GetVRNotification.VRNotificationId>
    </vnba1:GetVRNotification>
    <vnba1:UpdateNotificationStatus RollbackEventPayload="{x:Null}" DisplayName="UpdateStatusExecuting" sap2010:WorkflowViewState.IdRef="UpdateNotificationStatus_1">
      <vnba1:UpdateNotificationStatus.Status>
        <InArgument x:TypeArguments="vne:VRNotificationStatus">
          <mca:CSharpValue x:TypeArguments="vne:VRNotificationStatus">VRNotificationStatus.Executing</mca:CSharpValue>
        </InArgument>
      </vnba1:UpdateNotificationStatus.Status>
      <vnba1:UpdateNotificationStatus.VRNotificationBPInstanceType>
        <InArgument x:TypeArguments="s:Nullable(vne:VRNotificationBPInstanceType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(vne:VRNotificationBPInstanceType)">VRNotificationBPInstanceType.Execute</mca:CSharpValue>
        </InArgument>
      </vnba1:UpdateNotificationStatus.VRNotificationBPInstanceType>
      <vnba1:UpdateNotificationStatus.VRNotificationId>
        <InArgument x:TypeArguments="x:Int64">
          <mca:CSharpValue x:TypeArguments="x:Int64">vrNotification.VRNotificationId</mca:CSharpValue>
        </InArgument>
      </vnba1:UpdateNotificationStatus.VRNotificationId>
    </vnba1:UpdateNotificationStatus>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">vrNotification.Data!=null &amp;&amp; vrNotification.Data.Actions != null</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <ParallelForEach x:TypeArguments="vne:VRAction" DisplayName="ParallelForEach&lt;VRAction&gt;" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3">
          <ParallelForEach.Values>
            <InArgument x:TypeArguments="scg:IEnumerable(vne:VRAction)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vne:VRAction)">vrNotification.Data.Actions</mca:CSharpValue>
            </InArgument>
          </ParallelForEach.Values>
          <ActivityAction x:TypeArguments="vne:VRAction">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="vne:VRAction" Name="action" />
            </ActivityAction.Argument>
            <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="exception" />
                  </Sequence.Variables>
                  <local:ExecuteActionProcess RollbackEventPayload="{x:Null}" sap2010:WorkflowViewState.IdRef="ExecuteActionProcess_1">
                    <local:ExecuteActionProcess.EventPayLoad>
                      <InArgument x:TypeArguments="vne:IVRActionEventPayload">
                        <mca:CSharpValue x:TypeArguments="vne:IVRActionEventPayload">vrNotification.EventPayload</mca:CSharpValue>
                      </InArgument>
                    </local:ExecuteActionProcess.EventPayLoad>
                    <local:ExecuteActionProcess.VRAlertRuleId>
                      <InArgument x:TypeArguments="s:Nullable(x:Int64)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(x:Int64)">Input.AlertRuleId</mca:CSharpValue>
                      </InArgument>
                    </local:ExecuteActionProcess.VRAlertRuleId>
                    <local:ExecuteActionProcess.VrAction>
                      <InArgument x:TypeArguments="vne:VRAction">
                        <mca:CSharpValue x:TypeArguments="vne:VRAction">action</mca:CSharpValue>
                      </InArgument>
                    </local:ExecuteActionProcess.VrAction>
                  </local:ExecuteActionProcess>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_2">
                        <vbw:WriteTrackingMessage.Message>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">String.Format("Error when executing Action '{0}'. {1}", action.ActionName, exception.ToString())</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Message>
                        <vbw:WriteTrackingMessage.Severity>
                          <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                            <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Warning</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Severity>
                      </vbw:WriteTrackingMessage>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">anyActionFailed</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </ActivityAction>
        </ParallelForEach>
      </If.Then>
    </If>
    <If sap2010:WorkflowViewState.IdRef="If_2">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">!anyActionFailed</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <vnba1:UpdateNotificationStatus RollbackEventPayload="{x:Null}" VRNotificationBPInstanceType="{x:Null}" DisplayName="UpdateStatusExecuted" sap2010:WorkflowViewState.IdRef="UpdateNotificationStatus_2">
          <vnba1:UpdateNotificationStatus.Status>
            <InArgument x:TypeArguments="vne:VRNotificationStatus">
              <mca:CSharpValue x:TypeArguments="vne:VRNotificationStatus">VRNotificationStatus.Executed</mca:CSharpValue>
            </InArgument>
          </vnba1:UpdateNotificationStatus.Status>
          <vnba1:UpdateNotificationStatus.VRNotificationId>
            <InArgument x:TypeArguments="x:Int64">
              <mca:CSharpValue x:TypeArguments="x:Int64">vrNotification.VRNotificationId</mca:CSharpValue>
            </InArgument>
          </vnba1:UpdateNotificationStatus.VRNotificationId>
        </vnba1:UpdateNotificationStatus>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <vnba1:UpdateNotificationStatus RollbackEventPayload="{x:Null}" VRNotificationBPInstanceType="{x:Null}" DisplayName="UpdateStatusError" sap2010:WorkflowViewState.IdRef="UpdateNotificationStatus_3">
            <vnba1:UpdateNotificationStatus.Status>
              <InArgument x:TypeArguments="vne:VRNotificationStatus">
                <mca:CSharpValue x:TypeArguments="vne:VRNotificationStatus">VRNotificationStatus.ExecutionError</mca:CSharpValue>
              </InArgument>
            </vnba1:UpdateNotificationStatus.Status>
            <vnba1:UpdateNotificationStatus.VRNotificationId>
              <InArgument x:TypeArguments="x:Int64">
                <mca:CSharpValue x:TypeArguments="x:Int64">vrNotification.VRNotificationId</mca:CSharpValue>
              </InArgument>
            </vnba1:UpdateNotificationStatus.VRNotificationId>
          </vnba1:UpdateNotificationStatus>
          <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1">
            <TerminateWorkflow.Exception>
              <InArgument x:TypeArguments="s:Exception">
                <mca:CSharpValue x:TypeArguments="s:Exception">new Vanrise.Entities.VRBusinessException("one or more action(s) failed to execute")</mca:CSharpValue>
              </InArgument>
            </TerminateWorkflow.Exception>
          </TerminateWorkflow>
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d0tDOlxURlNcVmFucmlzZVxDb2RlXFZhbnJpc2UuTm90aWZpY2F0aW9uLkJQXEV4ZWN1dGVOb3RpZmljYXRpb25Qcm9jZXNzLnhhbWwmOwPbAQ4CAQFABUBcAgFqQQVMHwIBYU0FXSYCAVReBa0BCgIBH64BBdkBCgIBAkBDQFkCAWtEC0RpAgFmSQtJXAIBYloLWmcCAV1VC1WRAQIBWVALUHcCAVVhC2GSAQIBIGUJqwEbAgEksQELsQFaAgEDtQEJwAEqAgEWwwEJ1wEUAgEHaA9ofQIBUG8NqQEYAgElvQEPvQFrAgEbuAEPuAF6AgEXxAELzwEsAgEN0AEL1gEfAgEIcRGGARwCATyOARWlASACASbMARHMAW0CARLHARHHAYIBAgEO0wER0wGlAQIBCXUThQEwAgE9jwEXmgEyAgEvmwEXpAEgAgEneBl4gwECAUqCARmCAWECAUR9GX1zAgE+lwEdlwGTAQIBNpIBHZIBuwECATCiAUOiAUcCAS6eAR2eAXMCASg=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="572.8,62.4" />
      <sap2010:ViewStateData Id="GetVRNotification_2" sap:VirtualizedContainerService.HintSize="572.8,22.4" />
      <sap2010:ViewStateData Id="UpdateNotificationStatus_1" sap:VirtualizedContainerService.HintSize="572.8,22.4" />
      <sap2010:ViewStateData Id="ExecuteActionProcess_1" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222.4,147.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_2" sap:VirtualizedContainerService.HintSize="243.2,22.4" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="265.6,249.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="403.2,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="417.6,378.4" />
      <sap2010:ViewStateData Id="ParallelForEach`1_3" sap:VirtualizedContainerService.HintSize="448,529.6" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="572.8,681.6" />
      <sap2010:ViewStateData Id="UpdateNotificationStatus_2" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="UpdateNotificationStatus_3" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="222.4,209.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="572.8,361.6" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="595.2,1435.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.Notification.BP.ExecuteNotificationProcess_1" sap:VirtualizedContainerService.HintSize="635.2,1515.2" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>