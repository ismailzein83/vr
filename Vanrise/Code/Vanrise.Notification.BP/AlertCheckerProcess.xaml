<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.Notification.BP.AlertCheckerProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:vnba="clr-namespace:Vanrise.Notification.BP.Arguments;assembly=Vanrise.Notification.BP.Arguments"
 xmlns:vnba1="clr-namespace:Vanrise.Notification.BP.Activities;assembly=Vanrise.Notification.BP.Activities"
 xmlns:vne="clr-namespace:Vanrise.Notification.Entities;assembly=Vanrise.Notification.Entities"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vnba:AlertCheckerProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.Notification.BP.AlertCheckerProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Notification.BP.Arguments</x:String>
      <x:String>Vanrise.Notification.Entities</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.Queueing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.Notification.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="hasAlertRules" />
    </Sequence.Variables>
    <vnba1:HasAlertRulesByType sap2010:WorkflowViewState.IdRef="HasAlertRulesByType_1">
      <vnba1:HasAlertRulesByType.AlertRuleTypeId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">Input.VRAlertRuleTypeId</mca:CSharpValue>
        </InArgument>
      </vnba1:HasAlertRulesByType.AlertRuleTypeId>
      <vnba1:HasAlertRulesByType.HasAlertRules>
        <OutArgument x:TypeArguments="x:Boolean">
          <mca:CSharpReference x:TypeArguments="x:Boolean">hasAlertRules</mca:CSharpReference>
        </OutArgument>
      </vnba1:HasAlertRulesByType.HasAlertRules>
    </vnba1:HasAlertRulesByType>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">hasAlertRules</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="vne:VRAlertRuleType" Name="alertRuleType" />
            <Variable x:TypeArguments="vne:VRAlertRuleCheckerOutput" Name="checkerOutput" />
            <Variable x:TypeArguments="vq:BaseQueue(vne:VRAlertRuleMatchedEvent)" Name="queueRulesMatchedEvents" />
          </Sequence.Variables>
          <vnba1:GetAlertRuleType sap2010:WorkflowViewState.IdRef="GetAlertRuleType_1">
            <vnba1:GetAlertRuleType.AlertRuleType>
              <OutArgument x:TypeArguments="vne:VRAlertRuleType">
                <mca:CSharpReference x:TypeArguments="vne:VRAlertRuleType">alertRuleType</mca:CSharpReference>
              </OutArgument>
            </vnba1:GetAlertRuleType.AlertRuleType>
            <vnba1:GetAlertRuleType.AlertRuleTypeId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">Input.VRAlertRuleTypeId</mca:CSharpValue>
              </InArgument>
            </vnba1:GetAlertRuleType.AlertRuleTypeId>
          </vnba1:GetAlertRuleType>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="vq:BaseQueue(vne:VRAlertRuleMatchedEvent)">
                <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vne:VRAlertRuleMatchedEvent)">queueRulesMatchedEvents</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="vq:BaseQueue(vne:VRAlertRuleMatchedEvent)">
                <mca:CSharpValue x:TypeArguments="vq:BaseQueue(vne:VRAlertRuleMatchedEvent)">new MemoryQueue&lt;VRAlertRuleMatchedEvent&gt;()</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
            <Parallel.Variables>
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="executeCheckerStatus" />
            </Parallel.Variables>
            <vbw:ExecuteChildActivity x:TypeArguments="vne:VRAlertRuleCheckerInput, vne:VRAlertRuleCheckerOutput" sap2010:WorkflowViewState.IdRef="ExecuteChildActivity`2_1">
              <vbw:ExecuteChildActivity.ChildFQTN>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">alertRuleType.Settings.CheckerBPActivityFQTN</mca:CSharpValue>
                </InArgument>
              </vbw:ExecuteChildActivity.ChildFQTN>
              <vbw:ExecuteChildActivity.ChildInputArgument>
                <InArgument x:TypeArguments="vne:VRAlertRuleCheckerInput">
                  <mca:CSharpValue x:TypeArguments="vne:VRAlertRuleCheckerInput" xml:space="preserve">new VRAlertRuleCheckerInput
            {
                RuleTypeId = Input.VRAlertRuleTypeId,
                MatchedEventsOutputQueue = queueRulesMatchedEvents
            }</mca:CSharpValue>
                </InArgument>
              </vbw:ExecuteChildActivity.ChildInputArgument>
              <vbw:ExecuteChildActivity.ChildOutputArgument>
                <OutArgument x:TypeArguments="vne:VRAlertRuleCheckerOutput">
                  <mca:CSharpReference x:TypeArguments="vne:VRAlertRuleCheckerOutput">checkerOutput</mca:CSharpReference>
                </OutArgument>
              </vbw:ExecuteChildActivity.ChildOutputArgument>
              <vbw:ExecuteChildActivity.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">executeCheckerStatus</mca:CSharpReference>
                </OutArgument>
              </vbw:ExecuteChildActivity.Status>
            </vbw:ExecuteChildActivity>
            <vnba1:ProcessRulesMatchedEvents Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ProcessRulesMatchedEvents_1">
              <vnba1:ProcessRulesMatchedEvents.AlertRuleTypeId>
                <InArgument x:TypeArguments="s:Guid">
                  <mca:CSharpValue x:TypeArguments="s:Guid">Input.VRAlertRuleTypeId</mca:CSharpValue>
                </InArgument>
              </vnba1:ProcessRulesMatchedEvents.AlertRuleTypeId>
              <vnba1:ProcessRulesMatchedEvents.InputQueue>
                <InArgument x:TypeArguments="vq:BaseQueue(vne:VRAlertRuleMatchedEvent)">
                  <mca:CSharpValue x:TypeArguments="vq:BaseQueue(vne:VRAlertRuleMatchedEvent)">queueRulesMatchedEvents</mca:CSharpValue>
                </InArgument>
              </vnba1:ProcessRulesMatchedEvents.InputQueue>
              <vnba1:ProcessRulesMatchedEvents.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">executeCheckerStatus</mca:CSharpValue>
                </InArgument>
              </vnba1:ProcessRulesMatchedEvents.PreviousActivityStatus>
            </vnba1:ProcessRulesMatchedEvents>
          </Parallel>
          <vnba1:StopExpiredAlertExecutions sap2010:WorkflowViewState.IdRef="StopExpiredAlertExecutions_1" />
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d0RDOlxURlNcVmFucmlzZVxDb2RlXFZhbnJpc2UuTm90aWZpY2F0aW9uLkJQXEFsZXJ0Q2hlY2tlclByb2Nlc3MueGFtbBg8A6YBDgIBAUAFSyECAVZMBaQBCgIBAkgLSF8CAVpDC0NeAgFXTwtPVwIBA1MJogEUAgEGWQtkJAIBSWULcBQCATxxC6ABFgIBCKEBC6EBbgIBB1wRXG8CAVBhEWFkAgFKbRFtoAECAUNoEWiPAQIBPXUNjgEoAgEfjwENnwEvAgEJeBN4fQIBNX0TgQEgAgEuiwETiwF7AgEnhgEThgF6AgEgnAETnAFzAgEYlwETlwGJAQIBEZIBE5IBZgIBCg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="HasAlertRulesByType_1" sap:VirtualizedContainerService.HintSize="701,22" />
      <sap2010:ViewStateData Id="GetAlertRuleType_1" sap:VirtualizedContainerService.HintSize="554,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="554,62" />
      <sap2010:ViewStateData Id="ExecuteChildActivity`2_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ProcessRulesMatchedEvents_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="554,86" />
      <sap2010:ViewStateData Id="StopExpiredAlertExecutions_1" sap:VirtualizedContainerService.HintSize="554,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="576,436">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="701,586" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="723,772">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.Notification.BP.AlertCheckerProcess_1" sap:VirtualizedContainerService.HintSize="763,852" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>