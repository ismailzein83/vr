<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.AccountBalance.BP.AccountBalanceUpdateProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vab="clr-namespace:Vanrise.AccountBalance.Business;assembly=Vanrise.AccountBalance.Business"
 xmlns:vaba="clr-namespace:Vanrise.AccountBalance.BP.Arguments;assembly=Vanrise.AccountBalance.BP.Arguments"
 xmlns:vaba1="clr-namespace:Vanrise.AccountBalance.BP.Activities;assembly=Vanrise.AccountBalance.BP.Activities"
 xmlns:vae="clr-namespace:Vanrise.AccountBalance.Entities;assembly=Vanrise.AccountBalance.Entities"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vaba:AccountBalanceUpdateProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.AccountBalance.BP.AccountBalanceUpdateProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Queueing</x:String>
      <x:String>Vanrise.AccountBalance.BP.Arguments</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.AccountBalance.Entities</x:String>
      <x:String>Vanrise.AccountBalance.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.AccountBalance.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.AccountBalance.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.AccountBalance.Business</AssemblyReference>
      <AssemblyReference>Vanrise.AccountBalance.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.AccountBalance.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="nextClosingDate" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="loadBillingTransactionsStatus" />
      <Variable x:TypeArguments="vq:BaseQueue(vae:BalanceUsageQueue)" Name="outputQueuePendingUsageUpdates" />
      <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="loadingPendingUsageUpdateStatus" />
      <Variable x:TypeArguments="vab:AccountBalanceUpdateHandler" Name="accountBalanceUpdateHandler" />
    </Sequence.Variables>
    <vaba1:GetNextBalanceClosingDate sap2010:WorkflowViewState.IdRef="GetNextBalanceClosingDate_1">
      <vaba1:GetNextBalanceClosingDate.AccountTypeId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">Input.AccountTypeId</mca:CSharpValue>
        </InArgument>
      </vaba1:GetNextBalanceClosingDate.AccountTypeId>
      <vaba1:GetNextBalanceClosingDate.NextClosingDate>
        <OutArgument x:TypeArguments="s:DateTime">
          <mca:CSharpReference x:TypeArguments="s:DateTime">nextClosingDate</mca:CSharpReference>
        </OutArgument>
      </vaba1:GetNextBalanceClosingDate.NextClosingDate>
    </vaba1:GetNextBalanceClosingDate>
    <vaba1:LoadAccountBalanceUpdateHandler sap2010:WorkflowViewState.IdRef="LoadAccountBalanceUpdateHandler_1">
      <vaba1:LoadAccountBalanceUpdateHandler.AccountTypeId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">Input.AccountTypeId</mca:CSharpValue>
        </InArgument>
      </vaba1:LoadAccountBalanceUpdateHandler.AccountTypeId>
      <vaba1:LoadAccountBalanceUpdateHandler.Handler>
        <OutArgument x:TypeArguments="vab:AccountBalanceUpdateHandler">
          <mca:CSharpReference x:TypeArguments="vab:AccountBalanceUpdateHandler">accountBalanceUpdateHandler</mca:CSharpReference>
        </OutArgument>
      </vaba1:LoadAccountBalanceUpdateHandler.Handler>
    </vaba1:LoadAccountBalanceUpdateHandler>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_2">
      <Parallel.Variables>
        <Variable x:TypeArguments="vq:BaseQueue(vae:BillingTransactionBatch)" Name="outputQueueNewBillingTransactions" />
      </Parallel.Variables>
      <vaba1:LoadNewBillingTransactions sap2010:WorkflowViewState.IdRef="LoadNewBillingTransactions_1">
        <vaba1:LoadNewBillingTransactions.AccountTypeId>
          <InArgument x:TypeArguments="s:Guid">
            <mca:CSharpValue x:TypeArguments="s:Guid">Input.AccountTypeId</mca:CSharpValue>
          </InArgument>
        </vaba1:LoadNewBillingTransactions.AccountTypeId>
        <vaba1:LoadNewBillingTransactions.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(vae:BillingTransactionBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vae:BillingTransactionBatch)">outputQueueNewBillingTransactions</mca:CSharpReference>
          </InOutArgument>
        </vaba1:LoadNewBillingTransactions.OutputQueue>
        <vaba1:LoadNewBillingTransactions.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">loadBillingTransactionsStatus</mca:CSharpReference>
          </OutArgument>
        </vaba1:LoadNewBillingTransactions.Status>
      </vaba1:LoadNewBillingTransactions>
      <vaba1:ProcessNewBillingTransactions Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ProcessNewBillingTransactions_1">
        <vaba1:ProcessNewBillingTransactions.AcountBalanceUpdateHandler>
          <InArgument x:TypeArguments="vab:AccountBalanceUpdateHandler">
            <mca:CSharpValue x:TypeArguments="vab:AccountBalanceUpdateHandler">accountBalanceUpdateHandler</mca:CSharpValue>
          </InArgument>
        </vaba1:ProcessNewBillingTransactions.AcountBalanceUpdateHandler>
        <vaba1:ProcessNewBillingTransactions.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(vae:BillingTransactionBatch)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vae:BillingTransactionBatch)">outputQueueNewBillingTransactions</mca:CSharpReference>
          </InOutArgument>
        </vaba1:ProcessNewBillingTransactions.InputQueue>
        <vaba1:ProcessNewBillingTransactions.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">loadBillingTransactionsStatus</mca:CSharpValue>
          </InArgument>
        </vaba1:ProcessNewBillingTransactions.PreviousActivityStatus>
      </vaba1:ProcessNewBillingTransactions>
    </Parallel>
    <Parallel sap2010:WorkflowViewState.IdRef="Parallel_3">
      <vaba1:LoadPendingUsageUpdates sap2010:WorkflowViewState.IdRef="LoadPendingUsageUpdates_1">
        <vaba1:LoadPendingUsageUpdates.AccountTypeId>
          <InArgument x:TypeArguments="s:Guid">
            <mca:CSharpValue x:TypeArguments="s:Guid">Input.AccountTypeId</mca:CSharpValue>
          </InArgument>
        </vaba1:LoadPendingUsageUpdates.AccountTypeId>
        <vaba1:LoadPendingUsageUpdates.OutputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(vae:BalanceUsageQueue)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vae:BalanceUsageQueue)">outputQueuePendingUsageUpdates</mca:CSharpReference>
          </InOutArgument>
        </vaba1:LoadPendingUsageUpdates.OutputQueue>
        <vaba1:LoadPendingUsageUpdates.Status>
          <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">loadingPendingUsageUpdateStatus</mca:CSharpReference>
          </OutArgument>
        </vaba1:LoadPendingUsageUpdates.Status>
      </vaba1:LoadPendingUsageUpdates>
      <vaba1:ProcessPendingUsageUpdates Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ProcessPendingUsageUpdates_1">
        <vaba1:ProcessPendingUsageUpdates.AcountBalanceUpdateHandler>
          <InArgument x:TypeArguments="vab:AccountBalanceUpdateHandler">
            <mca:CSharpValue x:TypeArguments="vab:AccountBalanceUpdateHandler">accountBalanceUpdateHandler</mca:CSharpValue>
          </InArgument>
        </vaba1:ProcessPendingUsageUpdates.AcountBalanceUpdateHandler>
        <vaba1:ProcessPendingUsageUpdates.InputQueue>
          <InOutArgument x:TypeArguments="vq:BaseQueue(vae:BalanceUsageQueue)">
            <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vae:BalanceUsageQueue)">outputQueuePendingUsageUpdates</mca:CSharpReference>
          </InOutArgument>
        </vaba1:ProcessPendingUsageUpdates.InputQueue>
        <vaba1:ProcessPendingUsageUpdates.PreviousActivityStatus>
          <InArgument x:TypeArguments="vb:AsyncActivityStatus">
            <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">loadingPendingUsageUpdateStatus</mca:CSharpValue>
          </InArgument>
        </vaba1:ProcessPendingUsageUpdates.PreviousActivityStatus>
      </vaba1:ProcessPendingUsageUpdates>
    </Parallel>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">nextClosingDate &lt; DateTime.Now</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <vaba1:CreateBalanceClosingPeriod sap2010:WorkflowViewState.IdRef="CreateBalanceClosingPeriod_1">
            <vaba1:CreateBalanceClosingPeriod.AccountTypeId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">Input.AccountTypeId</mca:CSharpValue>
              </InArgument>
            </vaba1:CreateBalanceClosingPeriod.AccountTypeId>
            <vaba1:CreateBalanceClosingPeriod.BalanceClosingPeriod>
              <InArgument x:TypeArguments="s:DateTime">
                <mca:CSharpValue x:TypeArguments="s:DateTime">nextClosingDate</mca:CSharpValue>
              </InArgument>
            </vaba1:CreateBalanceClosingPeriod.BalanceClosingPeriod>
          </vaba1:CreateBalanceClosingPeriod>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d05DOlxURlNcVmFucmlzZVxDb2RlXFZhbnJpc2UuQWNjb3VudEJhbGFuY2UuQlBcQWNjb3VudEJhbGFuY2VVcGRhdGVQcm9jZXNzLnhhbWwfPgPBAQ4CAQFGBVEnAwGJAVIFXS0CAXpeBYQBEAIBR4UBBagBEAIBGqkBBb8BCgIBAkkLSVoDAZEBTgtOYgMBigFaC1qDAQMBggFVC1VaAgF7YgdyKgIBYXMHgwEtAgFIhgEHlgEnAgExlwEHpwEqAgEbrAELrAFrAgEDsAEJvQEUAgEKZQ1lXAIBcm8Nb34CAWpqDWqVAQIBYoABDYABdgIBWXsNe5UBAgFRdg12fQIBSYkBDYkBXAIBQJMBDZMBgAECATmOAQ2OAYwBAgEypAENpAF4AgEqnwENnwGMAQIBI5oBDZoBfQIBHLEBC7wBLgIBC7QBEbQBYAIBE7kBEbkBYAIBDA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetNextBalanceClosingDate_1" sap:VirtualizedContainerService.HintSize="554,22" />
      <sap2010:ViewStateData Id="LoadAccountBalanceUpdateHandler_1" sap:VirtualizedContainerService.HintSize="554,22" />
      <sap2010:ViewStateData Id="LoadNewBillingTransactions_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ProcessNewBillingTransactions_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="554,86" />
      <sap2010:ViewStateData Id="LoadPendingUsageUpdates_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ProcessPendingUsageUpdates_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_3" sap:VirtualizedContainerService.HintSize="554,86" />
      <sap2010:ViewStateData Id="CreateBalanceClosingPeriod_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="554,296" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="576,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.AccountBalance.BP.AccountBalanceUpdateProcess_1" sap:VirtualizedContainerService.HintSize="616,876" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>