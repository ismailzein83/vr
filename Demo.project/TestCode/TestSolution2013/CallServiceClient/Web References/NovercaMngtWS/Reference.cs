//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CallServiceClient.NovercaMngtWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ManagementBinding", Namespace="http://api.management.acoteltlc.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(modelGeneric))]
    public partial class ManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback cancelDeactivateLineSchedOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeCustomerPricePlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeCustomerPricePlanBagOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback creditTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback creditTransferFromDeactivatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback deactivateLineSchedOperationCompleted;
        
        private System.Threading.SendOrPostCallback forcePromotionRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActivablePricePlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActivablePromoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActivablePromoCRMOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPromotionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllStatusSimOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBlacklistInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCRMUnifiedInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerPromotionBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDeactivateLineSchedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDeactivatedUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHistoryMNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHistorySIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHistoryUNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoMNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoSAIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoSimOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoSimByICCIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoSimByMSISDNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoUNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMainBagCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMainBagCreditFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMnpStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMsisdnPreRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMsisdnPromoBagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPinVoiceMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPrincipalCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRechargesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSIMResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSIMSoftwaresOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSaidListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSimByTaxCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserPreRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserPromoBagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserPromoBagsByICCIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback manageReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback manageSCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeAuxMoneyBagOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeAuxMoneyBagIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeManualRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeUserFastOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback refundAuxMoneyBagOperationCompleted;
        
        private System.Threading.SendOrPostCallback removePromotionBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMsisdnPreRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPinVoiceMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUserPreRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback unbindTMPmsisdnOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribePromoOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribePromotionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePersonalDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ManagementService() {
            this.Url = global::CallServiceClient.Properties.Settings.Default.CallServiceClient_NovercaMngtWS_ManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event cancelDeactivateLineSchedCompletedEventHandler cancelDeactivateLineSchedCompleted;
        
        /// <remarks/>
        public event changeCustomerCompletedEventHandler changeCustomerCompleted;
        
        /// <remarks/>
        public event changeCustomerPricePlanCompletedEventHandler changeCustomerPricePlanCompleted;
        
        /// <remarks/>
        public event changeCustomerPricePlanBagCompletedEventHandler changeCustomerPricePlanBagCompleted;
        
        /// <remarks/>
        public event createSaidCompletedEventHandler createSaidCompleted;
        
        /// <remarks/>
        public event creditTransferCompletedEventHandler creditTransferCompleted;
        
        /// <remarks/>
        public event creditTransferFromDeactivatedCompletedEventHandler creditTransferFromDeactivatedCompleted;
        
        /// <remarks/>
        public event deactivateLineSchedCompletedEventHandler deactivateLineSchedCompleted;
        
        /// <remarks/>
        public event forcePromotionRenewalCompletedEventHandler forcePromotionRenewalCompleted;
        
        /// <remarks/>
        public event getActivablePricePlanCompletedEventHandler getActivablePricePlanCompleted;
        
        /// <remarks/>
        public event getActivablePromoCompletedEventHandler getActivablePromoCompleted;
        
        /// <remarks/>
        public event getActivablePromoCRMCompletedEventHandler getActivablePromoCRMCompleted;
        
        /// <remarks/>
        public event getAllPromotionsCompletedEventHandler getAllPromotionsCompleted;
        
        /// <remarks/>
        public event getAllStatusSimCompletedEventHandler getAllStatusSimCompleted;
        
        /// <remarks/>
        public event getBlacklistInfoCompletedEventHandler getBlacklistInfoCompleted;
        
        /// <remarks/>
        public event getCRMUnifiedInfoCompletedEventHandler getCRMUnifiedInfoCompleted;
        
        /// <remarks/>
        public event getCustomerPromotionBookingCompletedEventHandler getCustomerPromotionBookingCompleted;
        
        /// <remarks/>
        public event getDeactivateLineSchedCompletedEventHandler getDeactivateLineSchedCompleted;
        
        /// <remarks/>
        public event getDeactivatedUserProfileCompletedEventHandler getDeactivatedUserProfileCompleted;
        
        /// <remarks/>
        public event getHistoryMNPCompletedEventHandler getHistoryMNPCompleted;
        
        /// <remarks/>
        public event getHistorySIMCompletedEventHandler getHistorySIMCompleted;
        
        /// <remarks/>
        public event getHistoryUNPCompletedEventHandler getHistoryUNPCompleted;
        
        /// <remarks/>
        public event getInfoMNPCompletedEventHandler getInfoMNPCompleted;
        
        /// <remarks/>
        public event getInfoSAIDCompletedEventHandler getInfoSAIDCompleted;
        
        /// <remarks/>
        public event getInfoSimCompletedEventHandler getInfoSimCompleted;
        
        /// <remarks/>
        public event getInfoSimByICCIDCompletedEventHandler getInfoSimByICCIDCompleted;
        
        /// <remarks/>
        public event getInfoSimByMSISDNCompletedEventHandler getInfoSimByMSISDNCompleted;
        
        /// <remarks/>
        public event getInfoUNPCompletedEventHandler getInfoUNPCompleted;
        
        /// <remarks/>
        public event getMainBagCreditCompletedEventHandler getMainBagCreditCompleted;
        
        /// <remarks/>
        public event getMainBagCreditFullCompletedEventHandler getMainBagCreditFullCompleted;
        
        /// <remarks/>
        public event getMnpStatusCompletedEventHandler getMnpStatusCompleted;
        
        /// <remarks/>
        public event getMsisdnPreRatingCompletedEventHandler getMsisdnPreRatingCompleted;
        
        /// <remarks/>
        public event getMsisdnPromoBagsCompletedEventHandler getMsisdnPromoBagsCompleted;
        
        /// <remarks/>
        public event getPinVoiceMailCompletedEventHandler getPinVoiceMailCompleted;
        
        /// <remarks/>
        public event getPrincipalCreditCompletedEventHandler getPrincipalCreditCompleted;
        
        /// <remarks/>
        public event getRechargesListCompletedEventHandler getRechargesListCompleted;
        
        /// <remarks/>
        public event getReferenceCompletedEventHandler getReferenceCompleted;
        
        /// <remarks/>
        public event getSIMResearchCompletedEventHandler getSIMResearchCompleted;
        
        /// <remarks/>
        public event getSIMSoftwaresCompletedEventHandler getSIMSoftwaresCompleted;
        
        /// <remarks/>
        public event getSaidListCompletedEventHandler getSaidListCompleted;
        
        /// <remarks/>
        public event getSimByTaxCodeCompletedEventHandler getSimByTaxCodeCompleted;
        
        /// <remarks/>
        public event getStatusBidCompletedEventHandler getStatusBidCompleted;
        
        /// <remarks/>
        public event getUserPreRatingCompletedEventHandler getUserPreRatingCompleted;
        
        /// <remarks/>
        public event getUserPromoBagsCompletedEventHandler getUserPromoBagsCompleted;
        
        /// <remarks/>
        public event getUserPromoBagsByICCIDCompletedEventHandler getUserPromoBagsByICCIDCompleted;
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event manageReferenceCompletedEventHandler manageReferenceCompleted;
        
        /// <remarks/>
        public event manageSCECompletedEventHandler manageSCECompleted;
        
        /// <remarks/>
        public event rechargeAuxMoneyBagCompletedEventHandler rechargeAuxMoneyBagCompleted;
        
        /// <remarks/>
        public event rechargeAuxMoneyBagIdCompletedEventHandler rechargeAuxMoneyBagIdCompleted;
        
        /// <remarks/>
        public event rechargeCancelCompletedEventHandler rechargeCancelCompleted;
        
        /// <remarks/>
        public event rechargeManualRefundCompletedEventHandler rechargeManualRefundCompleted;
        
        /// <remarks/>
        public event rechargeUserCompletedEventHandler rechargeUserCompleted;
        
        /// <remarks/>
        public event rechargeUserFastCompletedEventHandler rechargeUserFastCompleted;
        
        /// <remarks/>
        public event rechargeUserIdCompletedEventHandler rechargeUserIdCompleted;
        
        /// <remarks/>
        public event refundAuxMoneyBagCompletedEventHandler refundAuxMoneyBagCompleted;
        
        /// <remarks/>
        public event removePromotionBookingCompletedEventHandler removePromotionBookingCompleted;
        
        /// <remarks/>
        public event setMsisdnPreRatingCompletedEventHandler setMsisdnPreRatingCompleted;
        
        /// <remarks/>
        public event setPinVoiceMailCompletedEventHandler setPinVoiceMailCompleted;
        
        /// <remarks/>
        public event setUserPreRatingCompletedEventHandler setUserPreRatingCompleted;
        
        /// <remarks/>
        public event unbindTMPmsisdnCompletedEventHandler unbindTMPmsisdnCompleted;
        
        /// <remarks/>
        public event unsubscribePromoCompletedEventHandler unsubscribePromoCompleted;
        
        /// <remarks/>
        public event unsubscribePromotionCompletedEventHandler unsubscribePromotionCompleted;
        
        /// <remarks/>
        public event updatePersonalDataCompletedEventHandler updatePersonalDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer cancelDeactivateLineSched(string sourceMsisdn) {
            object[] results = this.Invoke("cancelDeactivateLineSched", new object[] {
                        sourceMsisdn});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void cancelDeactivateLineSchedAsync(string sourceMsisdn) {
            this.cancelDeactivateLineSchedAsync(sourceMsisdn, null);
        }
        
        /// <remarks/>
        public void cancelDeactivateLineSchedAsync(string sourceMsisdn, object userState) {
            if ((this.cancelDeactivateLineSchedOperationCompleted == null)) {
                this.cancelDeactivateLineSchedOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelDeactivateLineSchedOperationCompleted);
            }
            this.InvokeAsync("cancelDeactivateLineSched", new object[] {
                        sourceMsisdn}, this.cancelDeactivateLineSchedOperationCompleted, userState);
        }
        
        private void OncancelDeactivateLineSchedOperationCompleted(object arg) {
            if ((this.cancelDeactivateLineSchedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelDeactivateLineSchedCompleted(this, new cancelDeactivateLineSchedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer changeCustomer(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId, int flagPay, bool allowPromotionBooking) {
            object[] results = this.Invoke("changeCustomer", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        dataSourceId,
                        realSourceId,
                        flagPay,
                        allowPromotionBooking});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void changeCustomerAsync(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId, int flagPay, bool allowPromotionBooking) {
            this.changeCustomerAsync(msisdn, servicePlanId, token, dataSourceId, realSourceId, flagPay, allowPromotionBooking, null);
        }
        
        /// <remarks/>
        public void changeCustomerAsync(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId, int flagPay, bool allowPromotionBooking, object userState) {
            if ((this.changeCustomerOperationCompleted == null)) {
                this.changeCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeCustomerOperationCompleted);
            }
            this.InvokeAsync("changeCustomer", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        dataSourceId,
                        realSourceId,
                        flagPay,
                        allowPromotionBooking}, this.changeCustomerOperationCompleted, userState);
        }
        
        private void OnchangeCustomerOperationCompleted(object arg) {
            if ((this.changeCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeCustomerCompleted(this, new changeCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer changeCustomerPricePlan(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("changeCustomerPricePlan", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void changeCustomerPricePlanAsync(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId) {
            this.changeCustomerPricePlanAsync(msisdn, servicePlanId, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void changeCustomerPricePlanAsync(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.changeCustomerPricePlanOperationCompleted == null)) {
                this.changeCustomerPricePlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeCustomerPricePlanOperationCompleted);
            }
            this.InvokeAsync("changeCustomerPricePlan", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        dataSourceId,
                        realSourceId}, this.changeCustomerPricePlanOperationCompleted, userState);
        }
        
        private void OnchangeCustomerPricePlanOperationCompleted(object arg) {
            if ((this.changeCustomerPricePlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeCustomerPricePlanCompleted(this, new changeCustomerPricePlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer changeCustomerPricePlanBag(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId, int flagPay) {
            object[] results = this.Invoke("changeCustomerPricePlanBag", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        dataSourceId,
                        realSourceId,
                        flagPay});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void changeCustomerPricePlanBagAsync(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId, int flagPay) {
            this.changeCustomerPricePlanBagAsync(msisdn, servicePlanId, token, dataSourceId, realSourceId, flagPay, null);
        }
        
        /// <remarks/>
        public void changeCustomerPricePlanBagAsync(string msisdn, int servicePlanId, string token, int dataSourceId, int realSourceId, int flagPay, object userState) {
            if ((this.changeCustomerPricePlanBagOperationCompleted == null)) {
                this.changeCustomerPricePlanBagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeCustomerPricePlanBagOperationCompleted);
            }
            this.InvokeAsync("changeCustomerPricePlanBag", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        dataSourceId,
                        realSourceId,
                        flagPay}, this.changeCustomerPricePlanBagOperationCompleted, userState);
        }
        
        private void OnchangeCustomerPricePlanBagOperationCompleted(object arg) {
            if ((this.changeCustomerPricePlanBagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeCustomerPricePlanBagCompleted(this, new changeCustomerPricePlanBagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long createSaid(string promocode, string promoname, string promoinstance, int visible) {
            object[] results = this.Invoke("createSaid", new object[] {
                        promocode,
                        promoname,
                        promoinstance,
                        visible});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void createSaidAsync(string promocode, string promoname, string promoinstance, int visible) {
            this.createSaidAsync(promocode, promoname, promoinstance, visible, null);
        }
        
        /// <remarks/>
        public void createSaidAsync(string promocode, string promoname, string promoinstance, int visible, object userState) {
            if ((this.createSaidOperationCompleted == null)) {
                this.createSaidOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSaidOperationCompleted);
            }
            this.InvokeAsync("createSaid", new object[] {
                        promocode,
                        promoname,
                        promoinstance,
                        visible}, this.createSaidOperationCompleted, userState);
        }
        
        private void OncreateSaidOperationCompleted(object arg) {
            if ((this.createSaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSaidCompleted(this, new createSaidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer creditTransfer(string sourceMsisdn, string destinationMsisdn, double amount, int noCharging, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("creditTransfer", new object[] {
                        sourceMsisdn,
                        destinationMsisdn,
                        amount,
                        noCharging,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void creditTransferAsync(string sourceMsisdn, string destinationMsisdn, double amount, int noCharging, string token, int dataSourceId, int realSourceId) {
            this.creditTransferAsync(sourceMsisdn, destinationMsisdn, amount, noCharging, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void creditTransferAsync(string sourceMsisdn, string destinationMsisdn, double amount, int noCharging, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.creditTransferOperationCompleted == null)) {
                this.creditTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreditTransferOperationCompleted);
            }
            this.InvokeAsync("creditTransfer", new object[] {
                        sourceMsisdn,
                        destinationMsisdn,
                        amount,
                        noCharging,
                        token,
                        dataSourceId,
                        realSourceId}, this.creditTransferOperationCompleted, userState);
        }
        
        private void OncreditTransferOperationCompleted(object arg) {
            if ((this.creditTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.creditTransferCompleted(this, new creditTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer creditTransferFromDeactivated(string sourceMsisdn, string destinationMsisdn, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("creditTransferFromDeactivated", new object[] {
                        sourceMsisdn,
                        destinationMsisdn,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void creditTransferFromDeactivatedAsync(string sourceMsisdn, string destinationMsisdn, string token, int dataSourceId, int realSourceId) {
            this.creditTransferFromDeactivatedAsync(sourceMsisdn, destinationMsisdn, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void creditTransferFromDeactivatedAsync(string sourceMsisdn, string destinationMsisdn, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.creditTransferFromDeactivatedOperationCompleted == null)) {
                this.creditTransferFromDeactivatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreditTransferFromDeactivatedOperationCompleted);
            }
            this.InvokeAsync("creditTransferFromDeactivated", new object[] {
                        sourceMsisdn,
                        destinationMsisdn,
                        token,
                        dataSourceId,
                        realSourceId}, this.creditTransferFromDeactivatedOperationCompleted, userState);
        }
        
        private void OncreditTransferFromDeactivatedOperationCompleted(object arg) {
            if ((this.creditTransferFromDeactivatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.creditTransferFromDeactivatedCompleted(this, new creditTransferFromDeactivatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer deactivateLineSched(string sourceMsisdn, string destinationMsisdn, string schedDate, int charge, string description, string token, int dataSourceId) {
            object[] results = this.Invoke("deactivateLineSched", new object[] {
                        sourceMsisdn,
                        destinationMsisdn,
                        schedDate,
                        charge,
                        description,
                        token,
                        dataSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void deactivateLineSchedAsync(string sourceMsisdn, string destinationMsisdn, string schedDate, int charge, string description, string token, int dataSourceId) {
            this.deactivateLineSchedAsync(sourceMsisdn, destinationMsisdn, schedDate, charge, description, token, dataSourceId, null);
        }
        
        /// <remarks/>
        public void deactivateLineSchedAsync(string sourceMsisdn, string destinationMsisdn, string schedDate, int charge, string description, string token, int dataSourceId, object userState) {
            if ((this.deactivateLineSchedOperationCompleted == null)) {
                this.deactivateLineSchedOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeactivateLineSchedOperationCompleted);
            }
            this.InvokeAsync("deactivateLineSched", new object[] {
                        sourceMsisdn,
                        destinationMsisdn,
                        schedDate,
                        charge,
                        description,
                        token,
                        dataSourceId}, this.deactivateLineSchedOperationCompleted, userState);
        }
        
        private void OndeactivateLineSchedOperationCompleted(object arg) {
            if ((this.deactivateLineSchedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deactivateLineSchedCompleted(this, new deactivateLineSchedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer forcePromotionRenewal(string msisdn, string promotionName, long forceRating, string value) {
            object[] results = this.Invoke("forcePromotionRenewal", new object[] {
                        msisdn,
                        promotionName,
                        forceRating,
                        value});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void forcePromotionRenewalAsync(string msisdn, string promotionName, long forceRating, string value) {
            this.forcePromotionRenewalAsync(msisdn, promotionName, forceRating, value, null);
        }
        
        /// <remarks/>
        public void forcePromotionRenewalAsync(string msisdn, string promotionName, long forceRating, string value, object userState) {
            if ((this.forcePromotionRenewalOperationCompleted == null)) {
                this.forcePromotionRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforcePromotionRenewalOperationCompleted);
            }
            this.InvokeAsync("forcePromotionRenewal", new object[] {
                        msisdn,
                        promotionName,
                        forceRating,
                        value}, this.forcePromotionRenewalOperationCompleted, userState);
        }
        
        private void OnforcePromotionRenewalOperationCompleted(object arg) {
            if ((this.forcePromotionRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forcePromotionRenewalCompleted(this, new forcePromotionRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerService getActivablePricePlan(int dataSourceId, int warehouseId, string msisdn) {
            object[] results = this.Invoke("getActivablePricePlan", new object[] {
                        dataSourceId,
                        warehouseId,
                        msisdn});
            return ((rContainerService)(results[0]));
        }
        
        /// <remarks/>
        public void getActivablePricePlanAsync(int dataSourceId, int warehouseId, string msisdn) {
            this.getActivablePricePlanAsync(dataSourceId, warehouseId, msisdn, null);
        }
        
        /// <remarks/>
        public void getActivablePricePlanAsync(int dataSourceId, int warehouseId, string msisdn, object userState) {
            if ((this.getActivablePricePlanOperationCompleted == null)) {
                this.getActivablePricePlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActivablePricePlanOperationCompleted);
            }
            this.InvokeAsync("getActivablePricePlan", new object[] {
                        dataSourceId,
                        warehouseId,
                        msisdn}, this.getActivablePricePlanOperationCompleted, userState);
        }
        
        private void OngetActivablePricePlanOperationCompleted(object arg) {
            if ((this.getActivablePricePlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActivablePricePlanCompleted(this, new getActivablePricePlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerService getActivablePromo(int dataSourceId, int warehouseId, string msisdn) {
            object[] results = this.Invoke("getActivablePromo", new object[] {
                        dataSourceId,
                        warehouseId,
                        msisdn});
            return ((rContainerService)(results[0]));
        }
        
        /// <remarks/>
        public void getActivablePromoAsync(int dataSourceId, int warehouseId, string msisdn) {
            this.getActivablePromoAsync(dataSourceId, warehouseId, msisdn, null);
        }
        
        /// <remarks/>
        public void getActivablePromoAsync(int dataSourceId, int warehouseId, string msisdn, object userState) {
            if ((this.getActivablePromoOperationCompleted == null)) {
                this.getActivablePromoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActivablePromoOperationCompleted);
            }
            this.InvokeAsync("getActivablePromo", new object[] {
                        dataSourceId,
                        warehouseId,
                        msisdn}, this.getActivablePromoOperationCompleted, userState);
        }
        
        private void OngetActivablePromoOperationCompleted(object arg) {
            if ((this.getActivablePromoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActivablePromoCompleted(this, new getActivablePromoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerService getActivablePromoCRM(int dataSourceId, int warehouseId, string msisdn) {
            object[] results = this.Invoke("getActivablePromoCRM", new object[] {
                        dataSourceId,
                        warehouseId,
                        msisdn});
            return ((rContainerService)(results[0]));
        }
        
        /// <remarks/>
        public void getActivablePromoCRMAsync(int dataSourceId, int warehouseId, string msisdn) {
            this.getActivablePromoCRMAsync(dataSourceId, warehouseId, msisdn, null);
        }
        
        /// <remarks/>
        public void getActivablePromoCRMAsync(int dataSourceId, int warehouseId, string msisdn, object userState) {
            if ((this.getActivablePromoCRMOperationCompleted == null)) {
                this.getActivablePromoCRMOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActivablePromoCRMOperationCompleted);
            }
            this.InvokeAsync("getActivablePromoCRM", new object[] {
                        dataSourceId,
                        warehouseId,
                        msisdn}, this.getActivablePromoCRMOperationCompleted, userState);
        }
        
        private void OngetActivablePromoCRMOperationCompleted(object arg) {
            if ((this.getActivablePromoCRMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActivablePromoCRMCompleted(this, new getActivablePromoCRMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerPromoAll getAllPromotions() {
            object[] results = this.Invoke("getAllPromotions", new object[0]);
            return ((rContainerPromoAll)(results[0]));
        }
        
        /// <remarks/>
        public void getAllPromotionsAsync() {
            this.getAllPromotionsAsync(null);
        }
        
        /// <remarks/>
        public void getAllPromotionsAsync(object userState) {
            if ((this.getAllPromotionsOperationCompleted == null)) {
                this.getAllPromotionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPromotionsOperationCompleted);
            }
            this.InvokeAsync("getAllPromotions", new object[0], this.getAllPromotionsOperationCompleted, userState);
        }
        
        private void OngetAllPromotionsOperationCompleted(object arg) {
            if ((this.getAllPromotionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPromotionsCompleted(this, new getAllPromotionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer[] getAllStatusSim(int status, long beginDate) {
            object[] results = this.Invoke("getAllStatusSim", new object[] {
                        status,
                        beginDate});
            return ((rContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllStatusSimAsync(int status, long beginDate) {
            this.getAllStatusSimAsync(status, beginDate, null);
        }
        
        /// <remarks/>
        public void getAllStatusSimAsync(int status, long beginDate, object userState) {
            if ((this.getAllStatusSimOperationCompleted == null)) {
                this.getAllStatusSimOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllStatusSimOperationCompleted);
            }
            this.InvokeAsync("getAllStatusSim", new object[] {
                        status,
                        beginDate}, this.getAllStatusSimOperationCompleted, userState);
        }
        
        private void OngetAllStatusSimOperationCompleted(object arg) {
            if ((this.getAllStatusSimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllStatusSimCompleted(this, new getAllStatusSimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getBlacklistInfo(string msisdn, string service_id) {
            object[] results = this.Invoke("getBlacklistInfo", new object[] {
                        msisdn,
                        service_id});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getBlacklistInfoAsync(string msisdn, string service_id) {
            this.getBlacklistInfoAsync(msisdn, service_id, null);
        }
        
        /// <remarks/>
        public void getBlacklistInfoAsync(string msisdn, string service_id, object userState) {
            if ((this.getBlacklistInfoOperationCompleted == null)) {
                this.getBlacklistInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBlacklistInfoOperationCompleted);
            }
            this.InvokeAsync("getBlacklistInfo", new object[] {
                        msisdn,
                        service_id}, this.getBlacklistInfoOperationCompleted, userState);
        }
        
        private void OngetBlacklistInfoOperationCompleted(object arg) {
            if ((this.getBlacklistInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBlacklistInfoCompleted(this, new getBlacklistInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerCRMUnifiedInfo getCRMUnifiedInfo(string msisdn, string iccid, long beginDate, long endDate) {
            object[] results = this.Invoke("getCRMUnifiedInfo", new object[] {
                        msisdn,
                        iccid,
                        beginDate,
                        endDate});
            return ((rContainerCRMUnifiedInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getCRMUnifiedInfoAsync(string msisdn, string iccid, long beginDate, long endDate) {
            this.getCRMUnifiedInfoAsync(msisdn, iccid, beginDate, endDate, null);
        }
        
        /// <remarks/>
        public void getCRMUnifiedInfoAsync(string msisdn, string iccid, long beginDate, long endDate, object userState) {
            if ((this.getCRMUnifiedInfoOperationCompleted == null)) {
                this.getCRMUnifiedInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCRMUnifiedInfoOperationCompleted);
            }
            this.InvokeAsync("getCRMUnifiedInfo", new object[] {
                        msisdn,
                        iccid,
                        beginDate,
                        endDate}, this.getCRMUnifiedInfoOperationCompleted, userState);
        }
        
        private void OngetCRMUnifiedInfoOperationCompleted(object arg) {
            if ((this.getCRMUnifiedInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCRMUnifiedInfoCompleted(this, new getCRMUnifiedInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerBookingPromo getCustomerPromotionBooking(string msisdn) {
            object[] results = this.Invoke("getCustomerPromotionBooking", new object[] {
                        msisdn});
            return ((rContainerBookingPromo)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerPromotionBookingAsync(string msisdn) {
            this.getCustomerPromotionBookingAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getCustomerPromotionBookingAsync(string msisdn, object userState) {
            if ((this.getCustomerPromotionBookingOperationCompleted == null)) {
                this.getCustomerPromotionBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerPromotionBookingOperationCompleted);
            }
            this.InvokeAsync("getCustomerPromotionBooking", new object[] {
                        msisdn}, this.getCustomerPromotionBookingOperationCompleted, userState);
        }
        
        private void OngetCustomerPromotionBookingOperationCompleted(object arg) {
            if ((this.getCustomerPromotionBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerPromotionBookingCompleted(this, new getCustomerPromotionBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer[] getDeactivateLineSched(string sourceMsisdn) {
            object[] results = this.Invoke("getDeactivateLineSched", new object[] {
                        sourceMsisdn});
            return ((rContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void getDeactivateLineSchedAsync(string sourceMsisdn) {
            this.getDeactivateLineSchedAsync(sourceMsisdn, null);
        }
        
        /// <remarks/>
        public void getDeactivateLineSchedAsync(string sourceMsisdn, object userState) {
            if ((this.getDeactivateLineSchedOperationCompleted == null)) {
                this.getDeactivateLineSchedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDeactivateLineSchedOperationCompleted);
            }
            this.InvokeAsync("getDeactivateLineSched", new object[] {
                        sourceMsisdn}, this.getDeactivateLineSchedOperationCompleted, userState);
        }
        
        private void OngetDeactivateLineSchedOperationCompleted(object arg) {
            if ((this.getDeactivateLineSchedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDeactivateLineSchedCompleted(this, new getDeactivateLineSchedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerPromoBags getDeactivatedUserProfile(string msisdn) {
            object[] results = this.Invoke("getDeactivatedUserProfile", new object[] {
                        msisdn});
            return ((rContainerPromoBags)(results[0]));
        }
        
        /// <remarks/>
        public void getDeactivatedUserProfileAsync(string msisdn) {
            this.getDeactivatedUserProfileAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getDeactivatedUserProfileAsync(string msisdn, object userState) {
            if ((this.getDeactivatedUserProfileOperationCompleted == null)) {
                this.getDeactivatedUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDeactivatedUserProfileOperationCompleted);
            }
            this.InvokeAsync("getDeactivatedUserProfile", new object[] {
                        msisdn}, this.getDeactivatedUserProfileOperationCompleted, userState);
        }
        
        private void OngetDeactivatedUserProfileOperationCompleted(object arg) {
            if ((this.getDeactivatedUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDeactivatedUserProfileCompleted(this, new getDeactivatedUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerHistoryMNP getHistoryMNP(string msisdn, int order) {
            object[] results = this.Invoke("getHistoryMNP", new object[] {
                        msisdn,
                        order});
            return ((rContainerHistoryMNP)(results[0]));
        }
        
        /// <remarks/>
        public void getHistoryMNPAsync(string msisdn, int order) {
            this.getHistoryMNPAsync(msisdn, order, null);
        }
        
        /// <remarks/>
        public void getHistoryMNPAsync(string msisdn, int order, object userState) {
            if ((this.getHistoryMNPOperationCompleted == null)) {
                this.getHistoryMNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHistoryMNPOperationCompleted);
            }
            this.InvokeAsync("getHistoryMNP", new object[] {
                        msisdn,
                        order}, this.getHistoryMNPOperationCompleted, userState);
        }
        
        private void OngetHistoryMNPOperationCompleted(object arg) {
            if ((this.getHistoryMNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHistoryMNPCompleted(this, new getHistoryMNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer[] getHistorySIM(string msisdn, long beginDate, long endDate) {
            object[] results = this.Invoke("getHistorySIM", new object[] {
                        msisdn,
                        beginDate,
                        endDate});
            return ((rContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void getHistorySIMAsync(string msisdn, long beginDate, long endDate) {
            this.getHistorySIMAsync(msisdn, beginDate, endDate, null);
        }
        
        /// <remarks/>
        public void getHistorySIMAsync(string msisdn, long beginDate, long endDate, object userState) {
            if ((this.getHistorySIMOperationCompleted == null)) {
                this.getHistorySIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHistorySIMOperationCompleted);
            }
            this.InvokeAsync("getHistorySIM", new object[] {
                        msisdn,
                        beginDate,
                        endDate}, this.getHistorySIMOperationCompleted, userState);
        }
        
        private void OngetHistorySIMOperationCompleted(object arg) {
            if ((this.getHistorySIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHistorySIMCompleted(this, new getHistorySIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer[] getHistoryUNP(string msisdn, long beginDate, long endDate) {
            object[] results = this.Invoke("getHistoryUNP", new object[] {
                        msisdn,
                        beginDate,
                        endDate});
            return ((rContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void getHistoryUNPAsync(string msisdn, long beginDate, long endDate) {
            this.getHistoryUNPAsync(msisdn, beginDate, endDate, null);
        }
        
        /// <remarks/>
        public void getHistoryUNPAsync(string msisdn, long beginDate, long endDate, object userState) {
            if ((this.getHistoryUNPOperationCompleted == null)) {
                this.getHistoryUNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHistoryUNPOperationCompleted);
            }
            this.InvokeAsync("getHistoryUNP", new object[] {
                        msisdn,
                        beginDate,
                        endDate}, this.getHistoryUNPOperationCompleted, userState);
        }
        
        private void OngetHistoryUNPOperationCompleted(object arg) {
            if ((this.getHistoryUNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHistoryUNPCompleted(this, new getHistoryUNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerInfoMNPfull getInfoMNP(string msisdn) {
            object[] results = this.Invoke("getInfoMNP", new object[] {
                        msisdn});
            return ((rContainerInfoMNPfull)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoMNPAsync(string msisdn) {
            this.getInfoMNPAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getInfoMNPAsync(string msisdn, object userState) {
            if ((this.getInfoMNPOperationCompleted == null)) {
                this.getInfoMNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoMNPOperationCompleted);
            }
            this.InvokeAsync("getInfoMNP", new object[] {
                        msisdn}, this.getInfoMNPOperationCompleted, userState);
        }
        
        private void OngetInfoMNPOperationCompleted(object arg) {
            if ((this.getInfoMNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoMNPCompleted(this, new getInfoMNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getInfoSAID(int said) {
            object[] results = this.Invoke("getInfoSAID", new object[] {
                        said});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoSAIDAsync(int said) {
            this.getInfoSAIDAsync(said, null);
        }
        
        /// <remarks/>
        public void getInfoSAIDAsync(int said, object userState) {
            if ((this.getInfoSAIDOperationCompleted == null)) {
                this.getInfoSAIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoSAIDOperationCompleted);
            }
            this.InvokeAsync("getInfoSAID", new object[] {
                        said}, this.getInfoSAIDOperationCompleted, userState);
        }
        
        private void OngetInfoSAIDOperationCompleted(object arg) {
            if ((this.getInfoSAIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoSAIDCompleted(this, new getInfoSAIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getInfoSim(string target) {
            object[] results = this.Invoke("getInfoSim", new object[] {
                        target});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoSimAsync(string target) {
            this.getInfoSimAsync(target, null);
        }
        
        /// <remarks/>
        public void getInfoSimAsync(string target, object userState) {
            if ((this.getInfoSimOperationCompleted == null)) {
                this.getInfoSimOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoSimOperationCompleted);
            }
            this.InvokeAsync("getInfoSim", new object[] {
                        target}, this.getInfoSimOperationCompleted, userState);
        }
        
        private void OngetInfoSimOperationCompleted(object arg) {
            if ((this.getInfoSimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoSimCompleted(this, new getInfoSimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getInfoSimByICCID(string iccid) {
            object[] results = this.Invoke("getInfoSimByICCID", new object[] {
                        iccid});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoSimByICCIDAsync(string iccid) {
            this.getInfoSimByICCIDAsync(iccid, null);
        }
        
        /// <remarks/>
        public void getInfoSimByICCIDAsync(string iccid, object userState) {
            if ((this.getInfoSimByICCIDOperationCompleted == null)) {
                this.getInfoSimByICCIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoSimByICCIDOperationCompleted);
            }
            this.InvokeAsync("getInfoSimByICCID", new object[] {
                        iccid}, this.getInfoSimByICCIDOperationCompleted, userState);
        }
        
        private void OngetInfoSimByICCIDOperationCompleted(object arg) {
            if ((this.getInfoSimByICCIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoSimByICCIDCompleted(this, new getInfoSimByICCIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getInfoSimByMSISDN(string msisdn) {
            object[] results = this.Invoke("getInfoSimByMSISDN", new object[] {
                        msisdn});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoSimByMSISDNAsync(string msisdn) {
            this.getInfoSimByMSISDNAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getInfoSimByMSISDNAsync(string msisdn, object userState) {
            if ((this.getInfoSimByMSISDNOperationCompleted == null)) {
                this.getInfoSimByMSISDNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoSimByMSISDNOperationCompleted);
            }
            this.InvokeAsync("getInfoSimByMSISDN", new object[] {
                        msisdn}, this.getInfoSimByMSISDNOperationCompleted, userState);
        }
        
        private void OngetInfoSimByMSISDNOperationCompleted(object arg) {
            if ((this.getInfoSimByMSISDNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoSimByMSISDNCompleted(this, new getInfoSimByMSISDNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getInfoUNP(string msisdn) {
            object[] results = this.Invoke("getInfoUNP", new object[] {
                        msisdn});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoUNPAsync(string msisdn) {
            this.getInfoUNPAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getInfoUNPAsync(string msisdn, object userState) {
            if ((this.getInfoUNPOperationCompleted == null)) {
                this.getInfoUNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoUNPOperationCompleted);
            }
            this.InvokeAsync("getInfoUNP", new object[] {
                        msisdn}, this.getInfoUNPOperationCompleted, userState);
        }
        
        private void OngetInfoUNPOperationCompleted(object arg) {
            if ((this.getInfoUNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoUNPCompleted(this, new getInfoUNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public double getMainBagCredit(string msisdn) {
            object[] results = this.Invoke("getMainBagCredit", new object[] {
                        msisdn});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getMainBagCreditAsync(string msisdn) {
            this.getMainBagCreditAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getMainBagCreditAsync(string msisdn, object userState) {
            if ((this.getMainBagCreditOperationCompleted == null)) {
                this.getMainBagCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMainBagCreditOperationCompleted);
            }
            this.InvokeAsync("getMainBagCredit", new object[] {
                        msisdn}, this.getMainBagCreditOperationCompleted, userState);
        }
        
        private void OngetMainBagCreditOperationCompleted(object arg) {
            if ((this.getMainBagCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMainBagCreditCompleted(this, new getMainBagCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public double getMainBagCreditFull(string msisdn, bool reserves) {
            object[] results = this.Invoke("getMainBagCreditFull", new object[] {
                        msisdn,
                        reserves});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getMainBagCreditFullAsync(string msisdn, bool reserves) {
            this.getMainBagCreditFullAsync(msisdn, reserves, null);
        }
        
        /// <remarks/>
        public void getMainBagCreditFullAsync(string msisdn, bool reserves, object userState) {
            if ((this.getMainBagCreditFullOperationCompleted == null)) {
                this.getMainBagCreditFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMainBagCreditFullOperationCompleted);
            }
            this.InvokeAsync("getMainBagCreditFull", new object[] {
                        msisdn,
                        reserves}, this.getMainBagCreditFullOperationCompleted, userState);
        }
        
        private void OngetMainBagCreditFullOperationCompleted(object arg) {
            if ((this.getMainBagCreditFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMainBagCreditFullCompleted(this, new getMainBagCreditFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer[] getMnpStatus(int typeMnp, int status, long beginDate, long endDate, int flagCreditTransfer) {
            object[] results = this.Invoke("getMnpStatus", new object[] {
                        typeMnp,
                        status,
                        beginDate,
                        endDate,
                        flagCreditTransfer});
            return ((rContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void getMnpStatusAsync(int typeMnp, int status, long beginDate, long endDate, int flagCreditTransfer) {
            this.getMnpStatusAsync(typeMnp, status, beginDate, endDate, flagCreditTransfer, null);
        }
        
        /// <remarks/>
        public void getMnpStatusAsync(int typeMnp, int status, long beginDate, long endDate, int flagCreditTransfer, object userState) {
            if ((this.getMnpStatusOperationCompleted == null)) {
                this.getMnpStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMnpStatusOperationCompleted);
            }
            this.InvokeAsync("getMnpStatus", new object[] {
                        typeMnp,
                        status,
                        beginDate,
                        endDate,
                        flagCreditTransfer}, this.getMnpStatusOperationCompleted, userState);
        }
        
        private void OngetMnpStatusOperationCompleted(object arg) {
            if ((this.getMnpStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMnpStatusCompleted(this, new getMnpStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerPreRatingList getMsisdnPreRating(string msisdn) {
            object[] results = this.Invoke("getMsisdnPreRating", new object[] {
                        msisdn});
            return ((rContainerPreRatingList)(results[0]));
        }
        
        /// <remarks/>
        public void getMsisdnPreRatingAsync(string msisdn) {
            this.getMsisdnPreRatingAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getMsisdnPreRatingAsync(string msisdn, object userState) {
            if ((this.getMsisdnPreRatingOperationCompleted == null)) {
                this.getMsisdnPreRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMsisdnPreRatingOperationCompleted);
            }
            this.InvokeAsync("getMsisdnPreRating", new object[] {
                        msisdn}, this.getMsisdnPreRatingOperationCompleted, userState);
        }
        
        private void OngetMsisdnPreRatingOperationCompleted(object arg) {
            if ((this.getMsisdnPreRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMsisdnPreRatingCompleted(this, new getMsisdnPreRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerPromoBags getMsisdnPromoBags(string msisdn) {
            object[] results = this.Invoke("getMsisdnPromoBags", new object[] {
                        msisdn});
            return ((rContainerPromoBags)(results[0]));
        }
        
        /// <remarks/>
        public void getMsisdnPromoBagsAsync(string msisdn) {
            this.getMsisdnPromoBagsAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getMsisdnPromoBagsAsync(string msisdn, object userState) {
            if ((this.getMsisdnPromoBagsOperationCompleted == null)) {
                this.getMsisdnPromoBagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMsisdnPromoBagsOperationCompleted);
            }
            this.InvokeAsync("getMsisdnPromoBags", new object[] {
                        msisdn}, this.getMsisdnPromoBagsOperationCompleted, userState);
        }
        
        private void OngetMsisdnPromoBagsOperationCompleted(object arg) {
            if ((this.getMsisdnPromoBagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMsisdnPromoBagsCompleted(this, new getMsisdnPromoBagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getPinVoiceMail(string msisdn) {
            object[] results = this.Invoke("getPinVoiceMail", new object[] {
                        msisdn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPinVoiceMailAsync(string msisdn) {
            this.getPinVoiceMailAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void getPinVoiceMailAsync(string msisdn, object userState) {
            if ((this.getPinVoiceMailOperationCompleted == null)) {
                this.getPinVoiceMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPinVoiceMailOperationCompleted);
            }
            this.InvokeAsync("getPinVoiceMail", new object[] {
                        msisdn}, this.getPinVoiceMailOperationCompleted, userState);
        }
        
        private void OngetPinVoiceMailOperationCompleted(object arg) {
            if ((this.getPinVoiceMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPinVoiceMailCompleted(this, new getPinVoiceMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public double getPrincipalCredit(string fromJid, string fromDomain) {
            object[] results = this.Invoke("getPrincipalCredit", new object[] {
                        fromJid,
                        fromDomain});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getPrincipalCreditAsync(string fromJid, string fromDomain) {
            this.getPrincipalCreditAsync(fromJid, fromDomain, null);
        }
        
        /// <remarks/>
        public void getPrincipalCreditAsync(string fromJid, string fromDomain, object userState) {
            if ((this.getPrincipalCreditOperationCompleted == null)) {
                this.getPrincipalCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrincipalCreditOperationCompleted);
            }
            this.InvokeAsync("getPrincipalCredit", new object[] {
                        fromJid,
                        fromDomain}, this.getPrincipalCreditOperationCompleted, userState);
        }
        
        private void OngetPrincipalCreditOperationCompleted(object arg) {
            if ((this.getPrincipalCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrincipalCreditCompleted(this, new getPrincipalCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerRecharges getRechargesList(string msisdn, long beginDate, long endDate, int maxList, int order) {
            object[] results = this.Invoke("getRechargesList", new object[] {
                        msisdn,
                        beginDate,
                        endDate,
                        maxList,
                        order});
            return ((rContainerRecharges)(results[0]));
        }
        
        /// <remarks/>
        public void getRechargesListAsync(string msisdn, long beginDate, long endDate, int maxList, int order) {
            this.getRechargesListAsync(msisdn, beginDate, endDate, maxList, order, null);
        }
        
        /// <remarks/>
        public void getRechargesListAsync(string msisdn, long beginDate, long endDate, int maxList, int order, object userState) {
            if ((this.getRechargesListOperationCompleted == null)) {
                this.getRechargesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRechargesListOperationCompleted);
            }
            this.InvokeAsync("getRechargesList", new object[] {
                        msisdn,
                        beginDate,
                        endDate,
                        maxList,
                        order}, this.getRechargesListOperationCompleted, userState);
        }
        
        private void OngetRechargesListOperationCompleted(object arg) {
            if ((this.getRechargesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRechargesListCompleted(this, new getRechargesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getReference(string msisdn, string promoName, int referenceType, int dataSourceId) {
            object[] results = this.Invoke("getReference", new object[] {
                        msisdn,
                        promoName,
                        referenceType,
                        dataSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getReferenceAsync(string msisdn, string promoName, int referenceType, int dataSourceId) {
            this.getReferenceAsync(msisdn, promoName, referenceType, dataSourceId, null);
        }
        
        /// <remarks/>
        public void getReferenceAsync(string msisdn, string promoName, int referenceType, int dataSourceId, object userState) {
            if ((this.getReferenceOperationCompleted == null)) {
                this.getReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReferenceOperationCompleted);
            }
            this.InvokeAsync("getReference", new object[] {
                        msisdn,
                        promoName,
                        referenceType,
                        dataSourceId}, this.getReferenceOperationCompleted, userState);
        }
        
        private void OngetReferenceOperationCompleted(object arg) {
            if ((this.getReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReferenceCompleted(this, new getReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getSIMResearch(string type, string warehouse, string status, string creationDateFrom, string creationDateTo, string exitDateFrom, string exitDateTo, string software) {
            object[] results = this.Invoke("getSIMResearch", new object[] {
                        type,
                        warehouse,
                        status,
                        creationDateFrom,
                        creationDateTo,
                        exitDateFrom,
                        exitDateTo,
                        software});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getSIMResearchAsync(string type, string warehouse, string status, string creationDateFrom, string creationDateTo, string exitDateFrom, string exitDateTo, string software) {
            this.getSIMResearchAsync(type, warehouse, status, creationDateFrom, creationDateTo, exitDateFrom, exitDateTo, software, null);
        }
        
        /// <remarks/>
        public void getSIMResearchAsync(string type, string warehouse, string status, string creationDateFrom, string creationDateTo, string exitDateFrom, string exitDateTo, string software, object userState) {
            if ((this.getSIMResearchOperationCompleted == null)) {
                this.getSIMResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSIMResearchOperationCompleted);
            }
            this.InvokeAsync("getSIMResearch", new object[] {
                        type,
                        warehouse,
                        status,
                        creationDateFrom,
                        creationDateTo,
                        exitDateFrom,
                        exitDateTo,
                        software}, this.getSIMResearchOperationCompleted, userState);
        }
        
        private void OngetSIMResearchOperationCompleted(object arg) {
            if ((this.getSIMResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSIMResearchCompleted(this, new getSIMResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer[] getSIMSoftwares() {
            object[] results = this.Invoke("getSIMSoftwares", new object[0]);
            return ((rContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void getSIMSoftwaresAsync() {
            this.getSIMSoftwaresAsync(null);
        }
        
        /// <remarks/>
        public void getSIMSoftwaresAsync(object userState) {
            if ((this.getSIMSoftwaresOperationCompleted == null)) {
                this.getSIMSoftwaresOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSIMSoftwaresOperationCompleted);
            }
            this.InvokeAsync("getSIMSoftwares", new object[0], this.getSIMSoftwaresOperationCompleted, userState);
        }
        
        private void OngetSIMSoftwaresOperationCompleted(object arg) {
            if ((this.getSIMSoftwaresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSIMSoftwaresCompleted(this, new getSIMSoftwaresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerInfoSaid getSaidList() {
            object[] results = this.Invoke("getSaidList", new object[0]);
            return ((rContainerInfoSaid)(results[0]));
        }
        
        /// <remarks/>
        public void getSaidListAsync() {
            this.getSaidListAsync(null);
        }
        
        /// <remarks/>
        public void getSaidListAsync(object userState) {
            if ((this.getSaidListOperationCompleted == null)) {
                this.getSaidListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSaidListOperationCompleted);
            }
            this.InvokeAsync("getSaidList", new object[0], this.getSaidListOperationCompleted, userState);
        }
        
        private void OngetSaidListOperationCompleted(object arg) {
            if ((this.getSaidListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSaidListCompleted(this, new getSaidListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer[] getSimByTaxCode(string taxcode, int status) {
            object[] results = this.Invoke("getSimByTaxCode", new object[] {
                        taxcode,
                        status});
            return ((rContainer[])(results[0]));
        }
        
        /// <remarks/>
        public void getSimByTaxCodeAsync(string taxcode, int status) {
            this.getSimByTaxCodeAsync(taxcode, status, null);
        }
        
        /// <remarks/>
        public void getSimByTaxCodeAsync(string taxcode, int status, object userState) {
            if ((this.getSimByTaxCodeOperationCompleted == null)) {
                this.getSimByTaxCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSimByTaxCodeOperationCompleted);
            }
            this.InvokeAsync("getSimByTaxCode", new object[] {
                        taxcode,
                        status}, this.getSimByTaxCodeOperationCompleted, userState);
        }
        
        private void OngetSimByTaxCodeOperationCompleted(object arg) {
            if ((this.getSimByTaxCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSimByTaxCodeCompleted(this, new getSimByTaxCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer getStatusBid(string bid) {
            object[] results = this.Invoke("getStatusBid", new object[] {
                        bid});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusBidAsync(string bid) {
            this.getStatusBidAsync(bid, null);
        }
        
        /// <remarks/>
        public void getStatusBidAsync(string bid, object userState) {
            if ((this.getStatusBidOperationCompleted == null)) {
                this.getStatusBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusBidOperationCompleted);
            }
            this.InvokeAsync("getStatusBid", new object[] {
                        bid}, this.getStatusBidOperationCompleted, userState);
        }
        
        private void OngetStatusBidOperationCompleted(object arg) {
            if ((this.getStatusBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusBidCompleted(this, new getStatusBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerPreRatingList getUserPreRating(string fromJid, string fromDomain) {
            object[] results = this.Invoke("getUserPreRating", new object[] {
                        fromJid,
                        fromDomain});
            return ((rContainerPreRatingList)(results[0]));
        }
        
        /// <remarks/>
        public void getUserPreRatingAsync(string fromJid, string fromDomain) {
            this.getUserPreRatingAsync(fromJid, fromDomain, null);
        }
        
        /// <remarks/>
        public void getUserPreRatingAsync(string fromJid, string fromDomain, object userState) {
            if ((this.getUserPreRatingOperationCompleted == null)) {
                this.getUserPreRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPreRatingOperationCompleted);
            }
            this.InvokeAsync("getUserPreRating", new object[] {
                        fromJid,
                        fromDomain}, this.getUserPreRatingOperationCompleted, userState);
        }
        
        private void OngetUserPreRatingOperationCompleted(object arg) {
            if ((this.getUserPreRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserPreRatingCompleted(this, new getUserPreRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerPromoBags getUserPromoBags(string fromJid, string fromDomain) {
            object[] results = this.Invoke("getUserPromoBags", new object[] {
                        fromJid,
                        fromDomain});
            return ((rContainerPromoBags)(results[0]));
        }
        
        /// <remarks/>
        public void getUserPromoBagsAsync(string fromJid, string fromDomain) {
            this.getUserPromoBagsAsync(fromJid, fromDomain, null);
        }
        
        /// <remarks/>
        public void getUserPromoBagsAsync(string fromJid, string fromDomain, object userState) {
            if ((this.getUserPromoBagsOperationCompleted == null)) {
                this.getUserPromoBagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPromoBagsOperationCompleted);
            }
            this.InvokeAsync("getUserPromoBags", new object[] {
                        fromJid,
                        fromDomain}, this.getUserPromoBagsOperationCompleted, userState);
        }
        
        private void OngetUserPromoBagsOperationCompleted(object arg) {
            if ((this.getUserPromoBagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserPromoBagsCompleted(this, new getUserPromoBagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerPromoBags getUserPromoBagsByICCID(string iccid) {
            object[] results = this.Invoke("getUserPromoBagsByICCID", new object[] {
                        iccid});
            return ((rContainerPromoBags)(results[0]));
        }
        
        /// <remarks/>
        public void getUserPromoBagsByICCIDAsync(string iccid) {
            this.getUserPromoBagsByICCIDAsync(iccid, null);
        }
        
        /// <remarks/>
        public void getUserPromoBagsByICCIDAsync(string iccid, object userState) {
            if ((this.getUserPromoBagsByICCIDOperationCompleted == null)) {
                this.getUserPromoBagsByICCIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPromoBagsByICCIDOperationCompleted);
            }
            this.InvokeAsync("getUserPromoBagsByICCID", new object[] {
                        iccid}, this.getUserPromoBagsByICCIDOperationCompleted, userState);
        }
        
        private void OngetUserPromoBagsByICCIDOperationCompleted(object arg) {
            if ((this.getUserPromoBagsByICCIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserPromoBagsByICCIDCompleted(this, new getUserPromoBagsByICCIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer manageReference(string msisdn, int servicePlanId, string token, string reference, long referenceType, int operation, int dataSourceId, int realSourceId, bool noCharging) {
            object[] results = this.Invoke("manageReference", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        reference,
                        referenceType,
                        operation,
                        dataSourceId,
                        realSourceId,
                        noCharging});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void manageReferenceAsync(string msisdn, int servicePlanId, string token, string reference, long referenceType, int operation, int dataSourceId, int realSourceId, bool noCharging) {
            this.manageReferenceAsync(msisdn, servicePlanId, token, reference, referenceType, operation, dataSourceId, realSourceId, noCharging, null);
        }
        
        /// <remarks/>
        public void manageReferenceAsync(string msisdn, int servicePlanId, string token, string reference, long referenceType, int operation, int dataSourceId, int realSourceId, bool noCharging, object userState) {
            if ((this.manageReferenceOperationCompleted == null)) {
                this.manageReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanageReferenceOperationCompleted);
            }
            this.InvokeAsync("manageReference", new object[] {
                        msisdn,
                        servicePlanId,
                        token,
                        reference,
                        referenceType,
                        operation,
                        dataSourceId,
                        realSourceId,
                        noCharging}, this.manageReferenceOperationCompleted, userState);
        }
        
        private void OnmanageReferenceOperationCompleted(object arg) {
            if ((this.manageReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.manageReferenceCompleted(this, new manageReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainerSCE manageSCE(string action, string serviceCode, string msisdn, [System.Xml.Serialization.XmlArrayItemAttribute("couple", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] inputs[] @params, int noCharging, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("manageSCE", new object[] {
                        action,
                        serviceCode,
                        msisdn,
                        @params,
                        noCharging,
                        dataSourceId,
                        realSourceId});
            return ((rContainerSCE)(results[0]));
        }
        
        /// <remarks/>
        public void manageSCEAsync(string action, string serviceCode, string msisdn, inputs[] @params, int noCharging, int dataSourceId, int realSourceId) {
            this.manageSCEAsync(action, serviceCode, msisdn, @params, noCharging, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void manageSCEAsync(string action, string serviceCode, string msisdn, inputs[] @params, int noCharging, int dataSourceId, int realSourceId, object userState) {
            if ((this.manageSCEOperationCompleted == null)) {
                this.manageSCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmanageSCEOperationCompleted);
            }
            this.InvokeAsync("manageSCE", new object[] {
                        action,
                        serviceCode,
                        msisdn,
                        @params,
                        noCharging,
                        dataSourceId,
                        realSourceId}, this.manageSCEOperationCompleted, userState);
        }
        
        private void OnmanageSCEOperationCompleted(object arg) {
            if ((this.manageSCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.manageSCECompleted(this, new manageSCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer rechargeAuxMoneyBag(string msisdn, long auxBagId, double value, long dataSourceId) {
            object[] results = this.Invoke("rechargeAuxMoneyBag", new object[] {
                        msisdn,
                        auxBagId,
                        value,
                        dataSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeAuxMoneyBagAsync(string msisdn, long auxBagId, double value, long dataSourceId) {
            this.rechargeAuxMoneyBagAsync(msisdn, auxBagId, value, dataSourceId, null);
        }
        
        /// <remarks/>
        public void rechargeAuxMoneyBagAsync(string msisdn, long auxBagId, double value, long dataSourceId, object userState) {
            if ((this.rechargeAuxMoneyBagOperationCompleted == null)) {
                this.rechargeAuxMoneyBagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeAuxMoneyBagOperationCompleted);
            }
            this.InvokeAsync("rechargeAuxMoneyBag", new object[] {
                        msisdn,
                        auxBagId,
                        value,
                        dataSourceId}, this.rechargeAuxMoneyBagOperationCompleted, userState);
        }
        
        private void OnrechargeAuxMoneyBagOperationCompleted(object arg) {
            if ((this.rechargeAuxMoneyBagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeAuxMoneyBagCompleted(this, new rechargeAuxMoneyBagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer rechargeAuxMoneyBagId(string msisdn, long auxBagId, double value, long dataSourceId, int eventType) {
            object[] results = this.Invoke("rechargeAuxMoneyBagId", new object[] {
                        msisdn,
                        auxBagId,
                        value,
                        dataSourceId,
                        eventType});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeAuxMoneyBagIdAsync(string msisdn, long auxBagId, double value, long dataSourceId, int eventType) {
            this.rechargeAuxMoneyBagIdAsync(msisdn, auxBagId, value, dataSourceId, eventType, null);
        }
        
        /// <remarks/>
        public void rechargeAuxMoneyBagIdAsync(string msisdn, long auxBagId, double value, long dataSourceId, int eventType, object userState) {
            if ((this.rechargeAuxMoneyBagIdOperationCompleted == null)) {
                this.rechargeAuxMoneyBagIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeAuxMoneyBagIdOperationCompleted);
            }
            this.InvokeAsync("rechargeAuxMoneyBagId", new object[] {
                        msisdn,
                        auxBagId,
                        value,
                        dataSourceId,
                        eventType}, this.rechargeAuxMoneyBagIdOperationCompleted, userState);
        }
        
        private void OnrechargeAuxMoneyBagIdOperationCompleted(object arg) {
            if ((this.rechargeAuxMoneyBagIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeAuxMoneyBagIdCompleted(this, new rechargeAuxMoneyBagIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer rechargeCancel(string user, double amount, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("rechargeCancel", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeCancelAsync(string user, double amount, string token, int dataSourceId, int realSourceId) {
            this.rechargeCancelAsync(user, amount, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void rechargeCancelAsync(string user, double amount, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.rechargeCancelOperationCompleted == null)) {
                this.rechargeCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeCancelOperationCompleted);
            }
            this.InvokeAsync("rechargeCancel", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId}, this.rechargeCancelOperationCompleted, userState);
        }
        
        private void OnrechargeCancelOperationCompleted(object arg) {
            if ((this.rechargeCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeCancelCompleted(this, new rechargeCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer rechargeManualRefund(string user, double amount, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("rechargeManualRefund", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeManualRefundAsync(string user, double amount, string token, int dataSourceId, int realSourceId) {
            this.rechargeManualRefundAsync(user, amount, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void rechargeManualRefundAsync(string user, double amount, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.rechargeManualRefundOperationCompleted == null)) {
                this.rechargeManualRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeManualRefundOperationCompleted);
            }
            this.InvokeAsync("rechargeManualRefund", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId}, this.rechargeManualRefundOperationCompleted, userState);
        }
        
        private void OnrechargeManualRefundOperationCompleted(object arg) {
            if ((this.rechargeManualRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeManualRefundCompleted(this, new rechargeManualRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer rechargeUser(string user, double amount, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("rechargeUser", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeUserAsync(string user, double amount, string token, int dataSourceId, int realSourceId) {
            this.rechargeUserAsync(user, amount, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void rechargeUserAsync(string user, double amount, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.rechargeUserOperationCompleted == null)) {
                this.rechargeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeUserOperationCompleted);
            }
            this.InvokeAsync("rechargeUser", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId}, this.rechargeUserOperationCompleted, userState);
        }
        
        private void OnrechargeUserOperationCompleted(object arg) {
            if ((this.rechargeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeUserCompleted(this, new rechargeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer rechargeUserFast(string user, double amount, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("rechargeUserFast", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeUserFastAsync(string user, double amount, string token, int dataSourceId, int realSourceId) {
            this.rechargeUserFastAsync(user, amount, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void rechargeUserFastAsync(string user, double amount, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.rechargeUserFastOperationCompleted == null)) {
                this.rechargeUserFastOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeUserFastOperationCompleted);
            }
            this.InvokeAsync("rechargeUserFast", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId}, this.rechargeUserFastOperationCompleted, userState);
        }
        
        private void OnrechargeUserFastOperationCompleted(object arg) {
            if ((this.rechargeUserFastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeUserFastCompleted(this, new rechargeUserFastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer rechargeUserId(string user, double amount, string token, int dataSourceId, int realSourceId, int eventType) {
            object[] results = this.Invoke("rechargeUserId", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId,
                        eventType});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeUserIdAsync(string user, double amount, string token, int dataSourceId, int realSourceId, int eventType) {
            this.rechargeUserIdAsync(user, amount, token, dataSourceId, realSourceId, eventType, null);
        }
        
        /// <remarks/>
        public void rechargeUserIdAsync(string user, double amount, string token, int dataSourceId, int realSourceId, int eventType, object userState) {
            if ((this.rechargeUserIdOperationCompleted == null)) {
                this.rechargeUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeUserIdOperationCompleted);
            }
            this.InvokeAsync("rechargeUserId", new object[] {
                        user,
                        amount,
                        token,
                        dataSourceId,
                        realSourceId,
                        eventType}, this.rechargeUserIdOperationCompleted, userState);
        }
        
        private void OnrechargeUserIdOperationCompleted(object arg) {
            if ((this.rechargeUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeUserIdCompleted(this, new rechargeUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer refundAuxMoneyBag(string msisdn, long auxBagId, double value, long dataSourceId) {
            object[] results = this.Invoke("refundAuxMoneyBag", new object[] {
                        msisdn,
                        auxBagId,
                        value,
                        dataSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void refundAuxMoneyBagAsync(string msisdn, long auxBagId, double value, long dataSourceId) {
            this.refundAuxMoneyBagAsync(msisdn, auxBagId, value, dataSourceId, null);
        }
        
        /// <remarks/>
        public void refundAuxMoneyBagAsync(string msisdn, long auxBagId, double value, long dataSourceId, object userState) {
            if ((this.refundAuxMoneyBagOperationCompleted == null)) {
                this.refundAuxMoneyBagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefundAuxMoneyBagOperationCompleted);
            }
            this.InvokeAsync("refundAuxMoneyBag", new object[] {
                        msisdn,
                        auxBagId,
                        value,
                        dataSourceId}, this.refundAuxMoneyBagOperationCompleted, userState);
        }
        
        private void OnrefundAuxMoneyBagOperationCompleted(object arg) {
            if ((this.refundAuxMoneyBagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refundAuxMoneyBagCompleted(this, new refundAuxMoneyBagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer removePromotionBooking(string msisdn, long promotionBookingId) {
            object[] results = this.Invoke("removePromotionBooking", new object[] {
                        msisdn,
                        promotionBookingId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void removePromotionBookingAsync(string msisdn, long promotionBookingId) {
            this.removePromotionBookingAsync(msisdn, promotionBookingId, null);
        }
        
        /// <remarks/>
        public void removePromotionBookingAsync(string msisdn, long promotionBookingId, object userState) {
            if ((this.removePromotionBookingOperationCompleted == null)) {
                this.removePromotionBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePromotionBookingOperationCompleted);
            }
            this.InvokeAsync("removePromotionBooking", new object[] {
                        msisdn,
                        promotionBookingId}, this.removePromotionBookingOperationCompleted, userState);
        }
        
        private void OnremovePromotionBookingOperationCompleted(object arg) {
            if ((this.removePromotionBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePromotionBookingCompleted(this, new removePromotionBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer setMsisdnPreRating(string msisdn, string preRatingName, int type, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("setMsisdnPreRating", new object[] {
                        msisdn,
                        preRatingName,
                        type,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void setMsisdnPreRatingAsync(string msisdn, string preRatingName, int type, string token, int dataSourceId, int realSourceId) {
            this.setMsisdnPreRatingAsync(msisdn, preRatingName, type, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void setMsisdnPreRatingAsync(string msisdn, string preRatingName, int type, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.setMsisdnPreRatingOperationCompleted == null)) {
                this.setMsisdnPreRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMsisdnPreRatingOperationCompleted);
            }
            this.InvokeAsync("setMsisdnPreRating", new object[] {
                        msisdn,
                        preRatingName,
                        type,
                        token,
                        dataSourceId,
                        realSourceId}, this.setMsisdnPreRatingOperationCompleted, userState);
        }
        
        private void OnsetMsisdnPreRatingOperationCompleted(object arg) {
            if ((this.setMsisdnPreRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMsisdnPreRatingCompleted(this, new setMsisdnPreRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int setPinVoiceMail(string msisdn, string pin) {
            object[] results = this.Invoke("setPinVoiceMail", new object[] {
                        msisdn,
                        pin});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void setPinVoiceMailAsync(string msisdn, string pin) {
            this.setPinVoiceMailAsync(msisdn, pin, null);
        }
        
        /// <remarks/>
        public void setPinVoiceMailAsync(string msisdn, string pin, object userState) {
            if ((this.setPinVoiceMailOperationCompleted == null)) {
                this.setPinVoiceMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPinVoiceMailOperationCompleted);
            }
            this.InvokeAsync("setPinVoiceMail", new object[] {
                        msisdn,
                        pin}, this.setPinVoiceMailOperationCompleted, userState);
        }
        
        private void OnsetPinVoiceMailOperationCompleted(object arg) {
            if ((this.setPinVoiceMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPinVoiceMailCompleted(this, new setPinVoiceMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer setUserPreRating(string msisdn, string preRatingName, int type, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("setUserPreRating", new object[] {
                        msisdn,
                        preRatingName,
                        type,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void setUserPreRatingAsync(string msisdn, string preRatingName, int type, string token, int dataSourceId, int realSourceId) {
            this.setUserPreRatingAsync(msisdn, preRatingName, type, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void setUserPreRatingAsync(string msisdn, string preRatingName, int type, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.setUserPreRatingOperationCompleted == null)) {
                this.setUserPreRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserPreRatingOperationCompleted);
            }
            this.InvokeAsync("setUserPreRating", new object[] {
                        msisdn,
                        preRatingName,
                        type,
                        token,
                        dataSourceId,
                        realSourceId}, this.setUserPreRatingOperationCompleted, userState);
        }
        
        private void OnsetUserPreRatingOperationCompleted(object arg) {
            if ((this.setUserPreRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUserPreRatingCompleted(this, new setUserPreRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer unbindTMPmsisdn(string msisdn) {
            object[] results = this.Invoke("unbindTMPmsisdn", new object[] {
                        msisdn});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void unbindTMPmsisdnAsync(string msisdn) {
            this.unbindTMPmsisdnAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void unbindTMPmsisdnAsync(string msisdn, object userState) {
            if ((this.unbindTMPmsisdnOperationCompleted == null)) {
                this.unbindTMPmsisdnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunbindTMPmsisdnOperationCompleted);
            }
            this.InvokeAsync("unbindTMPmsisdn", new object[] {
                        msisdn}, this.unbindTMPmsisdnOperationCompleted, userState);
        }
        
        private void OnunbindTMPmsisdnOperationCompleted(object arg) {
            if ((this.unbindTMPmsisdnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unbindTMPmsisdnCompleted(this, new unbindTMPmsisdnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer unsubscribePromo(string msisdn, string promotion, string token, int hard, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("unsubscribePromo", new object[] {
                        msisdn,
                        promotion,
                        token,
                        hard,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void unsubscribePromoAsync(string msisdn, string promotion, string token, int hard, int dataSourceId, int realSourceId) {
            this.unsubscribePromoAsync(msisdn, promotion, token, hard, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void unsubscribePromoAsync(string msisdn, string promotion, string token, int hard, int dataSourceId, int realSourceId, object userState) {
            if ((this.unsubscribePromoOperationCompleted == null)) {
                this.unsubscribePromoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribePromoOperationCompleted);
            }
            this.InvokeAsync("unsubscribePromo", new object[] {
                        msisdn,
                        promotion,
                        token,
                        hard,
                        dataSourceId,
                        realSourceId}, this.unsubscribePromoOperationCompleted, userState);
        }
        
        private void OnunsubscribePromoOperationCompleted(object arg) {
            if ((this.unsubscribePromoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribePromoCompleted(this, new unsubscribePromoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer unsubscribePromotion(string msisdn, string promotion, string token, int dataSourceId, int realSourceId) {
            object[] results = this.Invoke("unsubscribePromotion", new object[] {
                        msisdn,
                        promotion,
                        token,
                        dataSourceId,
                        realSourceId});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void unsubscribePromotionAsync(string msisdn, string promotion, string token, int dataSourceId, int realSourceId) {
            this.unsubscribePromotionAsync(msisdn, promotion, token, dataSourceId, realSourceId, null);
        }
        
        /// <remarks/>
        public void unsubscribePromotionAsync(string msisdn, string promotion, string token, int dataSourceId, int realSourceId, object userState) {
            if ((this.unsubscribePromotionOperationCompleted == null)) {
                this.unsubscribePromotionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribePromotionOperationCompleted);
            }
            this.InvokeAsync("unsubscribePromotion", new object[] {
                        msisdn,
                        promotion,
                        token,
                        dataSourceId,
                        realSourceId}, this.unsubscribePromotionOperationCompleted, userState);
        }
        
        private void OnunsubscribePromotionOperationCompleted(object arg) {
            if ((this.unsubscribePromotionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribePromotionCompleted(this, new unsubscribePromotionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.management.acoteltlc.com/", ResponseNamespace="http://api.management.acoteltlc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rContainer updatePersonalData(string msisdn, string fiscalCode) {
            object[] results = this.Invoke("updatePersonalData", new object[] {
                        msisdn,
                        fiscalCode});
            return ((rContainer)(results[0]));
        }
        
        /// <remarks/>
        public void updatePersonalDataAsync(string msisdn, string fiscalCode) {
            this.updatePersonalDataAsync(msisdn, fiscalCode, null);
        }
        
        /// <remarks/>
        public void updatePersonalDataAsync(string msisdn, string fiscalCode, object userState) {
            if ((this.updatePersonalDataOperationCompleted == null)) {
                this.updatePersonalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePersonalDataOperationCompleted);
            }
            this.InvokeAsync("updatePersonalData", new object[] {
                        msisdn,
                        fiscalCode}, this.updatePersonalDataOperationCompleted, userState);
        }
        
        private void OnupdatePersonalDataOperationCompleted(object arg) {
            if ((this.updatePersonalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePersonalDataCompleted(this, new updatePersonalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerInfoUNP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerInfoSim))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerHistoryUNP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerCRMUnifiedInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainer : modelGeneric {
        
        private inputField[] fieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fields", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public inputField[] fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class inputField {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class inputs {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class bookingPromo {
        
        private long customerIdField;
        
        private bool customerIdFieldSpecified;
        
        private long datasourceIdField;
        
        private bool datasourceIdFieldSpecified;
        
        private double initialBagAmountField;
        
        private bool initialBagAmountFieldSpecified;
        
        private string insertDateField;
        
        private string instanceNameField;
        
        private string lastRetryUpdateField;
        
        private long noChargingField;
        
        private bool noChargingFieldSpecified;
        
        private long promotionBookingIdField;
        
        private bool promotionBookingIdFieldSpecified;
        
        private long promotionIdField;
        
        private bool promotionIdFieldSpecified;
        
        private long retryCountField;
        
        private bool retryCountFieldSpecified;
        
        private long statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long customerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool customerIdSpecified {
            get {
                return this.customerIdFieldSpecified;
            }
            set {
                this.customerIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long datasourceId {
            get {
                return this.datasourceIdField;
            }
            set {
                this.datasourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool datasourceIdSpecified {
            get {
                return this.datasourceIdFieldSpecified;
            }
            set {
                this.datasourceIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double initialBagAmount {
            get {
                return this.initialBagAmountField;
            }
            set {
                this.initialBagAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool initialBagAmountSpecified {
            get {
                return this.initialBagAmountFieldSpecified;
            }
            set {
                this.initialBagAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertDate {
            get {
                return this.insertDateField;
            }
            set {
                this.insertDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string instanceName {
            get {
                return this.instanceNameField;
            }
            set {
                this.instanceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastRetryUpdate {
            get {
                return this.lastRetryUpdateField;
            }
            set {
                this.lastRetryUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long noCharging {
            get {
                return this.noChargingField;
            }
            set {
                this.noChargingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool noChargingSpecified {
            get {
                return this.noChargingFieldSpecified;
            }
            set {
                this.noChargingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long promotionBookingId {
            get {
                return this.promotionBookingIdField;
            }
            set {
                this.promotionBookingIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool promotionBookingIdSpecified {
            get {
                return this.promotionBookingIdFieldSpecified;
            }
            set {
                this.promotionBookingIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long promotionId {
            get {
                return this.promotionIdField;
            }
            set {
                this.promotionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool promotionIdSpecified {
            get {
                return this.promotionIdFieldSpecified;
            }
            set {
                this.promotionIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long retryCount {
            get {
                return this.retryCountField;
            }
            set {
                this.retryCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryCountSpecified {
            get {
                return this.retryCountFieldSpecified;
            }
            set {
                this.retryCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelSaidInfo {
        
        private short billingProfileField;
        
        private string descriptionField;
        
        private short plafondField;
        
        private int saidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short billingProfile {
            get {
                return this.billingProfileField;
            }
            set {
                this.billingProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short plafond {
            get {
                return this.plafondField;
            }
            set {
                this.plafondField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int said {
            get {
                return this.saidField;
            }
            set {
                this.saidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelMNPInfo {
        
        private string aomICCIDField;
        
        private short aomIDField;
        
        private string aomNameField;
        
        private short aomServiceIDField;
        
        private string aomServiceNameField;
        
        private string cutoverDateField;
        
        private string errorDescriptionField;
        
        private short flagCreditTransferField;
        
        private short flagPrevalidationField;
        
        private short flagTheftField;
        
        private string groupCodeField;
        
        private string mnpTypeNameField;
        
        private string refDateField;
        
        private string schedDateField;
        
        private short simTypeField;
        
        private short statusIDField;
        
        private string statusIdNameField;
        
        private short typeIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string aomICCID {
            get {
                return this.aomICCIDField;
            }
            set {
                this.aomICCIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short aomID {
            get {
                return this.aomIDField;
            }
            set {
                this.aomIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string aomName {
            get {
                return this.aomNameField;
            }
            set {
                this.aomNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short aomServiceID {
            get {
                return this.aomServiceIDField;
            }
            set {
                this.aomServiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string aomServiceName {
            get {
                return this.aomServiceNameField;
            }
            set {
                this.aomServiceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cutoverDate {
            get {
                return this.cutoverDateField;
            }
            set {
                this.cutoverDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short flagCreditTransfer {
            get {
                return this.flagCreditTransferField;
            }
            set {
                this.flagCreditTransferField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short flagPrevalidation {
            get {
                return this.flagPrevalidationField;
            }
            set {
                this.flagPrevalidationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short flagTheft {
            get {
                return this.flagTheftField;
            }
            set {
                this.flagTheftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mnpTypeName {
            get {
                return this.mnpTypeNameField;
            }
            set {
                this.mnpTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string refDate {
            get {
                return this.refDateField;
            }
            set {
                this.refDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string schedDate {
            get {
                return this.schedDateField;
            }
            set {
                this.schedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short simType {
            get {
                return this.simTypeField;
            }
            set {
                this.simTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short statusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string statusIdName {
            get {
                return this.statusIdNameField;
            }
            set {
                this.statusIdNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short typeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelCreditMNPInfo {
        
        private short anomalousCreditFlagField;
        
        private short aomIDField;
        
        private double creditAmountField;
        
        private bool creditAmountFieldSpecified;
        
        private string creditNotificationDateField;
        
        private string modifyDateField;
        
        private short statusField;
        
        private short typeTransferField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short anomalousCreditFlag {
            get {
                return this.anomalousCreditFlagField;
            }
            set {
                this.anomalousCreditFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short aomID {
            get {
                return this.aomIDField;
            }
            set {
                this.aomIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double creditAmount {
            get {
                return this.creditAmountField;
            }
            set {
                this.creditAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creditAmountSpecified {
            get {
                return this.creditAmountFieldSpecified;
            }
            set {
                this.creditAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string creditNotificationDate {
            get {
                return this.creditNotificationDateField;
            }
            set {
                this.creditNotificationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string modifyDate {
            get {
                return this.modifyDateField;
            }
            set {
                this.modifyDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public short typeTransfer {
            get {
                return this.typeTransferField;
            }
            set {
                this.typeTransferField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelPreRating {
        
        private string endDateField;
        
        private long prIdField;
        
        private bool prIdFieldSpecified;
        
        private string preRatingNameField;
        
        private long serviceIdField;
        
        private bool serviceIdFieldSpecified;
        
        private string startDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long prId {
            get {
                return this.prIdField;
            }
            set {
                this.prIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prIdSpecified {
            get {
                return this.prIdFieldSpecified;
            }
            set {
                this.prIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preRatingName {
            get {
                return this.preRatingNameField;
            }
            set {
                this.preRatingNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long serviceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceIdSpecified {
            get {
                return this.serviceIdFieldSpecified;
            }
            set {
                this.serviceIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelListRecharges {
        
        private string amountField;
        
        private string datetimeField;
        
        private int idField;
        
        private string realsourceField;
        
        private int rechargeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string datetime {
            get {
                return this.datetimeField;
            }
            set {
                this.datetimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string realsource {
            get {
                return this.realsourceField;
            }
            set {
                this.realsourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rechargeType {
            get {
                return this.rechargeTypeField;
            }
            set {
                this.rechargeTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelPromotions {
        
        private string descriptionField;
        
        private string endDateField;
        
        private long idField;
        
        private string instanceNameField;
        
        private string promoNameField;
        
        private string startDateField;
        
        private long subscriptionStatusField;
        
        private bool subscriptionStatusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string instanceName {
            get {
                return this.instanceNameField;
            }
            set {
                this.instanceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string promoName {
            get {
                return this.promoNameField;
            }
            set {
                this.promoNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long subscriptionStatus {
            get {
                return this.subscriptionStatusField;
            }
            set {
                this.subscriptionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subscriptionStatusSpecified {
            get {
                return this.subscriptionStatusFieldSpecified;
            }
            set {
                this.subscriptionStatusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelServiceAggr {
        
        private string descriptionField;
        
        private string endDateField;
        
        private int hardDisabledField;
        
        private string incompatibilityField;
        
        private string iniDateField;
        
        private string nameField;
        
        private int planTypeField;
        
        private int serviceAggregationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hardDisabled {
            get {
                return this.hardDisabledField;
            }
            set {
                this.hardDisabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string incompatibility {
            get {
                return this.incompatibilityField;
            }
            set {
                this.incompatibilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iniDate {
            get {
                return this.iniDateField;
            }
            set {
                this.iniDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int planType {
            get {
                return this.planTypeField;
            }
            set {
                this.planTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int serviceAggregationId {
            get {
                return this.serviceAggregationIdField;
            }
            set {
                this.serviceAggregationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class myAuxBag {
        
        private double amountField;
        
        private bool amountFieldSpecified;
        
        private long amountTypeIdField;
        
        private bool amountTypeIdFieldSpecified;
        
        private string amountTypeStringField;
        
        private long auxBagDefinitionIdField;
        
        private bool auxBagDefinitionIdFieldSpecified;
        
        private long auxMBDefIdField;
        
        private bool auxMBDefIdFieldSpecified;
        
        private long auxmbIdField;
        
        private bool auxmbIdFieldSpecified;
        
        private double bagInitValueField;
        
        private bool bagInitValueFieldSpecified;
        
        private string endDateField;
        
        private string nameField;
        
        private string startDateField;
        
        private long typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long amountTypeId {
            get {
                return this.amountTypeIdField;
            }
            set {
                this.amountTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountTypeIdSpecified {
            get {
                return this.amountTypeIdFieldSpecified;
            }
            set {
                this.amountTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string amountTypeString {
            get {
                return this.amountTypeStringField;
            }
            set {
                this.amountTypeStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long auxBagDefinitionId {
            get {
                return this.auxBagDefinitionIdField;
            }
            set {
                this.auxBagDefinitionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool auxBagDefinitionIdSpecified {
            get {
                return this.auxBagDefinitionIdFieldSpecified;
            }
            set {
                this.auxBagDefinitionIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long auxMBDefId {
            get {
                return this.auxMBDefIdField;
            }
            set {
                this.auxMBDefIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool auxMBDefIdSpecified {
            get {
                return this.auxMBDefIdFieldSpecified;
            }
            set {
                this.auxMBDefIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long auxmbId {
            get {
                return this.auxmbIdField;
            }
            set {
                this.auxmbIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool auxmbIdSpecified {
            get {
                return this.auxmbIdFieldSpecified;
            }
            set {
                this.auxmbIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double bagInitValue {
            get {
                return this.bagInitValueField;
            }
            set {
                this.bagInitValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bagInitValueSpecified {
            get {
                return this.bagInitValueFieldSpecified;
            }
            set {
                this.bagInitValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class mySubscriptionService {
        
        private myAuxBag[] auxBagField;
        
        private System.Nullable<long>[] auxBagIdField;
        
        private string endDateField;
        
        private string nameField;
        
        private long productIdField;
        
        private bool productIdFieldSpecified;
        
        private string promoInstanceNameField;
        
        private string promoNameField;
        
        private long promotionInstanceIdField;
        
        private bool promotionInstanceIdFieldSpecified;
        
        private long serviceIdField;
        
        private bool serviceIdFieldSpecified;
        
        private string startDateField;
        
        private long subTypeIdField;
        
        private bool subTypeIdFieldSpecified;
        
        private long subscriptionStatusField;
        
        private bool subscriptionStatusFieldSpecified;
        
        private long subserviceIdField;
        
        private bool subserviceIdFieldSpecified;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("auxBag", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public myAuxBag[] auxBag {
            get {
                return this.auxBagField;
            }
            set {
                this.auxBagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("auxBagId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<long>[] auxBagId {
            get {
                return this.auxBagIdField;
            }
            set {
                this.auxBagIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long productId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productIdSpecified {
            get {
                return this.productIdFieldSpecified;
            }
            set {
                this.productIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string promoInstanceName {
            get {
                return this.promoInstanceNameField;
            }
            set {
                this.promoInstanceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string promoName {
            get {
                return this.promoNameField;
            }
            set {
                this.promoNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long promotionInstanceId {
            get {
                return this.promotionInstanceIdField;
            }
            set {
                this.promotionInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool promotionInstanceIdSpecified {
            get {
                return this.promotionInstanceIdFieldSpecified;
            }
            set {
                this.promotionInstanceIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long serviceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceIdSpecified {
            get {
                return this.serviceIdFieldSpecified;
            }
            set {
                this.serviceIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long subTypeId {
            get {
                return this.subTypeIdField;
            }
            set {
                this.subTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subTypeIdSpecified {
            get {
                return this.subTypeIdFieldSpecified;
            }
            set {
                this.subTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long subscriptionStatus {
            get {
                return this.subscriptionStatusField;
            }
            set {
                this.subscriptionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subscriptionStatusSpecified {
            get {
                return this.subscriptionStatusFieldSpecified;
            }
            set {
                this.subscriptionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long subserviceId {
            get {
                return this.subserviceIdField;
            }
            set {
                this.subserviceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subserviceIdSpecified {
            get {
                return this.subserviceIdFieldSpecified;
            }
            set {
                this.subserviceIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerBookingPromo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerInfoSaid))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerHistoryMNP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerSCE))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerPreRatingList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerRecharges))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerPromoAll))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerPromoBags))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerInfoMNPfull))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerInfoUNP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerInfoSim))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerHistoryUNP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rContainerCRMUnifiedInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class modelGeneric {
        
        private int codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerBookingPromo : modelGeneric {
        
        private bookingPromo[] listBookingPromoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listBookingPromo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public bookingPromo[] listBookingPromo {
            get {
                return this.listBookingPromoField;
            }
            set {
                this.listBookingPromoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerInfoSaid : modelGeneric {
        
        private modelSaidInfo[] listSaidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("listSaid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public modelSaidInfo[] listSaid {
            get {
                return this.listSaidField;
            }
            set {
                this.listSaidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerHistoryMNP : modelGeneric {
        
        private modelCreditMNPInfo[] creditsField;
        
        private modelMNPInfo[] eventsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("credits", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public modelCreditMNPInfo[] credits {
            get {
                return this.creditsField;
            }
            set {
                this.creditsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("events", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public modelMNPInfo[] events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerSCE : modelGeneric {
        
        private inputField[] fieldsField;
        
        private string[] paramsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fields", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public inputField[] fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("params", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] @params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerPreRatingList : modelGeneric {
        
        private modelPreRating[] ratingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rating", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public modelPreRating[] rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerRecharges : modelGeneric {
        
        private modelListRecharges[] fieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fields", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public modelListRecharges[] fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerPromoAll : modelGeneric {
        
        private modelPromotions[] promotionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("promotions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public modelPromotions[] promotions {
            get {
                return this.promotionsField;
            }
            set {
                this.promotionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerService : modelGeneric {
        
        private modelServiceAggr[] fieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fields", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public modelServiceAggr[] fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerPromoBags : modelGeneric {
        
        private string billingProfileField;
        
        private string billingTypeField;
        
        private string creditField;
        
        private string hasAnyMovementsField;
        
        private string lastCreditUpdateField;
        
        private string pricePlanNameField;
        
        private mySubscriptionService[] promotionsField;
        
        private string typeOfLineField;
        
        private string visualPricePlanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string billingProfile {
            get {
                return this.billingProfileField;
            }
            set {
                this.billingProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string billingType {
            get {
                return this.billingTypeField;
            }
            set {
                this.billingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hasAnyMovements {
            get {
                return this.hasAnyMovementsField;
            }
            set {
                this.hasAnyMovementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastCreditUpdate {
            get {
                return this.lastCreditUpdateField;
            }
            set {
                this.lastCreditUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pricePlanName {
            get {
                return this.pricePlanNameField;
            }
            set {
                this.pricePlanNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("promotions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public mySubscriptionService[] promotions {
            get {
                return this.promotionsField;
            }
            set {
                this.promotionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string typeOfLine {
            get {
                return this.typeOfLineField;
            }
            set {
                this.typeOfLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string visualPricePlan {
            get {
                return this.visualPricePlanField;
            }
            set {
                this.visualPricePlanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerInfoMNPfull : modelGeneric {
        
        private rContainer espField;
        
        private rContainer fullField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer esp {
            get {
                return this.espField;
            }
            set {
                this.espField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainer full {
            get {
                return this.fullField;
            }
            set {
                this.fullField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerInfoUNP : rContainer {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerInfoSim : rContainer {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerHistoryUNP : rContainer {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.management.acoteltlc.com/")]
    public partial class rContainerCRMUnifiedInfo : rContainer {
        
        private rContainerHistoryUNP[] infoHistoryUNPField;
        
        private rContainerInfoMNPfull infoMNPField;
        
        private rContainerInfoSim infoSimField;
        
        private rContainerInfoUNP infoUNPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("infoHistoryUNP", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public rContainerHistoryUNP[] infoHistoryUNP {
            get {
                return this.infoHistoryUNPField;
            }
            set {
                this.infoHistoryUNPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainerInfoMNPfull infoMNP {
            get {
                return this.infoMNPField;
            }
            set {
                this.infoMNPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainerInfoSim infoSim {
            get {
                return this.infoSimField;
            }
            set {
                this.infoSimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rContainerInfoUNP infoUNP {
            get {
                return this.infoUNPField;
            }
            set {
                this.infoUNPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void cancelDeactivateLineSchedCompletedEventHandler(object sender, cancelDeactivateLineSchedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelDeactivateLineSchedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelDeactivateLineSchedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void changeCustomerCompletedEventHandler(object sender, changeCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void changeCustomerPricePlanCompletedEventHandler(object sender, changeCustomerPricePlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeCustomerPricePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeCustomerPricePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void changeCustomerPricePlanBagCompletedEventHandler(object sender, changeCustomerPricePlanBagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeCustomerPricePlanBagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeCustomerPricePlanBagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void createSaidCompletedEventHandler(object sender, createSaidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void creditTransferCompletedEventHandler(object sender, creditTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class creditTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal creditTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void creditTransferFromDeactivatedCompletedEventHandler(object sender, creditTransferFromDeactivatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class creditTransferFromDeactivatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal creditTransferFromDeactivatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void deactivateLineSchedCompletedEventHandler(object sender, deactivateLineSchedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deactivateLineSchedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deactivateLineSchedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void forcePromotionRenewalCompletedEventHandler(object sender, forcePromotionRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forcePromotionRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forcePromotionRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getActivablePricePlanCompletedEventHandler(object sender, getActivablePricePlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActivablePricePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActivablePricePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerService Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getActivablePromoCompletedEventHandler(object sender, getActivablePromoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActivablePromoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActivablePromoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerService Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getActivablePromoCRMCompletedEventHandler(object sender, getActivablePromoCRMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActivablePromoCRMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActivablePromoCRMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerService Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getAllPromotionsCompletedEventHandler(object sender, getAllPromotionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPromotionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPromotionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerPromoAll Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerPromoAll)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getAllStatusSimCompletedEventHandler(object sender, getAllStatusSimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllStatusSimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllStatusSimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getBlacklistInfoCompletedEventHandler(object sender, getBlacklistInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBlacklistInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBlacklistInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getCRMUnifiedInfoCompletedEventHandler(object sender, getCRMUnifiedInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCRMUnifiedInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCRMUnifiedInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerCRMUnifiedInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerCRMUnifiedInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getCustomerPromotionBookingCompletedEventHandler(object sender, getCustomerPromotionBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerPromotionBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerPromotionBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerBookingPromo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerBookingPromo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getDeactivateLineSchedCompletedEventHandler(object sender, getDeactivateLineSchedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDeactivateLineSchedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDeactivateLineSchedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getDeactivatedUserProfileCompletedEventHandler(object sender, getDeactivatedUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDeactivatedUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDeactivatedUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerPromoBags Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerPromoBags)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getHistoryMNPCompletedEventHandler(object sender, getHistoryMNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHistoryMNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHistoryMNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerHistoryMNP Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerHistoryMNP)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getHistorySIMCompletedEventHandler(object sender, getHistorySIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHistorySIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHistorySIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getHistoryUNPCompletedEventHandler(object sender, getHistoryUNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHistoryUNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHistoryUNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getInfoMNPCompletedEventHandler(object sender, getInfoMNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoMNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoMNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerInfoMNPfull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerInfoMNPfull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getInfoSAIDCompletedEventHandler(object sender, getInfoSAIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoSAIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoSAIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getInfoSimCompletedEventHandler(object sender, getInfoSimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoSimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoSimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getInfoSimByICCIDCompletedEventHandler(object sender, getInfoSimByICCIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoSimByICCIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoSimByICCIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getInfoSimByMSISDNCompletedEventHandler(object sender, getInfoSimByMSISDNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoSimByMSISDNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoSimByMSISDNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getInfoUNPCompletedEventHandler(object sender, getInfoUNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoUNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoUNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getMainBagCreditCompletedEventHandler(object sender, getMainBagCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMainBagCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMainBagCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getMainBagCreditFullCompletedEventHandler(object sender, getMainBagCreditFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMainBagCreditFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMainBagCreditFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getMnpStatusCompletedEventHandler(object sender, getMnpStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMnpStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMnpStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getMsisdnPreRatingCompletedEventHandler(object sender, getMsisdnPreRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMsisdnPreRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMsisdnPreRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerPreRatingList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerPreRatingList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getMsisdnPromoBagsCompletedEventHandler(object sender, getMsisdnPromoBagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMsisdnPromoBagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMsisdnPromoBagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerPromoBags Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerPromoBags)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getPinVoiceMailCompletedEventHandler(object sender, getPinVoiceMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPinVoiceMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPinVoiceMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getPrincipalCreditCompletedEventHandler(object sender, getPrincipalCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPrincipalCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPrincipalCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getRechargesListCompletedEventHandler(object sender, getRechargesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRechargesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRechargesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerRecharges Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerRecharges)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getReferenceCompletedEventHandler(object sender, getReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getSIMResearchCompletedEventHandler(object sender, getSIMResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSIMResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSIMResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getSIMSoftwaresCompletedEventHandler(object sender, getSIMSoftwaresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSIMSoftwaresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSIMSoftwaresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getSaidListCompletedEventHandler(object sender, getSaidListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSaidListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSaidListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerInfoSaid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerInfoSaid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getSimByTaxCodeCompletedEventHandler(object sender, getSimByTaxCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSimByTaxCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSimByTaxCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getStatusBidCompletedEventHandler(object sender, getStatusBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getUserPreRatingCompletedEventHandler(object sender, getUserPreRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserPreRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserPreRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerPreRatingList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerPreRatingList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getUserPromoBagsCompletedEventHandler(object sender, getUserPromoBagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserPromoBagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserPromoBagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerPromoBags Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerPromoBags)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getUserPromoBagsByICCIDCompletedEventHandler(object sender, getUserPromoBagsByICCIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserPromoBagsByICCIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserPromoBagsByICCIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerPromoBags Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerPromoBags)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void manageReferenceCompletedEventHandler(object sender, manageReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class manageReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal manageReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void manageSCECompletedEventHandler(object sender, manageSCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class manageSCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal manageSCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainerSCE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainerSCE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void rechargeAuxMoneyBagCompletedEventHandler(object sender, rechargeAuxMoneyBagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeAuxMoneyBagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeAuxMoneyBagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void rechargeAuxMoneyBagIdCompletedEventHandler(object sender, rechargeAuxMoneyBagIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeAuxMoneyBagIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeAuxMoneyBagIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void rechargeCancelCompletedEventHandler(object sender, rechargeCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void rechargeManualRefundCompletedEventHandler(object sender, rechargeManualRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeManualRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeManualRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void rechargeUserCompletedEventHandler(object sender, rechargeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void rechargeUserFastCompletedEventHandler(object sender, rechargeUserFastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeUserFastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeUserFastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void rechargeUserIdCompletedEventHandler(object sender, rechargeUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void refundAuxMoneyBagCompletedEventHandler(object sender, refundAuxMoneyBagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refundAuxMoneyBagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refundAuxMoneyBagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void removePromotionBookingCompletedEventHandler(object sender, removePromotionBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removePromotionBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removePromotionBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void setMsisdnPreRatingCompletedEventHandler(object sender, setMsisdnPreRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setMsisdnPreRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setMsisdnPreRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void setPinVoiceMailCompletedEventHandler(object sender, setPinVoiceMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPinVoiceMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPinVoiceMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void setUserPreRatingCompletedEventHandler(object sender, setUserPreRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUserPreRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUserPreRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void unbindTMPmsisdnCompletedEventHandler(object sender, unbindTMPmsisdnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unbindTMPmsisdnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unbindTMPmsisdnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void unsubscribePromoCompletedEventHandler(object sender, unsubscribePromoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unsubscribePromoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unsubscribePromoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void unsubscribePromotionCompletedEventHandler(object sender, unsubscribePromotionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unsubscribePromotionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unsubscribePromotionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void updatePersonalDataCompletedEventHandler(object sender, updatePersonalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePersonalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePersonalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rContainer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rContainer)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591