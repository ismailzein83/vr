<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.Fzero.FraudAnalysis.BP.CancelStrategyExecutionProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbe="clr-namespace:Vanrise.BusinessProcess.Entities;assembly=Vanrise.BusinessProcess.Entities"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:vc="clr-namespace:Vanrise.Common;assembly=Vanrise.Common"
 xmlns:vffba="clr-namespace:Vanrise.Fzero.FraudAnalysis.BP.Arguments;assembly=Vanrise.Fzero.FraudAnalysis.BP.Arguments"
 xmlns:vffba1="clr-namespace:Vanrise.Fzero.FraudAnalysis.BP.Activities;assembly=Vanrise.Fzero.FraudAnalysis.BP.Activities"
 xmlns:vffe="clr-namespace:Vanrise.Fzero.FraudAnalysis.Entities;assembly=Vanrise.Fzero.FraudAnalysis.Entities"
 xmlns:vffm="clr-namespace:Vanrise.Fzero.FraudAnalysis.MainExtensions;assembly=Vanrise.Fzero.FraudAnalysis.MainExtensions"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vffba:CancelStrategyExecutionProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.Fzero.FraudAnalysis.BP.CancelStrategyExecutionProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Queueing</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.Fzero.FraudAnalysis.BP.Arguments</x:String>
      <x:String>Vanrise.Fzero.FraudAnalysis.Entities</x:String>
      <x:String>Vanrise.Fzero.FraudAnalysis.MainExtensions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.MainExtensions</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Security.Data</AssemblyReference>
      <AssemblyReference>Vanrise.Security.Entities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.CDRImport.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.CDRImport.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.Business</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.MainExtensions</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="vffe:SuspicionOccuranceStatus" Name="strategyExecutionStatus" />
    </Sequence.Variables>
    <vbw:WriteTrackingMessage Severity="{x:Null}" sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_1" Message="Strated Strategy Execution Cancellation" />
    <vffba1:GetStrategyExecutionStatus sap2010:WorkflowViewState.IdRef="GetStrategyExecutionStatus_1">
      <vffba1:GetStrategyExecutionStatus.Status>
        <OutArgument x:TypeArguments="vffe:SuspicionOccuranceStatus">
          <mca:CSharpReference x:TypeArguments="vffe:SuspicionOccuranceStatus">strategyExecutionStatus</mca:CSharpReference>
        </OutArgument>
      </vffba1:GetStrategyExecutionStatus.Status>
      <vffba1:GetStrategyExecutionStatus.StrategyExecutionId>
        <InArgument x:TypeArguments="x:Int64">
          <mca:CSharpValue x:TypeArguments="x:Int64">Input.StrategyExecutionId</mca:CSharpValue>
        </InArgument>
      </vffba1:GetStrategyExecutionStatus.StrategyExecutionId>
    </vffba1:GetStrategyExecutionStatus>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">(strategyExecutionStatus != SuspicionOccuranceStatus.Cancelled)</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:List(vffe:StrategyExecutionItem)" Name="items" />
            <Variable x:TypeArguments="scg:List(vffe:StrategyExecutionItem)" Name="itemsofCases" />
            <Variable x:TypeArguments="scg:List(vffe:AccountCase)" Name="cases" />
            <Variable x:TypeArguments="vffm:BPTaskConfirmCancelStrategyonCaseCount" Name="executionInformation" />
          </Sequence.Variables>
          <vffba1:GetStrategyExecutionItemswithCases sap2010:WorkflowViewState.IdRef="GetStrategyExecutionItemswithCases_1">
            <vffba1:GetStrategyExecutionItemswithCases.Cases>
              <InOutArgument x:TypeArguments="scg:List(vffe:AccountCase)">
                <mca:CSharpReference x:TypeArguments="scg:List(vffe:AccountCase)">cases</mca:CSharpReference>
              </InOutArgument>
            </vffba1:GetStrategyExecutionItemswithCases.Cases>
            <vffba1:GetStrategyExecutionItemswithCases.Items>
              <InOutArgument x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">
                <mca:CSharpReference x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">items</mca:CSharpReference>
              </InOutArgument>
            </vffba1:GetStrategyExecutionItemswithCases.Items>
            <vffba1:GetStrategyExecutionItemswithCases.ItemsofCases>
              <InOutArgument x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">
                <mca:CSharpReference x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">itemsofCases</mca:CSharpReference>
              </InOutArgument>
            </vffba1:GetStrategyExecutionItemswithCases.ItemsofCases>
            <vffba1:GetStrategyExecutionItemswithCases.StrategyExecutionId>
              <InArgument x:TypeArguments="x:Int64">
                <mca:CSharpValue x:TypeArguments="x:Int64">Input.StrategyExecutionId</mca:CSharpValue>
              </InArgument>
            </vffba1:GetStrategyExecutionItemswithCases.StrategyExecutionId>
          </vffba1:GetStrategyExecutionItemswithCases>
          <vbw:AssignTask x:TypeArguments="vffm:BPTaskConfirmCancelStrategyonCaseCount" ExecutedTask="{x:Null}" sap2010:WorkflowViewState.IdRef="AssignTask`1_2">
            <vbw:AssignTask.AssignedTo>
              <InArgument x:TypeArguments="vbe:BPTaskAssignee">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskAssignee">new Vanrise.BusinessProcess.MainExtensions.InitiatorBPTaskAssignee()</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.AssignedTo>
            <vbw:AssignTask.TaskData>
              <InArgument x:TypeArguments="vbe:BPTaskData">
                <mca:CSharpValue x:TypeArguments="vbe:BPTaskData" xml:space="preserve">new Vanrise.Fzero.FraudAnalysis.MainExtensions.BPTaskDataConfirmCancelStrategyonCaseCount() {   Content=string.Format("Number of Closed Cases: {0}." , cases.Where(x=&gt;x.StatusID == CaseStatus.ClosedFraud || x.StatusID == CaseStatus.ClosedWhiteList).Count()) }</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.TaskData>
            <vbw:AssignTask.TaskExecutionInformation>
              <OutArgument x:TypeArguments="vffm:BPTaskConfirmCancelStrategyonCaseCount">
                <mca:CSharpReference x:TypeArguments="vffm:BPTaskConfirmCancelStrategyonCaseCount">executionInformation</mca:CSharpReference>
              </OutArgument>
            </vbw:AssignTask.TaskExecutionInformation>
            <vbw:AssignTask.TaskTitle>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">string.Format("Confirm Cancellation")</mca:CSharpValue>
              </InArgument>
            </vbw:AssignTask.TaskTitle>
          </vbw:AssignTask>
          <If sap2010:WorkflowViewState.IdRef="If_2">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">executionInformation.Continue</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
                <Parallel.Variables>
                  <Variable x:TypeArguments="vq:BaseQueue(vffe:CancellingStrategyExecutionBatch)" Name="cancellingStrategyExecutionBatch" />
                  <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="processStrategyExecutionCancellationActivityStatus" />
                </Parallel.Variables>
                <vffba1:ProcessStrategyExecutionCancellation sap2010:WorkflowViewState.IdRef="ProcessStrategyExecutionCancellation_1">
                  <vffba1:ProcessStrategyExecutionCancellation.Cases>
                    <InArgument x:TypeArguments="scg:List(vffe:AccountCase)">
                      <mca:CSharpValue x:TypeArguments="scg:List(vffe:AccountCase)">cases</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ProcessStrategyExecutionCancellation.Cases>
                  <vffba1:ProcessStrategyExecutionCancellation.Items>
                    <InArgument x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">
                      <mca:CSharpValue x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">items</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ProcessStrategyExecutionCancellation.Items>
                  <vffba1:ProcessStrategyExecutionCancellation.ItemsofCases>
                    <InArgument x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">
                      <mca:CSharpValue x:TypeArguments="scg:List(vffe:StrategyExecutionItem)">itemsofCases</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ProcessStrategyExecutionCancellation.ItemsofCases>
                  <vffba1:ProcessStrategyExecutionCancellation.OutputQueue>
                    <InOutArgument x:TypeArguments="vq:BaseQueue(vffe:CancellingStrategyExecutionBatch)">
                      <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vffe:CancellingStrategyExecutionBatch)">cancellingStrategyExecutionBatch</mca:CSharpReference>
                    </InOutArgument>
                  </vffba1:ProcessStrategyExecutionCancellation.OutputQueue>
                  <vffba1:ProcessStrategyExecutionCancellation.Status>
                    <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                      <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">processStrategyExecutionCancellationActivityStatus</mca:CSharpReference>
                    </OutArgument>
                  </vffba1:ProcessStrategyExecutionCancellation.Status>
                  <vffba1:ProcessStrategyExecutionCancellation.StrategyExecutionId>
                    <InArgument x:TypeArguments="x:Int64">
                      <mca:CSharpValue x:TypeArguments="x:Int64">Input.StrategyExecutionId</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ProcessStrategyExecutionCancellation.StrategyExecutionId>
                  <vffba1:ProcessStrategyExecutionCancellation.UserId>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">Input.UserId</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ProcessStrategyExecutionCancellation.UserId>
                </vffba1:ProcessStrategyExecutionCancellation>
                <vffba1:ApplyStrategyExecutionCancellation Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyStrategyExecutionCancellation_1">
                  <vffba1:ApplyStrategyExecutionCancellation.InputQueue>
                    <InArgument x:TypeArguments="vq:BaseQueue(vffe:CancellingStrategyExecutionBatch)">
                      <mca:CSharpValue x:TypeArguments="vq:BaseQueue(vffe:CancellingStrategyExecutionBatch)">cancellingStrategyExecutionBatch</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ApplyStrategyExecutionCancellation.InputQueue>
                  <vffba1:ApplyStrategyExecutionCancellation.PreviousActivityStatus>
                    <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                      <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">processStrategyExecutionCancellationActivityStatus</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ApplyStrategyExecutionCancellation.PreviousActivityStatus>
                  <vffba1:ApplyStrategyExecutionCancellation.UserId>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">Input.UserId</mca:CSharpValue>
                    </InArgument>
                  </vffba1:ApplyStrategyExecutionCancellation.UserId>
                </vffba1:ApplyStrategyExecutionCancellation>
              </Parallel>
            </If.Then>
            <If.Else>
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1">
                <TerminateWorkflow.Reason>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">String.Format("Cancelling strategy execution stopped due to rejection by Initiator")</mca:CSharpValue>
                  </InArgument>
                </TerminateWorkflow.Reason>
              </TerminateWorkflow>
            </If.Else>
          </If>
          <vbw:WriteTrackingMessage Severity="{x:Null}" sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_4">
            <vbw:WriteTrackingMessage.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">String.Format("Value Continue in Execution Information: {0}'", executionInformation.Continue)</mca:CSharpValue>
              </InArgument>
            </vbw:WriteTrackingMessage.Message>
          </vbw:WriteTrackingMessage>
        </Sequence>
      </If.Then>
      <If.Else>
        <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_3" Message="Strategy execution already cancelled">
          <vbw:WriteTrackingMessage.Severity>
            <InArgument x:TypeArguments="s:Nullable(vc:LogEntryType)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(vc:LogEntryType)">Vanrise.Common.LogEntryType.Error</mca:CSharpValue>
            </InArgument>
          </vbw:WriteTrackingMessage.Severity>
        </vbw:WriteTrackingMessage>
      </If.Else>
    </If>
    <vbw:WriteTrackingMessage Severity="{x:Null}" sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_2" Message="Finished Strategy Execution Cancellation" />
    <sads:DebugSymbol.Symbol>d1VDOlxURlNcQ0RSQW5hbHlzaXNcVmFucmlzZS5GemVyby5GcmF1ZEFuYWx5c2lzLkJQXENhbmNlbFN0cmF0ZWd5RXhlY3V0aW9uUHJvY2Vzcy54YW1sK04D/AEOAgEBUgVSoAEDAcQBUwVeKQMBvQFfBfkBCgIBBPoBBfoBoQECAQJSdFKdAQMBxQFbC1thAwHBAVYLVn0DAb4BYgtiiQECAQVmCe4BFAIBDfEBCfcBJAIBCPoBdPoBngECAQNtC4IBNwMBoAGDAQuYARwDAYMBmQEL5gEQAgEW5wEL7QEmAgEO9AEP9AGBAQIBCvEBZPEBigECAQl/EX9nAwG2AXoRen8DAa8BdRF1eAMBqAFwEXBuAwGhAZABEZABjgEDAZkBiwERiwHvAgMBkgGVARGVAXQDAYsBhgERhgGdAQMBhAGcARGcAW0CARegAQ/bARoCASbeAQ/kASMCAR7qARHqAawBAgEPpQERyQE/AgFDygER2gE9AgEn4QEV4QGnAQIBH8EBF8EBbQIBerIBF7IBfQIBca0BF60BdgIBaLwBF7wBnQECAV+3ARe3AagBAgFWxgEXxgFgAgFNqAEXqAFsAgFE0gEX0gGVAQIBOs0BF80BoAECATHXARfXAWACASg=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteTrackingMessage_1" sap:VirtualizedContainerService.HintSize="1026,22" />
      <sap2010:ViewStateData Id="GetStrategyExecutionStatus_1" sap:VirtualizedContainerService.HintSize="1026,22" />
      <sap2010:ViewStateData Id="GetStrategyExecutionItemswithCases_1" sap:VirtualizedContainerService.HintSize="779,22" />
      <sap2010:ViewStateData Id="AssignTask`1_2" sap:VirtualizedContainerService.HintSize="779,22" />
      <sap2010:ViewStateData Id="ProcessStrategyExecutionCancellation_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyStrategyExecutionCancellation_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="554,86" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="779,236" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_4" sap:VirtualizedContainerService.HintSize="779,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="801,546">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1026,696" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_2" sap:VirtualizedContainerService.HintSize="1026,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1048,1006">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.Fzero.FraudAnalysis.BP.CancelStrategyExecutionProcess_1" sap:VirtualizedContainerService.HintSize="1088,1086" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>