<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.Fzero.FraudAnalysis.BP.ExecuteStrategyForNumberRangeProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:vc="clr-namespace:Vanrise.Common;assembly=Vanrise.Common"
 xmlns:vfcba="clr-namespace:Vanrise.Fzero.CDRImport.BP.Activities;assembly=Vanrise.Fzero.CDRImport.BP.Activities"
 xmlns:vfce="clr-namespace:Vanrise.Fzero.CDRImport.Entities;assembly=Vanrise.Fzero.CDRImport.Entities"
 xmlns:vffba="clr-namespace:Vanrise.Fzero.FraudAnalysis.BP.Arguments;assembly=Vanrise.Fzero.FraudAnalysis.BP.Arguments"
 xmlns:vffba1="clr-namespace:Vanrise.Fzero.FraudAnalysis.BP.Activities;assembly=Vanrise.Fzero.FraudAnalysis.BP.Activities"
 xmlns:vffe="clr-namespace:Vanrise.Fzero.FraudAnalysis.Entities;assembly=Vanrise.Fzero.FraudAnalysis.Entities"
 xmlns:vq="clr-namespace:Vanrise.Queueing;assembly=Vanrise.Queueing"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vffba:ExecuteStrategyForNumberRangeProcessInput)" />
    <x:Property Name="Output" Type="OutArgument(vffba:ExecuteStrategyForNumberRangeProcessOutput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.Fzero.FraudAnalysis.BP.ExecuteStrategyForNumberRangeProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Fzero.FraudAnalysis.BP.Arguments</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Security.Data</AssemblyReference>
      <AssemblyReference>Vanrise.Security.Entities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.CDRImport.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.CDRImport.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.Business</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.Fzero.FraudAnalysis.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(vffe:StrategyExecutionInfo)" Name="strategiesExecutionInfo" />
      <Variable x:TypeArguments="x:Int64" Name="processedCDRs" />
      <Variable x:TypeArguments="x:Int64" Name="numberOfSubscribers" />
      <Variable x:TypeArguments="x:Int64" Name="numberOfSuspicions" />
    </Sequence.Variables>
    <vffba1:ConvertStrategyExecItemsToInfos sap2010:WorkflowViewState.IdRef="ConvertStrategyExecItemsToInfos_1">
      <vffba1:ConvertStrategyExecItemsToInfos.StrategyExecutionInfos>
        <OutArgument x:TypeArguments="scg:List(vffe:StrategyExecutionInfo)">
          <mca:CSharpReference x:TypeArguments="scg:List(vffe:StrategyExecutionInfo)">strategiesExecutionInfo</mca:CSharpReference>
        </OutArgument>
      </vffba1:ConvertStrategyExecItemsToInfos.StrategyExecutionInfos>
      <vffba1:ConvertStrategyExecItemsToInfos.StrategyExecutionItems>
        <InArgument x:TypeArguments="scg:List(vffba:ExecuteStrategyExecutionItem)">
          <mca:CSharpValue x:TypeArguments="scg:List(vffba:ExecuteStrategyExecutionItem)">Input.StrategyExecutionItems</mca:CSharpValue>
        </InArgument>
      </vffba1:ConvertStrategyExecItemsToInfos.StrategyExecutionItems>
    </vffba1:ConvertStrategyExecItemsToInfos>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">strategiesExecutionInfo != null &amp;&amp; strategiesExecutionInfo.Count &gt; 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
            <Parallel.Variables>
              <Variable x:TypeArguments="vq:BaseQueue(vffe:NumberProfileBatch)" Name="numberProfileQueue" />
              <Variable x:TypeArguments="vq:BaseQueue(vffe:StrategyExecutionItemBatch)" Name="strategyExecutionDetailQueue" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="createNumberProfilesStatus" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="GetStrategyExecutionItemStatus" />
              <Variable x:TypeArguments="vq:BaseQueue(vffe:NumberProfileBatch)" Name="numberProfileToStoreQueue" />
              <Variable x:TypeArguments="vq:BaseQueue(vfce:CDRBatch)" Name="cdrQueue" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="loadCDRsStatus" />
              <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="preparedStrategyExecutionItemQueue" />
              <Variable x:TypeArguments="vq:BaseQueue(x:Object)" Name="preparedNumberProfilesQueue" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareStrategyExecutionItemStatus" />
              <Variable x:TypeArguments="vb:AsyncActivityStatus" Name="prepareNumberProfilesStatus" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="numberOfPrefixes" />
            </Parallel.Variables>
            <vfcba:LoadCDRs sap2010:WorkflowViewState.IdRef="LoadCDRs_2">
              <vfcba:LoadCDRs.FromDate>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">Input.FromDate</mca:CSharpValue>
                </InArgument>
              </vfcba:LoadCDRs.FromDate>
              <vfcba:LoadCDRs.NumberOfCDRs>
                <OutArgument x:TypeArguments="x:Int64">
                  <mca:CSharpReference x:TypeArguments="x:Int64">processedCDRs</mca:CSharpReference>
                </OutArgument>
              </vfcba:LoadCDRs.NumberOfCDRs>
              <vfcba:LoadCDRs.NumberPrefix>
                <InArgument x:TypeArguments="scg:List(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:List(x:String)">Input.NumberPrefixes</mca:CSharpValue>
                </InArgument>
              </vfcba:LoadCDRs.NumberPrefix>
              <vfcba:LoadCDRs.OutputQueue>
                <InOutArgument x:TypeArguments="vq:BaseQueue(vfce:CDRBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vfce:CDRBatch)">cdrQueue</mca:CSharpReference>
                </InOutArgument>
              </vfcba:LoadCDRs.OutputQueue>
              <vfcba:LoadCDRs.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">loadCDRsStatus</mca:CSharpReference>
                </OutArgument>
              </vfcba:LoadCDRs.Status>
              <vfcba:LoadCDRs.ToDate>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">Input.ToDate</mca:CSharpValue>
                </InArgument>
              </vfcba:LoadCDRs.ToDate>
            </vfcba:LoadCDRs>
            <vffba1:CreateNumberProfiles Parameters="{x:Null}" sap2010:WorkflowViewState.IdRef="CreateNumberProfiles_2">
              <vffba1:CreateNumberProfiles.FromDate>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">Input.FromDate</mca:CSharpValue>
                </InArgument>
              </vffba1:CreateNumberProfiles.FromDate>
              <vffba1:CreateNumberProfiles.IncludeWhiteList>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">Input.IncludeWhiteList</mca:CSharpValue>
                </InArgument>
              </vffba1:CreateNumberProfiles.IncludeWhiteList>
              <vffba1:CreateNumberProfiles.InputQueue>
                <InOutArgument x:TypeArguments="vq:BaseQueue(vfce:CDRBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vfce:CDRBatch)">cdrQueue</mca:CSharpReference>
                </InOutArgument>
              </vffba1:CreateNumberProfiles.InputQueue>
              <vffba1:CreateNumberProfiles.NumberOfSubscribers>
                <OutArgument x:TypeArguments="x:Int64">
                  <mca:CSharpReference x:TypeArguments="x:Int64">numberOfSubscribers</mca:CSharpReference>
                </OutArgument>
              </vffba1:CreateNumberProfiles.NumberOfSubscribers>
              <vffba1:CreateNumberProfiles.NumberPrefixes>
                <InArgument x:TypeArguments="scg:List(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:List(x:String)">Input.NumberPrefixes</mca:CSharpValue>
                </InArgument>
              </vffba1:CreateNumberProfiles.NumberPrefixes>
              <vffba1:CreateNumberProfiles.OutputQueue>
                <InOutArgument x:TypeArguments="vq:BaseQueue(vffe:NumberProfileBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vffe:NumberProfileBatch)">numberProfileQueue</mca:CSharpReference>
                </InOutArgument>
              </vffba1:CreateNumberProfiles.OutputQueue>
              <vffba1:CreateNumberProfiles.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">loadCDRsStatus</mca:CSharpValue>
                </InArgument>
              </vffba1:CreateNumberProfiles.PreviousActivityStatus>
              <vffba1:CreateNumberProfiles.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">createNumberProfilesStatus</mca:CSharpReference>
                </OutArgument>
              </vffba1:CreateNumberProfiles.Status>
              <vffba1:CreateNumberProfiles.StrategiesExecutionInfo>
                <InArgument x:TypeArguments="scg:List(vffe:StrategyExecutionInfo)">
                  <mca:CSharpValue x:TypeArguments="scg:List(vffe:StrategyExecutionInfo)">strategiesExecutionInfo</mca:CSharpValue>
                </InArgument>
              </vffba1:CreateNumberProfiles.StrategiesExecutionInfo>
              <vffba1:CreateNumberProfiles.ToDate>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">Input.ToDate</mca:CSharpValue>
                </InArgument>
              </vffba1:CreateNumberProfiles.ToDate>
            </vffba1:CreateNumberProfiles>
            <vffba1:GetStrategyExecutionItem sap2010:WorkflowViewState.IdRef="GetStrategyExecutionItem_1">
              <vffba1:GetStrategyExecutionItem.InputQueueForNumberProfile>
                <InArgument x:TypeArguments="vq:BaseQueue(vffe:NumberProfileBatch)">
                  <mca:CSharpValue x:TypeArguments="vq:BaseQueue(vffe:NumberProfileBatch)">numberProfileQueue</mca:CSharpValue>
                </InArgument>
              </vffba1:GetStrategyExecutionItem.InputQueueForNumberProfile>
              <vffba1:GetStrategyExecutionItem.NumberOfSuspicions>
                <OutArgument x:TypeArguments="x:Int64">
                  <mca:CSharpReference x:TypeArguments="x:Int64">numberOfSuspicions</mca:CSharpReference>
                </OutArgument>
              </vffba1:GetStrategyExecutionItem.NumberOfSuspicions>
              <vffba1:GetStrategyExecutionItem.OutputQueueForStrategyExecutionItem>
                <InOutArgument x:TypeArguments="vq:BaseQueue(vffe:StrategyExecutionItemBatch)">
                  <mca:CSharpReference x:TypeArguments="vq:BaseQueue(vffe:StrategyExecutionItemBatch)">strategyExecutionDetailQueue</mca:CSharpReference>
                </InOutArgument>
              </vffba1:GetStrategyExecutionItem.OutputQueueForStrategyExecutionItem>
              <vffba1:GetStrategyExecutionItem.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">createNumberProfilesStatus</mca:CSharpValue>
                </InArgument>
              </vffba1:GetStrategyExecutionItem.PreviousActivityStatus>
              <vffba1:GetStrategyExecutionItem.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">GetStrategyExecutionItemStatus</mca:CSharpReference>
                </OutArgument>
              </vffba1:GetStrategyExecutionItem.Status>
              <vffba1:GetStrategyExecutionItem.StrategiesExecutionInfo>
                <InArgument x:TypeArguments="scg:List(vffe:StrategyExecutionInfo)">
                  <mca:CSharpValue x:TypeArguments="scg:List(vffe:StrategyExecutionInfo)">strategiesExecutionInfo</mca:CSharpValue>
                </InArgument>
              </vffba1:GetStrategyExecutionItem.StrategiesExecutionInfo>
            </vffba1:GetStrategyExecutionItem>
            <vffba1:PrepareStrategyExecutionItemForDBApply sap2010:WorkflowViewState.IdRef="PrepareStrategyExecutionItemForDBApply_1">
              <vffba1:PrepareStrategyExecutionItemForDBApply.InputQueue>
                <InArgument x:TypeArguments="vq:BaseQueue(vffe:StrategyExecutionItemBatch)">
                  <mca:CSharpValue x:TypeArguments="vq:BaseQueue(vffe:StrategyExecutionItemBatch)">strategyExecutionDetailQueue</mca:CSharpValue>
                </InArgument>
              </vffba1:PrepareStrategyExecutionItemForDBApply.InputQueue>
              <vffba1:PrepareStrategyExecutionItemForDBApply.OutputQueue>
                <InOutArgument x:TypeArguments="vq:BaseQueue(x:Object)">
                  <mca:CSharpReference x:TypeArguments="vq:BaseQueue(x:Object)">preparedStrategyExecutionItemQueue</mca:CSharpReference>
                </InOutArgument>
              </vffba1:PrepareStrategyExecutionItemForDBApply.OutputQueue>
              <vffba1:PrepareStrategyExecutionItemForDBApply.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">GetStrategyExecutionItemStatus</mca:CSharpValue>
                </InArgument>
              </vffba1:PrepareStrategyExecutionItemForDBApply.PreviousActivityStatus>
              <vffba1:PrepareStrategyExecutionItemForDBApply.Status>
                <OutArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpReference x:TypeArguments="vb:AsyncActivityStatus">prepareStrategyExecutionItemStatus</mca:CSharpReference>
                </OutArgument>
              </vffba1:PrepareStrategyExecutionItemForDBApply.Status>
            </vffba1:PrepareStrategyExecutionItemForDBApply>
            <vffba1:ApplyStrategyExecutionItemToDB Status="{x:Null}" sap2010:WorkflowViewState.IdRef="ApplyStrategyExecutionItemToDB_1">
              <vffba1:ApplyStrategyExecutionItemToDB.InputQueue>
                <InArgument x:TypeArguments="vq:BaseQueue(x:Object)">
                  <mca:CSharpValue x:TypeArguments="vq:BaseQueue(x:Object)">preparedStrategyExecutionItemQueue</mca:CSharpValue>
                </InArgument>
              </vffba1:ApplyStrategyExecutionItemToDB.InputQueue>
              <vffba1:ApplyStrategyExecutionItemToDB.PreviousActivityStatus>
                <InArgument x:TypeArguments="vb:AsyncActivityStatus">
                  <mca:CSharpValue x:TypeArguments="vb:AsyncActivityStatus">prepareStrategyExecutionItemStatus</mca:CSharpValue>
                </InArgument>
              </vffba1:ApplyStrategyExecutionItemToDB.PreviousActivityStatus>
            </vffba1:ApplyStrategyExecutionItemToDB>
          </Parallel>
        </Sequence>
      </If.Then>
      <If.Else>
        <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_1" Message="All Strategies are disabled">
          <vbw:WriteTrackingMessage.Severity>
            <InArgument x:TypeArguments="s:Nullable(vc:LogEntryType)">
              <mca:CSharpValue x:TypeArguments="s:Nullable(vc:LogEntryType)">Vanrise.Common.LogEntryType.Warning</mca:CSharpValue>
            </InArgument>
          </vbw:WriteTrackingMessage.Severity>
        </vbw:WriteTrackingMessage>
      </If.Else>
    </If>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="vffba:ExecuteStrategyForNumberRangeProcessOutput">
          <mca:CSharpReference x:TypeArguments="vffba:ExecuteStrategyForNumberRangeProcessOutput">Output</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="vffba:ExecuteStrategyForNumberRangeProcessOutput">
          <mca:CSharpValue x:TypeArguments="vffba:ExecuteStrategyForNumberRangeProcessOutput" xml:space="preserve">new ExecuteStrategyForNumberRangeProcessOutput {  
                CDRsProcessed = processedCDRs,
                NumberOfSubscribers = numberOfSubscribers,
                NumberOfSuspicions = numberOfSuspicions
            }</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <sads:DebugSymbol.Symbol>d1tDOlxURlNcQ0RSQW5hbHlzaXNcVmFucmlzZS5GemVyby5GcmF1ZEFuYWx5c2lzLkJQXEV4ZWN1dGVTdHJhdGVneUZvck51bWJlclJhbmdlUHJvY2Vzcy54YW1sL0kDpwIOAgEBUAVbLgMBvQRcBZUCCgIBEZYCBaUCDgIBAlMLU4QBAwHFBFgLWIkBAwG+BF8LX5kBAgESYwmKAhQCASKNAgmTAiQCARmeAguiAiACAQqZAguZAn8CAQNkC4kCFgIBI5ACD5ACgwECARuNAmSNAoEBAgEacw2SAR4DAcoDkwENxgErAwGLAscBDeYBLwMBmAHnAQ38AT0CAUv9AQ2IAjUCASR7E3tlAwGqBIABE4ABbwMBlwR2E3ZhAwGEBIoBE4oBdQMB8QOFAROFAXQDAd4DjwETjwFfAwHLA6UBE6UBawMBtwO0ARO0AW0DAaQDoAEToAF0AwGRA74BE74BhAEDAf4CqgETqgFvAwHrApYBE5YBYQMB2AK5ARO5AYEBAwHFAq8BE68BiAEDAbICmwETmwFoAwGfAsMBE8MBXwMBjALPARPPAWoDAfgBygETygGAAQMB5QHZARPZAXkDAdIB4wET4wGEAQMBvwHeARPeAYUBAwGsAdQBE9QBmgEDAZkB9AET9AF9AwGFAeoBE+oBkgECAXL5ARP5AYkBAgFf7wET7wGJAQIBTIUCE4UCgQECATiAAhOAAoEBAgEl</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ConvertStrategyExecItemsToInfos_1" sap:VirtualizedContainerService.HintSize="1521,22" />
      <sap2010:ViewStateData Id="LoadCDRs_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="CreateNumberProfiles_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="GetStrategyExecutionItem_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="PrepareStrategyExecutionItemForDBApply_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ApplyStrategyExecutionItemToDB_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="1274,86" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1296,210">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTrackingMessage_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1521,360" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="1521,62" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="1543,648">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.Fzero.FraudAnalysis.BP.ExecuteStrategyForNumberRangeProcess_1" sap:VirtualizedContainerService.HintSize="1583,728" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>