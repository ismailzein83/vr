<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.Reprocess.BP.ReProcessingCommitChangesProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:ve="clr-namespace:Vanrise.Entities;assembly=Vanrise.Entities"
 xmlns:vrba="clr-namespace:Vanrise.Reprocess.BP.Arguments;assembly=Vanrise.Reprocess.BP.Arguments"
 xmlns:vrba1="clr-namespace:Vanrise.Reprocess.BP.Activities;assembly=Vanrise.Reprocess.BP.Activities"
 xmlns:vre="clr-namespace:Vanrise.Reprocess.Entities;assembly=Vanrise.Reprocess.Entities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vrba:ReProcessingCommitChangesProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.Reprocess.BP.ReProcessingCommitChangesProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Reprocess.BP.Arguments</x:String>
      <x:String>Vanrise.Reprocess.Entities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="vre:ReprocessDefinition" Name="reprocessDefinition" />
      <Variable x:TypeArguments="vre:IReprocessStageActivator" Name="stageActivator" />
      <Variable x:TypeArguments="s:Nullable(x:Int32)" Name="storageRowCount" />
      <Variable x:TypeArguments="x:TimeSpan" Name="batchesTimeSpan" />
      <Variable x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)" Name="dateTimeRanges" />
    </Sequence.Variables>
    <vrba1:GetReprocessDefinition sap2010:WorkflowViewState.IdRef="GetReprocessDefinition_1">
      <vrba1:GetReprocessDefinition.ReprocessDefinition>
        <OutArgument x:TypeArguments="vre:ReprocessDefinition">
          <mca:CSharpReference x:TypeArguments="vre:ReprocessDefinition">reprocessDefinition</mca:CSharpReference>
        </OutArgument>
      </vrba1:GetReprocessDefinition.ReprocessDefinition>
      <vrba1:GetReprocessDefinition.ReprocessDefinitionId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">Input.ReprocessDefinitionId</mca:CSharpValue>
        </InArgument>
      </vrba1:GetReprocessDefinition.ReprocessDefinitionId>
    </vrba1:GetReprocessDefinition>
    <vrba1:GetStageActivator sap2010:WorkflowViewState.IdRef="GetStageActivator_1">
      <vrba1:GetStageActivator.ReprocessDefinition>
        <InArgument x:TypeArguments="vre:ReprocessDefinition">
          <mca:CSharpValue x:TypeArguments="vre:ReprocessDefinition">reprocessDefinition</mca:CSharpValue>
        </InArgument>
      </vrba1:GetStageActivator.ReprocessDefinition>
      <vrba1:GetStageActivator.StageActivator>
        <OutArgument x:TypeArguments="vre:IReprocessStageActivator">
          <mca:CSharpReference x:TypeArguments="vre:IReprocessStageActivator">stageActivator</mca:CSharpReference>
        </OutArgument>
      </vrba1:GetStageActivator.StageActivator>
      <vrba1:GetStageActivator.StageName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">Input.StageName</mca:CSharpValue>
        </InArgument>
      </vrba1:GetStageActivator.StageName>
    </vrba1:GetStageActivator>
    <vrba1:GetStageStorageRowCount sap2010:WorkflowViewState.IdRef="GetStageStorageRowCount_1">
      <vrba1:GetStageStorageRowCount.InitializationOutputByStage>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)">Input.InitializationOutputByStage</mca:CSharpValue>
        </InArgument>
      </vrba1:GetStageStorageRowCount.InitializationOutputByStage>
      <vrba1:GetStageStorageRowCount.StageActivator>
        <InArgument x:TypeArguments="vre:IReprocessStageActivator">
          <mca:CSharpValue x:TypeArguments="vre:IReprocessStageActivator">stageActivator</mca:CSharpValue>
        </InArgument>
      </vrba1:GetStageStorageRowCount.StageActivator>
      <vrba1:GetStageStorageRowCount.StageName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">Input.StageName</mca:CSharpValue>
        </InArgument>
      </vrba1:GetStageStorageRowCount.StageName>
      <vrba1:GetStageStorageRowCount.StorageRowCount>
        <OutArgument x:TypeArguments="s:Nullable(x:Int32)">
          <mca:CSharpReference x:TypeArguments="s:Nullable(x:Int32)">storageRowCount</mca:CSharpReference>
        </OutArgument>
      </vrba1:GetStageStorageRowCount.StorageRowCount>
    </vrba1:GetStageStorageRowCount>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">storageRowCount.HasValue</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <If sap2010:WorkflowViewState.IdRef="If_2">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">storageRowCount.Value &gt; 0</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                <vrba1:ComputeBatchesTimeSpan sap2010:WorkflowViewState.IdRef="ComputeBatchesTimeSpan_1">
                  <vrba1:ComputeBatchesTimeSpan.BatchesTimeSpan>
                    <OutArgument x:TypeArguments="x:TimeSpan">
                      <mca:CSharpReference x:TypeArguments="x:TimeSpan">batchesTimeSpan</mca:CSharpReference>
                    </OutArgument>
                  </vrba1:ComputeBatchesTimeSpan.BatchesTimeSpan>
                  <vrba1:ComputeBatchesTimeSpan.From>
                    <InArgument x:TypeArguments="s:DateTime">
                      <mca:CSharpValue x:TypeArguments="s:DateTime">Input.From</mca:CSharpValue>
                    </InArgument>
                  </vrba1:ComputeBatchesTimeSpan.From>
                  <vrba1:ComputeBatchesTimeSpan.StorageRowCount>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">storageRowCount.Value</mca:CSharpValue>
                    </InArgument>
                  </vrba1:ComputeBatchesTimeSpan.StorageRowCount>
                  <vrba1:ComputeBatchesTimeSpan.To>
                    <InArgument x:TypeArguments="s:DateTime">
                      <mca:CSharpValue x:TypeArguments="s:DateTime">Input.To</mca:CSharpValue>
                    </InArgument>
                  </vrba1:ComputeBatchesTimeSpan.To>
                </vrba1:ComputeBatchesTimeSpan>
                <vbw:GenerateDateTimeRanges sap2010:WorkflowViewState.IdRef="GenerateDateTimeRanges_1">
                  <vbw:GenerateDateTimeRanges.DateTimeRanges>
                    <OutArgument x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">
                      <mca:CSharpReference x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">dateTimeRanges</mca:CSharpReference>
                    </OutArgument>
                  </vbw:GenerateDateTimeRanges.DateTimeRanges>
                  <vbw:GenerateDateTimeRanges.From>
                    <InArgument x:TypeArguments="s:DateTime">
                      <mca:CSharpValue x:TypeArguments="s:DateTime">Input.From</mca:CSharpValue>
                    </InArgument>
                  </vbw:GenerateDateTimeRanges.From>
                  <vbw:GenerateDateTimeRanges.TimeSpan>
                    <InArgument x:TypeArguments="x:TimeSpan">
                      <mca:CSharpValue x:TypeArguments="x:TimeSpan">batchesTimeSpan</mca:CSharpValue>
                    </InArgument>
                  </vbw:GenerateDateTimeRanges.TimeSpan>
                  <vbw:GenerateDateTimeRanges.To>
                    <InArgument x:TypeArguments="s:DateTime">
                      <mca:CSharpValue x:TypeArguments="s:DateTime">Input.To</mca:CSharpValue>
                    </InArgument>
                  </vbw:GenerateDateTimeRanges.To>
                </vbw:GenerateDateTimeRanges>
                <ForEach x:TypeArguments="ve:DateTimeRange" DisplayName="ForEach&lt;DateTimeRange&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
                  <ForEach.Values>
                    <InArgument x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">dateTimeRanges.Reverse()</mca:CSharpValue>
                    </InArgument>
                  </ForEach.Values>
                  <ActivityAction x:TypeArguments="ve:DateTimeRange">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ve:DateTimeRange" Name="item" />
                    </ActivityAction.Argument>
                    <vrba1:CommitChanges sap2010:WorkflowViewState.IdRef="CommitChanges_1">
                      <vrba1:CommitChanges.From>
                        <InArgument x:TypeArguments="s:DateTime">
                          <mca:CSharpValue x:TypeArguments="s:DateTime">item.From</mca:CSharpValue>
                        </InArgument>
                      </vrba1:CommitChanges.From>
                      <vrba1:CommitChanges.InitializationOutputByStage>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)">Input.InitializationOutputByStage</mca:CSharpValue>
                        </InArgument>
                      </vrba1:CommitChanges.InitializationOutputByStage>
                      <vrba1:CommitChanges.StageActivator>
                        <InArgument x:TypeArguments="vre:IReprocessStageActivator">
                          <mca:CSharpValue x:TypeArguments="vre:IReprocessStageActivator">stageActivator</mca:CSharpValue>
                        </InArgument>
                      </vrba1:CommitChanges.StageActivator>
                      <vrba1:CommitChanges.StageName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">Input.StageName</mca:CSharpValue>
                        </InArgument>
                      </vrba1:CommitChanges.StageName>
                      <vrba1:CommitChanges.To>
                        <InArgument x:TypeArguments="s:DateTime">
                          <mca:CSharpValue x:TypeArguments="s:DateTime">item.To</mca:CSharpValue>
                        </InArgument>
                      </vrba1:CommitChanges.To>
                    </vrba1:CommitChanges>
                  </ActivityAction>
                </ForEach>
              </Sequence>
            </If.Then>
          </If>
          <vrba1:DropStorage sap2010:WorkflowViewState.IdRef="DropStorage_1">
            <vrba1:DropStorage.InitializationOutputByStage>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)">Input.InitializationOutputByStage</mca:CSharpValue>
              </InArgument>
            </vrba1:DropStorage.InitializationOutputByStage>
            <vrba1:DropStorage.StageActivator>
              <InArgument x:TypeArguments="vre:IReprocessStageActivator">
                <mca:CSharpValue x:TypeArguments="vre:IReprocessStageActivator">stageActivator</mca:CSharpValue>
              </InArgument>
            </vrba1:DropStorage.StageActivator>
            <vrba1:DropStorage.StageName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">Input.StageName</mca:CSharpValue>
              </InArgument>
            </vrba1:DropStorage.StageName>
          </vrba1:DropStorage>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d1ZDOlxURlNcQnVzaW5lc3NQcm9jZXNzXENvZGVcVmFucmlzZS5SZXByb2Nlc3MuQlBcUmVQcm9jZXNzaW5nQ29tbWl0Q2hhbmdlc1Byb2Nlc3MueGFtbCk+A/QBDgIBAUYFUSQDAcgBUgViHwMBsgFjBXglAwGVAXkF8gEKAgECTgtOYgMB0AFJC0lzAwHJAV8LX1gDAcEBWgtacwMBugFVC1VrAwGzAWYLZoQBAwGrAXULdWsDAaQBcAtwWAMBnQFrC2trAwGWAXwLfGICAQOAAQnwARQCAQqBAQveARACASHfAQvvAR8CAQuEARGEAWwCASKIAQ/cARoCASniARHiAYoBAgEa7AER7AFeAgET5wER5wFxAgEMiQERngEwAgF4nwERtAEuAgFbtQER2wEbAgEqmwEXmwFfAwGOAZYBF5YBaQMBhwGRAReRAWEDAYABjAEXjAFuAgF5sQEXsQFfAgFxpwEXpwFhAgFqogEXogGEAQIBY6wBF6wBZgIBXLgBF7gBhgECAVS/ARXZASsCASvHARvHAZQBAgFM1gEb1gFiAgFEwgEbwgFkAgE80QEb0QFoAgE0zAEbzAF7AgEs</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetReprocessDefinition_1" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="GetStageActivator_1" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="GetStageStorageRowCount_1" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="ComputeBatchesTimeSpan_1" sap:VirtualizedContainerService.HintSize="287,22" />
      <sap2010:ViewStateData Id="GenerateDateTimeRanges_1" sap:VirtualizedContainerService.HintSize="287,22" />
      <sap2010:ViewStateData Id="CommitChanges_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="287,210" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="309,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,608" />
      <sap2010:ViewStateData Id="DropStorage_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="486,794">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="611,944" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="633,1254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.Reprocess.BP.ReProcessingCommitChangesProcess_1" sap:VirtualizedContainerService.HintSize="673,1334" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>