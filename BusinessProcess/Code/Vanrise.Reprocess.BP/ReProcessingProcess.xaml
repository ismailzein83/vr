<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.Reprocess.BP.ReProcessingProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbe="clr-namespace:Vanrise.BusinessProcess.Entities;assembly=Vanrise.BusinessProcess.Entities"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:ve="clr-namespace:Vanrise.Entities;assembly=Vanrise.Entities"
 xmlns:vrba="clr-namespace:Vanrise.Reprocess.BP.Arguments;assembly=Vanrise.Reprocess.BP.Arguments"
 xmlns:vrba1="clr-namespace:Vanrise.Reprocess.BP.Activities;assembly=Vanrise.Reprocess.BP.Activities"
 xmlns:vre="clr-namespace:Vanrise.Reprocess.Entities;assembly=Vanrise.Reprocess.Entities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vrba:ReProcessingProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.Reprocess.BP.ReProcessingProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Reprocess.BP</x:String>
      <x:String>Vanrise.Reprocess.BP.Arguments</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.Reprocess.Entities</x:String>
      <x:String>Vanrise.Reprocess.BP.Activities</x:String>
      <x:String>Vanrise.Entities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.Common</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Queueing.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)" Name="DateTimeRanges" />
      <Variable x:TypeArguments="x:Int32" Name="TotalRangesCount" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="ProcessedRangesCount" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="TotalEventCount" />
      <Variable x:TypeArguments="vre:ReprocessDefinition" Name="ReprocessDefintion" />
      <Variable x:TypeArguments="vrba1:StageManager" Name="stageManager" />
      <Variable x:TypeArguments="vb:ProcessCompletedEventPayload" Name="subFinalizeProcessEventPayload" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="InitializationOutputByStage">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)">new Dictionary&lt;string, object&gt;();</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_3" Message="Starting Reprocessing Process.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <vbw:GenerateDateTimeRanges sap2010:WorkflowViewState.IdRef="GenerateDateTimeRanges_1">
      <vbw:GenerateDateTimeRanges.DateTimeRanges>
        <OutArgument x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">DateTimeRanges</mca:CSharpReference>
        </OutArgument>
      </vbw:GenerateDateTimeRanges.DateTimeRanges>
      <vbw:GenerateDateTimeRanges.From>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">Input.FromTime</mca:CSharpValue>
        </InArgument>
      </vbw:GenerateDateTimeRanges.From>
      <vbw:GenerateDateTimeRanges.TimeSpan>
        <InArgument x:TypeArguments="x:TimeSpan">
          <mca:CSharpValue x:TypeArguments="x:TimeSpan">new TimeSpan(0, Vanrise.Common.Utilities.GetEnumAttribute&lt;ReprocessChunkTimeEnum,ReprocessChunkTimeAttribute&gt;(Input.ChunkTime).Value,0)</mca:CSharpValue>
        </InArgument>
      </vbw:GenerateDateTimeRanges.TimeSpan>
      <vbw:GenerateDateTimeRanges.To>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">Input.ToTime</mca:CSharpValue>
        </InArgument>
      </vbw:GenerateDateTimeRanges.To>
    </vbw:GenerateDateTimeRanges>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">TotalRangesCount</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">DateTimeRanges.Count()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <vrba1:GetReprocessDefinition sap2010:WorkflowViewState.IdRef="GetReprocessDefinition_3">
      <vrba1:GetReprocessDefinition.ReprocessDefinition>
        <OutArgument x:TypeArguments="vre:ReprocessDefinition">
          <mca:CSharpReference x:TypeArguments="vre:ReprocessDefinition">ReprocessDefintion</mca:CSharpReference>
        </OutArgument>
      </vrba1:GetReprocessDefinition.ReprocessDefinition>
      <vrba1:GetReprocessDefinition.ReprocessDefinitionId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">Input.ReprocessDefinitionId</mca:CSharpValue>
        </InArgument>
      </vrba1:GetReprocessDefinition.ReprocessDefinitionId>
    </vrba1:GetReprocessDefinition>
    <vrba1:ValidateReprocessInput sap2010:WorkflowViewState.IdRef="ValidateReprocessInput_1">
      <vrba1:ValidateReprocessInput.ReprocessDefinition>
        <InArgument x:TypeArguments="vre:ReprocessDefinition">
          <mca:CSharpValue x:TypeArguments="vre:ReprocessDefinition">ReprocessDefintion</mca:CSharpValue>
        </InArgument>
      </vrba1:ValidateReprocessInput.ReprocessDefinition>
      <vrba1:ValidateReprocessInput.ReprocessDefinitionId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">Input.ReprocessDefinitionId</mca:CSharpValue>
        </InArgument>
      </vrba1:ValidateReprocessInput.ReprocessDefinitionId>
      <vrba1:ValidateReprocessInput.UseTempStorageInput>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.UseTempStorage</mca:CSharpValue>
        </InArgument>
      </vrba1:ValidateReprocessInput.UseTempStorageInput>
    </vrba1:ValidateReprocessInput>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="vrba1:StageManager">
          <mca:CSharpReference x:TypeArguments="vrba1:StageManager">stageManager</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="vrba1:StageManager">
          <mca:CSharpValue x:TypeArguments="vrba1:StageManager">new StageManager(ReprocessDefintion)</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:WorkflowViewState.IdRef="If_6">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.UseTempStorage</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
          <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_11" Message="Starting Stages Initialization">
            <vbw:WriteTrackingMessage.Severity>
              <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">LogEntryType.Information</mca:CSharpValue>
              </InArgument>
            </vbw:WriteTrackingMessage.Severity>
          </vbw:WriteTrackingMessage>
          <ForEach x:TypeArguments="vrba1:ReprocessStage" DisplayName="ForEach&lt;ReprocessStage&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
            <ForEach.Values>
              <InArgument x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">stageManager.GetReprocessingStages()</mca:CSharpValue>
              </InArgument>
            </ForEach.Values>
            <ActivityAction x:TypeArguments="vrba1:ReprocessStage">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="vrba1:ReprocessStage" Name="stage" />
              </ActivityAction.Argument>
              <vrba1:InitializeStage sap2010:WorkflowViewState.IdRef="InitializeStage_1">
                <vrba1:InitializeStage.InitializationOutputByStage>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)">InitializationOutputByStage</mca:CSharpValue>
                  </InArgument>
                </vrba1:InitializeStage.InitializationOutputByStage>
                <vrba1:InitializeStage.Stage>
                  <InArgument x:TypeArguments="vrba1:ReprocessStage">
                    <mca:CSharpValue x:TypeArguments="vrba1:ReprocessStage">stage</mca:CSharpValue>
                  </InArgument>
                </vrba1:InitializeStage.Stage>
              </vrba1:InitializeStage>
            </ActivityAction>
          </ForEach>
          <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_12" Message="Finishing Stages Initialization">
            <vbw:WriteTrackingMessage.Severity>
              <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">LogEntryType.Information</mca:CSharpValue>
              </InArgument>
            </vbw:WriteTrackingMessage.Severity>
          </vbw:WriteTrackingMessage>
        </Sequence>
      </If.Then>
    </If>
    <ParallelForEach x:TypeArguments="ve:DateTimeRange" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_4">
      <ParallelForEach.Values>
        <InArgument x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(ve:DateTimeRange)">DateTimeRanges.Reverse()</mca:CSharpValue>
        </InArgument>
      </ParallelForEach.Values>
      <ActivityAction x:TypeArguments="ve:DateTimeRange">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="ve:DateTimeRange" Name="item" />
        </ActivityAction.Argument>
        <Sequence DisplayName="Sequence_RunSubReprocess" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="vb:ProcessCompletedEventPayload" Name="subProcessEventPayload" />
            <Variable x:TypeArguments="x:Int32" Name="RangeEventCount" />
            <Variable x:TypeArguments="vrba:ReProcessingSubProcessOutput" Name="ReProcessingSubProcessOutput" />
          </Sequence.Variables>
          <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_1">
            <vbw:WriteTrackingMessage.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">string.Format("Starting Range From {0}, To {1}", item.From.ToString("yyyy-MM-dd HH:mm:ss"), item.To.ToString("yyyy-MM-dd HH:mm:ss"))</mca:CSharpValue>
              </InArgument>
            </vbw:WriteTrackingMessage.Message>
            <vbw:WriteTrackingMessage.Severity>
              <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
              </InArgument>
            </vbw:WriteTrackingMessage.Severity>
          </vbw:WriteTrackingMessage>
          <vbw:RunProcess ProcessInstanceId="{x:Null}" sap2010:WorkflowViewState.IdRef="RunProcess_1" TerminateIfFailed="True" WaitProcessCompleted="True">
            <vbw:RunProcess.Input>
              <InArgument x:TypeArguments="vbe:BaseProcessInputArgument">
                <mca:CSharpValue x:TypeArguments="vbe:BaseProcessInputArgument" xml:space="preserve">new ReProcessingSubProcessInput()
            {
                FromTime = item.From,
                ToTime = item.To,
                ReprocessDefinitionId = Input.ReprocessDefinitionId,
                UserId = Input.UserId,
                EntityId = Input.EntityId,
                InitializationOutputByStage = InitializationOutputByStage
            }</mca:CSharpValue>
              </InArgument>
            </vbw:RunProcess.Input>
            <vbw:RunProcess.ProcessCompletedEventPayload>
              <OutArgument x:TypeArguments="vb:ProcessCompletedEventPayload">
                <mca:CSharpReference x:TypeArguments="vb:ProcessCompletedEventPayload">subProcessEventPayload</mca:CSharpReference>
              </OutArgument>
            </vbw:RunProcess.ProcessCompletedEventPayload>
            <vbw:RunProcess.TerminationMessage>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">String.Format("Processing Range From {0} To {1} failed", item.From, item.To)</mca:CSharpValue>
              </InArgument>
            </vbw:RunProcess.TerminationMessage>
          </vbw:RunProcess>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">ProcessedRangesCount</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">ProcessedRangesCount+1</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <If sap2010:WorkflowViewState.IdRef="If_1">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">subProcessEventPayload.ProcessStatus!=Vanrise.BusinessProcess.Entities.BPInstanceStatus.Completed</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="vrba:ReProcessingSubProcessOutput">
                      <mca:CSharpReference x:TypeArguments="vrba:ReProcessingSubProcessOutput">ReProcessingSubProcessOutput</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="vrba:ReProcessingSubProcessOutput">
                      <mca:CSharpValue x:TypeArguments="vrba:ReProcessingSubProcessOutput">(ReProcessingSubProcessOutput)subProcessEventPayload.ProcessOutput</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32">RangeEventCount</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">ReProcessingSubProcessOutput.EventCount</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32">TotalEventCount</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">TotalEventCount + RangeEventCount</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_2">
                  <vbw:WriteTrackingMessage.Message>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Range From {0}, To {1}. Remaining Ranges: {2}. Range Event Count : {3}. Total Event Count: {4}.", item.From.ToString("yyyy-MM-dd HH:mm:ss"), item.To.ToString("yyyy-MM-dd HH:mm:ss"), TotalRangesCount - ProcessedRangesCount, RangeEventCount, TotalEventCount)</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Message>
                  <vbw:WriteTrackingMessage.Severity>
                    <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                      <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Severity>
                </vbw:WriteTrackingMessage>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </ActivityAction>
    </ParallelForEach>
    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
      <ParallelForEach x:TypeArguments="vrba1:ReprocessStage" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_2">
        <ParallelForEach.Values>
          <InArgument x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">stageManager.GetReprocessingStages()</mca:CSharpValue>
          </InArgument>
        </ParallelForEach.Values>
        <ActivityAction x:TypeArguments="vrba1:ReprocessStage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="vrba1:ReprocessStage" Name="stage" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Sequence_Finalize" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(vre:BatchRecord)" Name="StageBatchRecords" />
              <Variable x:TypeArguments="x:Int32" Default="0" Name="ProcessedStageBatched" />
            </Sequence.Variables>
            <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_5">
              <vbw:WriteTrackingMessage.Message>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("Starting Get Batch Records for Stage {0}", stage.StageName)</mca:CSharpValue>
                </InArgument>
              </vbw:WriteTrackingMessage.Message>
              <vbw:WriteTrackingMessage.Severity>
                <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                  <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                </InArgument>
              </vbw:WriteTrackingMessage.Severity>
            </vbw:WriteTrackingMessage>
            <vrba1:GetStageBatchRecords sap2010:WorkflowViewState.IdRef="GetStageBatchRecords_1">
              <vrba1:GetStageBatchRecords.From>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">Input.FromTime</mca:CSharpValue>
                </InArgument>
              </vrba1:GetStageBatchRecords.From>
              <vrba1:GetStageBatchRecords.Stage>
                <InArgument x:TypeArguments="vrba1:ReprocessStage">
                  <mca:CSharpValue x:TypeArguments="vrba1:ReprocessStage">stage</mca:CSharpValue>
                </InArgument>
              </vrba1:GetStageBatchRecords.Stage>
              <vrba1:GetStageBatchRecords.StageBatchRecords>
                <OutArgument x:TypeArguments="scg:IEnumerable(vre:BatchRecord)">
                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(vre:BatchRecord)">StageBatchRecords</mca:CSharpReference>
                </OutArgument>
              </vrba1:GetStageBatchRecords.StageBatchRecords>
              <vrba1:GetStageBatchRecords.To>
                <InArgument x:TypeArguments="s:DateTime">
                  <mca:CSharpValue x:TypeArguments="s:DateTime">Input.ToTime</mca:CSharpValue>
                </InArgument>
              </vrba1:GetStageBatchRecords.To>
            </vrba1:GetStageBatchRecords>
            <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_6">
              <vbw:WriteTrackingMessage.Message>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Get Batch Records for Stage {0}", stage.StageName)</mca:CSharpValue>
                </InArgument>
              </vbw:WriteTrackingMessage.Message>
              <vbw:WriteTrackingMessage.Severity>
                <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                  <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                </InArgument>
              </vbw:WriteTrackingMessage.Severity>
            </vbw:WriteTrackingMessage>
            <If sap2010:WorkflowViewState.IdRef="If_4">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">StageBatchRecords!=null</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <ParallelForEach x:TypeArguments="vre:BatchRecord" DisplayName="ParallelForEach&lt;BatchRecord&gt;" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3">
                  <ParallelForEach.Values>
                    <InArgument x:TypeArguments="scg:IEnumerable(vre:BatchRecord)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vre:BatchRecord)">StageBatchRecords.Reverse()</mca:CSharpValue>
                    </InArgument>
                  </ParallelForEach.Values>
                  <ActivityAction x:TypeArguments="vre:BatchRecord">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="vre:BatchRecord" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_7">
                        <vbw:WriteTrackingMessage.Message>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">string.Format("Starting Finalize Stage {0} for {1}", stage.StageName, item.GetBatchTitle())</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Message>
                        <vbw:WriteTrackingMessage.Severity>
                          <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                            <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                          </InArgument>
                        </vbw:WriteTrackingMessage.Severity>
                      </vbw:WriteTrackingMessage>
                      <vbw:RunProcess ProcessInstanceId="{x:Null}" TerminateIfFailed="{x:Null}" TerminationMessage="{x:Null}" sap2010:WorkflowViewState.IdRef="RunProcess_2" WaitProcessCompleted="True">
                        <vbw:RunProcess.Input>
                          <InArgument x:TypeArguments="vbe:BaseProcessInputArgument">
                            <mca:CSharpValue x:TypeArguments="vbe:BaseProcessInputArgument" xml:space="preserve">new ReProcessingFinalizeProcessInput()
            {
                BatchRecord = item,
                ReprocessDefinitionId = ReprocessDefintion.ReprocessDefinitionId,
                StageName = stage.StageName,
                UserId = Input.UserId,
                EntityId = Input.EntityId,
                InitializationOutputByStage = InitializationOutputByStage
            }</mca:CSharpValue>
                          </InArgument>
                        </vbw:RunProcess.Input>
                        <vbw:RunProcess.ProcessCompletedEventPayload>
                          <OutArgument x:TypeArguments="vb:ProcessCompletedEventPayload">
                            <mca:CSharpReference x:TypeArguments="vb:ProcessCompletedEventPayload">subFinalizeProcessEventPayload</mca:CSharpReference>
                          </OutArgument>
                        </vbw:RunProcess.ProcessCompletedEventPayload>
                      </vbw:RunProcess>
                      <If sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">subFinalizeProcessEventPayload.ProcessStatus != Vanrise.BusinessProcess.Entities.BPInstanceStatus.Completed</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2">
                            <TerminateWorkflow.Reason>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">String.Format("Finalizing Stage {0} for {1} failed due to error: {2}", stage.StageName, item.GetBatchTitle(), subFinalizeProcessEventPayload.LastProcessMessage)</mca:CSharpValue>
                              </InArgument>
                            </TerminateWorkflow.Reason>
                          </TerminateWorkflow>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32">ProcessedStageBatched</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpValue x:TypeArguments="x:Int32">ProcessedStageBatched + 1</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_8">
                              <vbw:WriteTrackingMessage.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Finalize Stage {0} for {1}. Remaining Batches: {2}", stage.StageName, item.GetBatchTitle(), StageBatchRecords.Count() - ProcessedStageBatched)</mca:CSharpValue>
                                </InArgument>
                              </vbw:WriteTrackingMessage.Message>
                              <vbw:WriteTrackingMessage.Severity>
                                <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                                  <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                                </InArgument>
                              </vbw:WriteTrackingMessage.Severity>
                            </vbw:WriteTrackingMessage>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ParallelForEach>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ParallelForEach>
    </Sequence>
    <If sap2010:WorkflowViewState.IdRef="If_9">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Input.UseTempStorage</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <ParallelForEach x:TypeArguments="vrba1:ReprocessStage" DisplayName="ParallelForEach&lt;ReprocessStage&gt;" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_6">
          <ParallelForEach.Values>
            <InArgument x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">stageManager.GetReprocessingStages()</mca:CSharpValue>
            </InArgument>
          </ParallelForEach.Values>
          <ActivityAction x:TypeArguments="vrba1:ReprocessStage">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="vrba1:ReprocessStage" Name="stage" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
              <vrba1:CommitChanges Status="{x:Null}" sap2010:WorkflowViewState.IdRef="CommitChanges_1">
                <vrba1:CommitChanges.From>
                  <InArgument x:TypeArguments="s:DateTime">
                    <mca:CSharpValue x:TypeArguments="s:DateTime">Input.FromTime</mca:CSharpValue>
                  </InArgument>
                </vrba1:CommitChanges.From>
                <vrba1:CommitChanges.InitializationOutputByStage>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                    <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)">InitializationOutputByStage</mca:CSharpValue>
                  </InArgument>
                </vrba1:CommitChanges.InitializationOutputByStage>
                <vrba1:CommitChanges.RecordCountPerTransaction>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">ReprocessDefintion.Settings.RecordCountPerTransaction</mca:CSharpValue>
                  </InArgument>
                </vrba1:CommitChanges.RecordCountPerTransaction>
                <vrba1:CommitChanges.Stage>
                  <InArgument x:TypeArguments="vrba1:ReprocessStage">
                    <mca:CSharpValue x:TypeArguments="vrba1:ReprocessStage">stage</mca:CSharpValue>
                  </InArgument>
                </vrba1:CommitChanges.Stage>
                <vrba1:CommitChanges.To>
                  <InArgument x:TypeArguments="s:DateTime">
                    <mca:CSharpValue x:TypeArguments="s:DateTime">Input.ToTime</mca:CSharpValue>
                  </InArgument>
                </vrba1:CommitChanges.To>
              </vrba1:CommitChanges>
            </Sequence>
          </ActivityAction>
        </ParallelForEach>
      </If.Then>
    </If>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_4" Message="Finished Reprocessing Process.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <sads:DebugSymbol.Symbol>d0lDOlxURlNcQnVzaW5lc3NQcm9jZXNzXENvZGVcVmFucmlzZS5SZXByb2Nlc3MuQlBcUmVQcm9jZXNzaW5nUHJvY2Vzcy54YW1sekYDtgQOAgEBSjNKNgIBDUszSzYCAQxRC1GKAQIBAlUFWyADAdcGXAVxIgMBrgZyBX0OAwGZBn4FiQEkAwGEBooBBZoBJAMB5QWbAQWmAQ4DAdAFpwEF1wEKAwGKBdgBBdYCFwMBkwPXAgX7AxACAWn8AwWtBAoCARquBAW0BCACAQ5YC1iFAQMB2QZVYFWAAQMB2AZuC25XAwHNBmQLZFkDAcMGXwtfeAMBuQZpC2nYAQMBrwZ6C3peAwGkBnULdWADAZoGhgELhgFiAwGPBoEBC4EBcgMBhQaSAQuSAWIDAfoFjQELjQFqAwHwBZcBC5cBXgMB5gWjAQujAXcDAdsFngELngFnAwHRBaoBC6oBXgMBiwWuAQnVARQDAZUF2wEL2wF6AwGABeIBCdQCFAMBlAPYAgf6AxkCAWr/Awv/A14CARuDBAmrBBsCASWxBAuxBIUBAgEQrgRgrgSAAQIBD68BC7UBJgMBxAW2AQvNARUDAaIFzgEL1AEmAwGWBegBC/MBJgMB4wT0AQuMAhwDAbYEjQILmAIUAwGZBJkCC9MCEAMBlQPbAg3bAowBAwGJA+ICC/gDFgIBa4YED4YEjgECAV+NBA2pBBgCASayARGyAXoDAcYFrwFnrwGHAQMBxQW5ARG5AZABAwG6BcABD8sBJwMBowXRARHRAXoDAZgFzgFnzgGIAQMBlwXwARHwAYsBAwHyBOsBEesB0wEDAeQE9AF59AF/AwHiBPcBEf8BIAMB1ASJAhGJApsBAwHGBIQCEYQChAEDAbgE9AGVAfQBmwEDAbcElQIRlQJkAwGoBJACEZACagMBmgScAhGcArEBAwGWA6ACD9ECGgMBpAPlAjvlAj4CAWznAg3yAigDAe4C8wINiAMqAwG5AokDDZQDKAMBngKVAw33AxICAW2OBA+oBCUCASfDARXDAYgBAwGvBcgBFcgBZAMBpAWhAhGsAhoDAfwDrQIRuAIaAwHfA7kCEcQCGgMBwgPFAhHQAiwDAaUD7wIT7wKNAQMB/ALqAhPqApsBAwHvAoADE4ADggEDAeEChQMThQNfAwHUAvsCE/sCYgMBxwL2AhP2AmEDAboCkQMTkQONAQMBrAKMAxOMA5sBAwGfApgDE5gDaQIBbpwDEfUDIwIBe5YEFZYEiAECAVSlBBWlBGECAUmbBBWbBIcBAgE+oAQVoARkAgEzkQQVkQRjAgEoqQIXqQKwAQMBiwSkAhekApIBAwH9A7UCF7UCewMB7gOwAhewAmsDAeADwQIXwQJ1AwHRA7wCF7wCawMBwwPNAhfNApEBAwG0A8gCF8gC7QIDAaYDnwMXnwOIAQMBkQKmAxXzAyACAXynAxeyAzIDAfQBswMXxgMoAwHWAccDF/IDHAIBfa8DHa8DlwEDAYMCqgMdqgO2AQMB9QG2Ax2+AyADAeYBwwMdwwOYAQMB2AGzA8MBswPJAQMB1wHKAx3KA8cBAgF+zgMb1AMvAwHHAdcDG/ADJgMBjAHRAyHRA/8BAwHIAdgDHeMDJgMBqgHkAx3vAzgDAY0B4AMj4AN5AwG5AdsDI9sDfQMBqwHsAyPsA50BAwGcAecDI+cDhwIDAY4B</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteTrackingMessage_3" sap:VirtualizedContainerService.HintSize="865,22" />
      <sap2010:ViewStateData Id="GenerateDateTimeRanges_1" sap:VirtualizedContainerService.HintSize="865,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="865,62" />
      <sap2010:ViewStateData Id="GetReprocessDefinition_3" sap:VirtualizedContainerService.HintSize="865,22" />
      <sap2010:ViewStateData Id="ValidateReprocessInput_1" sap:VirtualizedContainerService.HintSize="865,22" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="865,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_11" sap:VirtualizedContainerService.HintSize="287,22" />
      <sap2010:ViewStateData Id="InitializeStage_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="287,210" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_12" sap:VirtualizedContainerService.HintSize="287,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="309,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="865,608" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="RunProcess_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,452">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,602" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,952">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_4" sap:VirtualizedContainerService.HintSize="865,1102" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_5" sap:VirtualizedContainerService.HintSize="666,22" />
      <sap2010:ViewStateData Id="GetStageBatchRecords_1" sap:VirtualizedContainerService.HintSize="666,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_6" sap:VirtualizedContainerService.HintSize="666,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_7" sap:VirtualizedContainerService.HintSize="489,22" />
      <sap2010:ViewStateData Id="RunProcess_2" sap:VirtualizedContainerService.HintSize="489,22" />
      <sap2010:ViewStateData Id="TerminateWorkflow_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_8" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="489,398" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="511,646">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_3" sap:VirtualizedContainerService.HintSize="541,796" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="666,946" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="688,1256">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_2" sap:VirtualizedContainerService.HintSize="718,1406" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="865,1530">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommitChanges_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_6" sap:VirtualizedContainerService.HintSize="287,296" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="865,446" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_4" sap:VirtualizedContainerService.HintSize="865,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="887,4444">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.Reprocess.BP.ReProcessingProcess_1" sap:VirtualizedContainerService.HintSize="927,4524" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>