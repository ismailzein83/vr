<Activity mc:Ignorable="sap sap2010 sads" x:Class="Vanrise.Reprocess.BP.ReProcessingProcess"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:vb="clr-namespace:Vanrise.BusinessProcess;assembly=Vanrise.BusinessProcess"
 xmlns:vbe="clr-namespace:Vanrise.BusinessProcess.Entities;assembly=Vanrise.BusinessProcess.Entities"
 xmlns:vbw="clr-namespace:Vanrise.BusinessProcess.WFActivities;assembly=Vanrise.BusinessProcess.WFActivities"
 xmlns:ve="clr-namespace:Vanrise.Entities;assembly=Vanrise.Entities"
 xmlns:vrba="clr-namespace:Vanrise.Reprocess.BP.Arguments;assembly=Vanrise.Reprocess.BP.Arguments"
 xmlns:vrba1="clr-namespace:Vanrise.Reprocess.BP.Activities;assembly=Vanrise.Reprocess.BP.Activities"
 xmlns:vre="clr-namespace:Vanrise.Reprocess.Entities;assembly=Vanrise.Reprocess.Entities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Input" Type="InArgument(vrba:ReProcessingProcessInput)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Vanrise.Reprocess.BP.ReProcessingProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Vanrise.Reprocess.BP</x:String>
      <x:String>Vanrise.Reprocess.BP.Arguments</x:String>
      <x:String>Vanrise.BusinessProcess</x:String>
      <x:String>Vanrise.Reprocess.Entities</x:String>
      <x:String>Vanrise.Reprocess.BP.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Presentation</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Vanrise.Entities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.Entities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess.WFActivities</AssemblyReference>
      <AssemblyReference>Vanrise.BusinessProcess</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP.Activities</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP.Arguments</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.Entities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Vanrise.Reprocess.BP</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(vre:DateTimeRange)" Name="DateTimeRanges" />
      <Variable x:TypeArguments="x:Int32" Name="TotalRangesCount" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="ProcessedRangesCount" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="TotalEventCount" />
      <Variable x:TypeArguments="vre:ReprocessDefinition" Name="ReprocessDefintion" />
      <Variable x:TypeArguments="vrba1:StageManager" Name="stageManager" />
    </Sequence.Variables>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_3" Message="Starting Reprocessing Process.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <vrba1:GenerateDateTimeRanges sap2010:WorkflowViewState.IdRef="GenerateDateTimeRanges_1">
      <vrba1:GenerateDateTimeRanges.ChunkTime>
        <InArgument x:TypeArguments="vre:ChunkTime">
          <mca:CSharpValue x:TypeArguments="vre:ChunkTime">Input.ChunkTime</mca:CSharpValue>
        </InArgument>
      </vrba1:GenerateDateTimeRanges.ChunkTime>
      <vrba1:GenerateDateTimeRanges.DateTimeRanges>
        <OutArgument x:TypeArguments="scg:IEnumerable(vre:DateTimeRange)">
          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(vre:DateTimeRange)">DateTimeRanges</mca:CSharpReference>
        </OutArgument>
      </vrba1:GenerateDateTimeRanges.DateTimeRanges>
      <vrba1:GenerateDateTimeRanges.From>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">Input.FromTime</mca:CSharpValue>
        </InArgument>
      </vrba1:GenerateDateTimeRanges.From>
      <vrba1:GenerateDateTimeRanges.To>
        <InArgument x:TypeArguments="s:DateTime">
          <mca:CSharpValue x:TypeArguments="s:DateTime">Input.ToTime</mca:CSharpValue>
        </InArgument>
      </vrba1:GenerateDateTimeRanges.To>
    </vrba1:GenerateDateTimeRanges>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">TotalRangesCount</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">DateTimeRanges.Count()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ParallelForEach x:TypeArguments="vre:DateTimeRange" DisplayName="ParallelForEach&lt;DateTimeRange&gt;" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1">
      <ParallelForEach.Values>
        <InArgument x:TypeArguments="scg:IEnumerable(vre:DateTimeRange)">
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vre:DateTimeRange)">DateTimeRanges.Reverse()</mca:CSharpValue>
        </InArgument>
      </ParallelForEach.Values>
      <ActivityAction x:TypeArguments="vre:DateTimeRange">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="vre:DateTimeRange" Name="item" />
        </ActivityAction.Argument>
        <Sequence DisplayName="Sequence_RunSubReprocess" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="vb:ProcessCompletedEventPayload" Name="subProcessEventPayload" />
            <Variable x:TypeArguments="x:Int32" Name="RangeEventCount" />
            <Variable x:TypeArguments="vrba:ReProcessingSubProcessOutput" Name="ReProcessingSubProcessOutput" />
          </Sequence.Variables>
          <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_1">
            <vbw:WriteTrackingMessage.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">string.Format("Starting Range From {0}, To {1}",item.From,item.To)</mca:CSharpValue>
              </InArgument>
            </vbw:WriteTrackingMessage.Message>
            <vbw:WriteTrackingMessage.Severity>
              <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
              </InArgument>
            </vbw:WriteTrackingMessage.Severity>
          </vbw:WriteTrackingMessage>
          <vbw:RunProcess ProcessInstanceId="{x:Null}" sap2010:WorkflowViewState.IdRef="RunProcess_1" WaitProcessCompleted="True">
            <vbw:RunProcess.Input>
              <InArgument x:TypeArguments="vbe:BaseProcessInputArgument">
                <mca:CSharpValue x:TypeArguments="vbe:BaseProcessInputArgument" xml:space="preserve">new ReProcessingSubProcessInput()
            {
                FromTime = item.From,
                ToTime = item.To,
                ReprocessDefinitionId = Input.ReprocessDefinitionId,
                UserId = Input.UserId,
                EntityId = Input.EntityId
            }</mca:CSharpValue>
              </InArgument>
            </vbw:RunProcess.Input>
            <vbw:RunProcess.ProcessCompletedEventPayload>
              <OutArgument x:TypeArguments="vb:ProcessCompletedEventPayload">
                <mca:CSharpReference x:TypeArguments="vb:ProcessCompletedEventPayload">subProcessEventPayload</mca:CSharpReference>
              </OutArgument>
            </vbw:RunProcess.ProcessCompletedEventPayload>
          </vbw:RunProcess>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">ProcessedRangesCount</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">ProcessedRangesCount+1</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <If sap2010:WorkflowViewState.IdRef="If_1">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">subProcessEventPayload.ProcessStatus!=Vanrise.BusinessProcess.Entities.BPInstanceStatus.Completed</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1">
                <TerminateWorkflow.Reason>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">String.Format("Processing Range From {0}, To {1} failed due to error: {2}", item.From,item.To, subProcessEventPayload.LastProcessMessage)</mca:CSharpValue>
                  </InArgument>
                </TerminateWorkflow.Reason>
              </TerminateWorkflow>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="vrba:ReProcessingSubProcessOutput">
                      <mca:CSharpReference x:TypeArguments="vrba:ReProcessingSubProcessOutput">ReProcessingSubProcessOutput</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="vrba:ReProcessingSubProcessOutput">
                      <mca:CSharpValue x:TypeArguments="vrba:ReProcessingSubProcessOutput">(ReProcessingSubProcessOutput)subProcessEventPayload.ProcessOutput</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32">RangeEventCount</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">ReProcessingSubProcessOutput.EventCount</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32">TotalEventCount</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">TotalEventCount + RangeEventCount</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_2">
                  <vbw:WriteTrackingMessage.Message>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Range From {0}, To {1}. Remaining Ranges: {2}. Range Event Count : {3}. Total Event Count: {4}.", item.From, item.To, TotalRangesCount - ProcessedRangesCount, RangeEventCount, TotalEventCount)</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Message>
                  <vbw:WriteTrackingMessage.Severity>
                    <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                      <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Severity>
                </vbw:WriteTrackingMessage>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </ActivityAction>
    </ParallelForEach>
    <If sap2010:WorkflowViewState.IdRef="If_3">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">TotalEventCount &gt; 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <vrba1:GetReprocessDefinition sap2010:WorkflowViewState.IdRef="GetReprocessDefinition_1">
            <vrba1:GetReprocessDefinition.ReprocessDefinition>
              <OutArgument x:TypeArguments="vre:ReprocessDefinition">
                <mca:CSharpReference x:TypeArguments="vre:ReprocessDefinition">ReprocessDefintion</mca:CSharpReference>
              </OutArgument>
            </vrba1:GetReprocessDefinition.ReprocessDefinition>
            <vrba1:GetReprocessDefinition.ReprocessDefinitionId>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">Input.ReprocessDefinitionId</mca:CSharpValue>
              </InArgument>
            </vrba1:GetReprocessDefinition.ReprocessDefinitionId>
          </vrba1:GetReprocessDefinition>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="vrba1:StageManager">
                <mca:CSharpReference x:TypeArguments="vrba1:StageManager">stageManager</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="vrba1:StageManager">
                <mca:CSharpValue x:TypeArguments="vrba1:StageManager">new StageManager(ReprocessDefintion)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <ParallelForEach x:TypeArguments="vrba1:ReprocessStage" DisplayName="ParallelForEach&lt;ReprocessStage&gt;" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_2">
            <ParallelForEach.Values>
              <InArgument x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">
                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vrba1:ReprocessStage)">stageManager.GetReprocessingStages()</mca:CSharpValue>
              </InArgument>
            </ParallelForEach.Values>
            <ActivityAction x:TypeArguments="vrba1:ReprocessStage">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="vrba1:ReprocessStage" Name="stage" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Sequence_Finalize" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:IEnumerable(vre:StageRecordInfo)" Name="StageRecordInfos" />
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="ProcessedStageBatched" />
                </Sequence.Variables>
                <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_8">
                  <vbw:WriteTrackingMessage.Message>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("Starting Get Record Info for Stage {0}",stage.StageName)</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Message>
                  <vbw:WriteTrackingMessage.Severity>
                    <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                      <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Severity>
                </vbw:WriteTrackingMessage>
                <vrba1:GetStageRecordInfo sap2010:WorkflowViewState.IdRef="GetStageRecordInfo_1">
                  <vrba1:GetStageRecordInfo.Stage>
                    <InArgument x:TypeArguments="vrba1:ReprocessStage">
                      <mca:CSharpValue x:TypeArguments="vrba1:ReprocessStage">stage</mca:CSharpValue>
                    </InArgument>
                  </vrba1:GetStageRecordInfo.Stage>
                  <vrba1:GetStageRecordInfo.StageRecordInfos>
                    <OutArgument x:TypeArguments="scg:IEnumerable(vre:StageRecordInfo)">
                      <mca:CSharpReference x:TypeArguments="scg:IEnumerable(vre:StageRecordInfo)">StageRecordInfos</mca:CSharpReference>
                    </OutArgument>
                  </vrba1:GetStageRecordInfo.StageRecordInfos>
                </vrba1:GetStageRecordInfo>
                <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_9">
                  <vbw:WriteTrackingMessage.Message>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Get Record Info for Stage {0}",stage.StageName)</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Message>
                  <vbw:WriteTrackingMessage.Severity>
                    <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                      <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                    </InArgument>
                  </vbw:WriteTrackingMessage.Severity>
                </vbw:WriteTrackingMessage>
                <If sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">StageRecordInfos!=null</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <ParallelForEach x:TypeArguments="vre:StageRecordInfo" DisplayName="ParallelForEach&lt;StageRecordInfo&gt;" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3">
                      <ParallelForEach.Values>
                        <InArgument x:TypeArguments="scg:IEnumerable(vre:StageRecordInfo)">
                          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(vre:StageRecordInfo)">StageRecordInfos.Reverse()</mca:CSharpValue>
                        </InArgument>
                      </ParallelForEach.Values>
                      <ActivityAction x:TypeArguments="vre:StageRecordInfo">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="vre:StageRecordInfo" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Sequence_RunFinalizeProcess" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="vb:ProcessCompletedEventPayload" Name="subProcessEventPayload" />
                            <Variable x:TypeArguments="x:Int32" Name="RangeEventCount" />
                            <Variable x:TypeArguments="vrba:ReProcessingSubProcessOutput" Name="ReProcessingSubProcessOutput" />
                          </Sequence.Variables>
                          <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_6">
                            <vbw:WriteTrackingMessage.Message>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">string.Format("Starting Finalize Stage {0} for BatchStart {1}",stage.StageName,item.BatchStart)</mca:CSharpValue>
                              </InArgument>
                            </vbw:WriteTrackingMessage.Message>
                            <vbw:WriteTrackingMessage.Severity>
                              <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                                <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                              </InArgument>
                            </vbw:WriteTrackingMessage.Severity>
                          </vbw:WriteTrackingMessage>
                          <vbw:RunProcess ProcessInstanceId="{x:Null}" sap2010:WorkflowViewState.IdRef="RunProcess_2" WaitProcessCompleted="True">
                            <vbw:RunProcess.Input>
                              <InArgument x:TypeArguments="vbe:BaseProcessInputArgument">
                                <mca:CSharpValue x:TypeArguments="vbe:BaseProcessInputArgument" xml:space="preserve">new ReProcessingFinalizeProcessInput() { 
                BatchStart = item.BatchStart,
                ReprocessDefinitionId=ReprocessDefintion.ReprocessDefinitionId,
                StageName=stage.StageName,
                UserId = Input.UserId,
                EntityId = Input.EntityId
            }</mca:CSharpValue>
                              </InArgument>
                            </vbw:RunProcess.Input>
                            <vbw:RunProcess.ProcessCompletedEventPayload>
                              <OutArgument x:TypeArguments="vb:ProcessCompletedEventPayload">
                                <mca:CSharpReference x:TypeArguments="vb:ProcessCompletedEventPayload">subProcessEventPayload</mca:CSharpReference>
                              </OutArgument>
                            </vbw:RunProcess.ProcessCompletedEventPayload>
                          </vbw:RunProcess>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">ProcessedStageBatched</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">
                                <mca:CSharpValue x:TypeArguments="x:Int32">ProcessedStageBatched + 1</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                            <sap2010:WorkflowViewState.IdRef>Assign_7</sap2010:WorkflowViewState.IdRef>
                          </Assign>
                          <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_7">
                            <vbw:WriteTrackingMessage.Message>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">string.Format("Finished Finalize Stage {0} for BatchStart {1}. Remaining Batches: {2}", stage.StageName, item.BatchStart, StageRecordInfos.Count() - ProcessedStageBatched)</mca:CSharpValue>
                              </InArgument>
                            </vbw:WriteTrackingMessage.Message>
                            <vbw:WriteTrackingMessage.Severity>
                              <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
                                <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
                              </InArgument>
                            </vbw:WriteTrackingMessage.Severity>
                          </vbw:WriteTrackingMessage>
                        </Sequence>
                      </ActivityAction>
                    </ParallelForEach>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ParallelForEach>
        </Sequence>
      </If.Then>
    </If>
    <vbw:WriteTrackingMessage sap2010:WorkflowViewState.IdRef="WriteTrackingMessage_4" Message="Finished Reprocessing Process.">
      <vbw:WriteTrackingMessage.Severity>
        <InArgument x:TypeArguments="s:Nullable(ve:LogEntryType)">
          <mca:CSharpValue x:TypeArguments="s:Nullable(ve:LogEntryType)">Vanrise.Entities.LogEntryType.Information</mca:CSharpValue>
        </InArgument>
      </vbw:WriteTrackingMessage.Severity>
    </vbw:WriteTrackingMessage>
    <sads:DebugSymbol.Symbol>d0lDOlxURlNcQnVzaW5lc3NQcm9jZXNzXENvZGVcVmFucmlzZS5SZXByb2Nlc3MuQlBcUmVQcm9jZXNzaW5nUHJvY2Vzcy54YW1sV0IDqgMOAgEBRjNGNgIBA0czRzYCAQJLBVEgAwGnBFIFZyQDAYYEaAVzDgMB9QN0BfUBFwMBoAL2AQWhAwoCAQ6iAwWoAyACAQROC06FAQMBqQRLYEuAAQMBqARkC2RXAwGfBFULVV0DAZcEXwtfWQMBjwRaC1p5AwGHBHALcF4DAf4DawtrYAMB9gN3C3d7AwHtA34J8wEUAwGhAvkBC/kBYAIBD/0BCZ8DFAIBF6UDC6UDhQECAQaiA2CiA4ABAgEFhAELjwEmAwHUA5ABC6IBHAMBugOjAQuuARQDAaEDrwEL8gEQAwGiAv4BC4kCKgMBjwKKAguVAhQDAf4BlgILngMdAgEYjAERjAGLAQMB4QOHARGHAZEBAwHVA5MBEZoBIAMByAOfARGfAYQBAwG8A5ABfJABggEDAbsDqwERqwFkAwGuA6YBEaYBagMBogOyARGyAbEBAwGjArYBD7wBIwMBlAO/AQ/wARoDAa8ChgIRhgJpAwGYAoECEYECeAMBkAKSAhGSAn0DAYcCjQIRjQJtAwH/AZkCEZkCkAEDAfYBoAIPnAMaAgEZuQEVuQHcAQMBlQPAARHLARoDAfsCzAER1wEaAwHiAtgBEeMBGgMByQLkARHvASwDAbACowI/owJCAgEapQIRsAIsAwHfAbECEbwCLAMByAG9AhHIAiwDAbEByQIRmwMWAgEbyAEXyAGwAQMBiAPDARfDAZIBAwH8AtQBF9QBewMB7wLPARfPAWsDAeMC4AEX4AF1AwHWAtsBF9sBawMBygLsARfsAZEBAwG9AucBF+cBrQIDAbECrQIXrQKRAQMB6wGoAheoApwBAwHgAbQCF7QCZgMB1AG5Ahe5AokBAwHJAcUCF8UCkQEDAb0BwAIXwAKcAQMBsgHMAhfMAmwCARzQAhWZAycCASfTAhvTAo8BAwGmAdoCGZcDJAIBKOACG+sCNgMBhwHsAhv9AiwCAWf+AhuKAyQCAUiLAxuWAzYCASnoAiHoApsBAwGXAeMCIeMCvgEDAYgB7wIh9QIgAgF4+gIh+gKUAQIBaewCjAHsApIBAgFohgMhhgN3AgFYgQMhgQN7AgFJkwMhkwObAQIBOY4DIY4DigICASo=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteTrackingMessage_3" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="GenerateDateTimeRanges_1" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="663,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_1" sap:VirtualizedContainerService.HintSize="489,22" />
      <sap2010:ViewStateData Id="RunProcess_1" sap:VirtualizedContainerService.HintSize="489,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="489,62" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,452">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="489,602" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="511,952">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_1" sap:VirtualizedContainerService.HintSize="663,1102" />
      <sap2010:ViewStateData Id="GetReprocessDefinition_1" sap:VirtualizedContainerService.HintSize="516,22" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="516,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_8" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="GetStageRecordInfo_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_9" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_6" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="RunProcess_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_7" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="264,372">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_3" sap:VirtualizedContainerService.HintSize="294,522" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,672" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="486,982">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_2" sap:VirtualizedContainerService.HintSize="516,1132" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="538,1420">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="663,1570" />
      <sap2010:ViewStateData Id="WriteTrackingMessage_4" sap:VirtualizedContainerService.HintSize="663,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="685,3124">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Vanrise.Reprocess.BP.ReProcessingProcess_1" sap:VirtualizedContainerService.HintSize="725,3204" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>