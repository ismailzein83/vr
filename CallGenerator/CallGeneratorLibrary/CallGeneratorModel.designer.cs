#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallGeneratorLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CallGenerator")]
	public partial class CallGeneratorModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertScheduleLog(ScheduleLog instance);
    partial void UpdateScheduleLog(ScheduleLog instance);
    partial void DeleteScheduleLog(ScheduleLog instance);
    partial void InsertScheduleGroup(ScheduleGroup instance);
    partial void UpdateScheduleGroup(ScheduleGroup instance);
    partial void DeleteScheduleGroup(ScheduleGroup instance);
    partial void InsertTestNumberGroup(TestNumberGroup instance);
    partial void UpdateTestNumberGroup(TestNumberGroup instance);
    partial void DeleteTestNumberGroup(TestNumberGroup instance);
    partial void InsertTestNumber(TestNumber instance);
    partial void UpdateTestNumber(TestNumber instance);
    partial void DeleteTestNumber(TestNumber instance);
    partial void InsertGeneratedCall(GeneratedCall instance);
    partial void UpdateGeneratedCall(GeneratedCall instance);
    partial void DeleteGeneratedCall(GeneratedCall instance);
    partial void InsertNewActionLog(NewActionLog instance);
    partial void UpdateNewActionLog(NewActionLog instance);
    partial void DeleteNewActionLog(NewActionLog instance);
    partial void InsertNewException(NewException instance);
    partial void UpdateNewException(NewException instance);
    partial void DeleteNewException(NewException instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCDR(CDR instance);
    partial void UpdateCDR(CDR instance);
    partial void DeleteCDR(CDR instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertSipAccount(SipAccount instance);
    partial void UpdateSipAccount(SipAccount instance);
    partial void DeleteSipAccount(SipAccount instance);
    #endregion
		
		public CallGeneratorModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ScheduleLog> ScheduleLogs
		{
			get
			{
				return this.GetTable<ScheduleLog>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleGroup> ScheduleGroups
		{
			get
			{
				return this.GetTable<ScheduleGroup>();
			}
		}
		
		public System.Data.Linq.Table<TestNumberGroup> TestNumberGroups
		{
			get
			{
				return this.GetTable<TestNumberGroup>();
			}
		}
		
		public System.Data.Linq.Table<TestNumber> TestNumbers
		{
			get
			{
				return this.GetTable<TestNumber>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleNumbers> ScheduleNumbers
		{
			get
			{
				return this.GetTable<ScheduleNumbers>();
			}
		}
		
		public System.Data.Linq.Table<GeneratedCall> GeneratedCalls
		{
			get
			{
				return this.GetTable<GeneratedCall>();
			}
		}
		
		public System.Data.Linq.Table<NewActionLog> NewActionLogs
		{
			get
			{
				return this.GetTable<NewActionLog>();
			}
		}
		
		public System.Data.Linq.Table<NewException> NewExceptions
		{
			get
			{
				return this.GetTable<NewException>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<CDR> CDRs
		{
			get
			{
				return this.GetTable<CDR>();
			}
		}
		
		public System.Data.Linq.Table<CDRHistory> CDRHistories
		{
			get
			{
				return this.GetTable<CDRHistory>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<SipAccount> SipAccounts
		{
			get
			{
				return this.GetTable<SipAccount>();
			}
		}
		
		public System.Data.Linq.Table<ChartCalls> ChartCalls
		{
			get
			{
				return this.GetTable<ChartCalls>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetScheduleNumbers")]
		public ISingleResult<GetScheduleNumbersResult> GetScheduleNumbers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScheduleId", DbType="Int")] System.Nullable<int> scheduleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), scheduleId);
			return ((ISingleResult<GetScheduleNumbersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCDR")]
		public ISingleResult<GetCDRResult> GetCDR([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Number", DbType="NVarChar(500)")] string number, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientId", DbType="Int")] System.Nullable<int> clientId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayStart", DbType="Int")] System.Nullable<int> displayStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayLength", DbType="Int")] System.Nullable<int> displayLength)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate, number, clientId, displayStart, displayLength);
			return ((ISingleResult<GetCDRResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetChartTotals")]
		public ISingleResult<GetChartTotalsResult> GetChartTotals([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status);
			return ((ISingleResult<GetChartTotalsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleLogs")]
	public partial class ScheduleLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _IsSuccess;
		
		private string _Notes;
		
		private System.Nullable<int> _Frequency;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsSuccessChanging(System.Nullable<bool> value);
    partial void OnIsSuccessChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    #endregion
		
		public ScheduleLog()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit")]
		public System.Nullable<bool> IsSuccess
		{
			get
			{
				return this._IsSuccess;
			}
			set
			{
				if ((this._IsSuccess != value))
				{
					this.OnIsSuccessChanging(value);
					this.SendPropertyChanging();
					this._IsSuccess = value;
					this.SendPropertyChanged("IsSuccess");
					this.OnIsSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleLog", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleLogs.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleLogs.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleGroups")]
	public partial class ScheduleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<int> _GroupId;
		
		private EntityRef<TestNumberGroup> _TestNumberGroup;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    #endregion
		
		public ScheduleGroup()
		{
			this._TestNumberGroup = default(EntityRef<TestNumberGroup>);
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._TestNumberGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_ScheduleGroup", Storage="_TestNumberGroup", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public TestNumberGroup TestNumberGroup
		{
			get
			{
				return this._TestNumberGroup.Entity;
			}
			set
			{
				TestNumberGroup previousValue = this._TestNumberGroup.Entity;
				if (((previousValue != value) 
							|| (this._TestNumberGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestNumberGroup.Entity = null;
						previousValue.ScheduleGroups.Remove(this);
					}
					this._TestNumberGroup.Entity = value;
					if ((value != null))
					{
						value.ScheduleGroups.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestNumberGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleGroup", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleGroups.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleGroups.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestNumberGroups")]
	public partial class TestNumberGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<ScheduleGroup> _ScheduleGroups;
		
		private EntitySet<TestNumber> _TestNumbers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public TestNumberGroup()
		{
			this._ScheduleGroups = new EntitySet<ScheduleGroup>(new Action<ScheduleGroup>(this.attach_ScheduleGroups), new Action<ScheduleGroup>(this.detach_ScheduleGroups));
			this._TestNumbers = new EntitySet<TestNumber>(new Action<TestNumber>(this.attach_TestNumbers), new Action<TestNumber>(this.detach_TestNumbers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_ScheduleGroup", Storage="_ScheduleGroups", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<ScheduleGroup> ScheduleGroups
		{
			get
			{
				return this._ScheduleGroups;
			}
			set
			{
				this._ScheduleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_TestNumber", Storage="_TestNumbers", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<TestNumber> TestNumbers
		{
			get
			{
				return this._TestNumbers;
			}
			set
			{
				this._TestNumbers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = this;
		}
		
		private void detach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = null;
		}
		
		private void attach_TestNumbers(TestNumber entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = this;
		}
		
		private void detach_TestNumbers(TestNumber entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestNumbers")]
	public partial class TestNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GroupId;
		
		private string _Number;
		
		private EntityRef<TestNumberGroup> _TestNumberGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public TestNumber()
		{
			this._TestNumberGroup = default(EntityRef<TestNumberGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._TestNumberGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_TestNumber", Storage="_TestNumberGroup", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public TestNumberGroup TestNumberGroup
		{
			get
			{
				return this._TestNumberGroup.Entity;
			}
			set
			{
				TestNumberGroup previousValue = this._TestNumberGroup.Entity;
				if (((previousValue != value) 
							|| (this._TestNumberGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestNumberGroup.Entity = null;
						previousValue.TestNumbers.Remove(this);
					}
					this._TestNumberGroup.Entity = value;
					if ((value != null))
					{
						value.TestNumbers.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestNumberGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ScheduleNumbers
	{
		
		private string _Number;
		
		private System.Nullable<int> _GroupId;
		
		public ScheduleNumbers()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneratedCalls")]
	public partial class GeneratedCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Number;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _StartCall;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Status;
		
		private string _ResponseCode;
		
		private System.Nullable<int> _SipAccountId;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<int> _ClientId;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<SipAccount> _SipAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartCallChanging(System.Nullable<System.DateTime> value);
    partial void OnStartCallChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnResponseCodeChanging(string value);
    partial void OnResponseCodeChanged();
    partial void OnSipAccountIdChanging(System.Nullable<int> value);
    partial void OnSipAccountIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnClientIdChanging(System.Nullable<int> value);
    partial void OnClientIdChanged();
    #endregion
		
		public GeneratedCall()
		{
			this._Schedule = default(EntityRef<Schedule>);
			this._SipAccount = default(EntityRef<SipAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartCall
		{
			get
			{
				return this._StartCall;
			}
			set
			{
				if ((this._StartCall != value))
				{
					this.OnStartCallChanging(value);
					this.SendPropertyChanging();
					this._StartCall = value;
					this.SendPropertyChanged("StartCall");
					this.OnStartCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this.OnResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseCode = value;
					this.SendPropertyChanged("ResponseCode");
					this.OnResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SipAccountId", DbType="Int")]
		public System.Nullable<int> SipAccountId
		{
			get
			{
				return this._SipAccountId;
			}
			set
			{
				if ((this._SipAccountId != value))
				{
					if (this._SipAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSipAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SipAccountId = value;
					this.SendPropertyChanged("SipAccountId");
					this.OnSipAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_GeneratedCall", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.GeneratedCalls.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.GeneratedCalls.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_GeneratedCall", Storage="_SipAccount", ThisKey="SipAccountId", OtherKey="Id", IsForeignKey=true)]
		public SipAccount SipAccount
		{
			get
			{
				return this._SipAccount.Entity;
			}
			set
			{
				SipAccount previousValue = this._SipAccount.Entity;
				if (((previousValue != value) 
							|| (this._SipAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipAccount.Entity = null;
						previousValue.GeneratedCalls.Remove(this);
					}
					this._SipAccount.Entity = value;
					if ((value != null))
					{
						value.GeneratedCalls.Add(this);
						this._SipAccountId = value.Id;
					}
					else
					{
						this._SipAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewActionLog")]
	public partial class NewActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ActionType;
		
		private string _Username;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private string _ObjectType;
		
		private System.Nullable<int> _ObjectId;
		
		private string _Description;
		
		private string _IPAddress;
		
		private string _RemoteAddress;
		
		private string _ComputerName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActionTypeChanging(System.Nullable<int> value);
    partial void OnActionTypeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnObjectIdChanging(System.Nullable<int> value);
    partial void OnObjectIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnRemoteAddressChanging(string value);
    partial void OnRemoteAddressChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    #endregion
		
		public NewActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="Int")]
		public System.Nullable<int> ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(255)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int")]
		public System.Nullable<int> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteAddress", DbType="NVarChar(50)")]
		public string RemoteAddress
		{
			get
			{
				return this._RemoteAddress;
			}
			set
			{
				if ((this._RemoteAddress != value))
				{
					this.OnRemoteAddressChanging(value);
					this.SendPropertyChanging();
					this._RemoteAddress = value;
					this.SendPropertyChanged("RemoteAddress");
					this.OnRemoteAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(255)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewExceptions")]
	public partial class NewException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Details;
		
		private System.Nullable<System.DateTime> _ExceptionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnExceptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExceptionDateChanged();
    #endregion
		
		public NewException()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(4000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExceptionDate
		{
			get
			{
				return this._ExceptionDate;
			}
			set
			{
				if ((this._ExceptionDate != value))
				{
					this.OnExceptionDateChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDate = value;
					this.SendPropertyChanged("ExceptionDate");
					this.OnExceptionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Name;
		
		private string _Password;
		
		private string _Email;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsSuperAdmin;
		
		private string _Guid;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _IpSwitch;
		
		private string _CallerId;
		
		private string _LastName;
		
		private string _MobileNumber;
		
		private string _WebsiteURL;
		
		private System.Nullable<bool> _IsChangedCallerId;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<SipAccount> _SipAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsSuperAdminChanging(System.Nullable<bool> value);
    partial void OnIsSuperAdminChanged();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnIpSwitchChanging(string value);
    partial void OnIpSwitchChanged();
    partial void OnCallerIdChanging(string value);
    partial void OnCallerIdChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnWebsiteURLChanging(string value);
    partial void OnWebsiteURLChanged();
    partial void OnIsChangedCallerIdChanging(System.Nullable<bool> value);
    partial void OnIsChangedCallerIdChanged();
    #endregion
		
		public User()
		{
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._SipAccounts = new EntitySet<SipAccount>(new Action<SipAccount>(this.attach_SipAccounts), new Action<SipAccount>(this.detach_SipAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperAdmin", DbType="Bit")]
		public System.Nullable<bool> IsSuperAdmin
		{
			get
			{
				return this._IsSuperAdmin;
			}
			set
			{
				if ((this._IsSuperAdmin != value))
				{
					this.OnIsSuperAdminChanging(value);
					this.SendPropertyChanging();
					this._IsSuperAdmin = value;
					this.SendPropertyChanged("IsSuperAdmin");
					this.OnIsSuperAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(255)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpSwitch", DbType="NVarChar(50)")]
		public string IpSwitch
		{
			get
			{
				return this._IpSwitch;
			}
			set
			{
				if ((this._IpSwitch != value))
				{
					this.OnIpSwitchChanging(value);
					this.SendPropertyChanging();
					this._IpSwitch = value;
					this.SendPropertyChanged("IpSwitch");
					this.OnIpSwitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallerId", DbType="NVarChar(50)")]
		public string CallerId
		{
			get
			{
				return this._CallerId;
			}
			set
			{
				if ((this._CallerId != value))
				{
					this.OnCallerIdChanging(value);
					this.SendPropertyChanging();
					this._CallerId = value;
					this.SendPropertyChanged("CallerId");
					this.OnCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteURL", DbType="VarChar(50)")]
		public string WebsiteURL
		{
			get
			{
				return this._WebsiteURL;
			}
			set
			{
				if ((this._WebsiteURL != value))
				{
					this.OnWebsiteURLChanging(value);
					this.SendPropertyChanging();
					this._WebsiteURL = value;
					this.SendPropertyChanged("WebsiteURL");
					this.OnWebsiteURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChangedCallerId", DbType="Bit")]
		public System.Nullable<bool> IsChangedCallerId
		{
			get
			{
				return this._IsChangedCallerId;
			}
			set
			{
				if ((this._IsChangedCallerId != value))
				{
					this.OnIsChangedCallerIdChanging(value);
					this.SendPropertyChanging();
					this._IsChangedCallerId = value;
					this.SendPropertyChanged("IsChangedCallerId");
					this.OnIsChangedCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_Schedules", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SipAccount", Storage="_SipAccounts", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SipAccount> SipAccounts
		{
			get
			{
				return this._SipAccounts;
			}
			set
			{
				this._SipAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SipAccounts(SipAccount entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SipAccounts(SipAccount entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CDR")]
	public partial class CDR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CDRID;
		
		private System.Nullable<long> _IDonSwitch;
		
		private System.Nullable<System.DateTime> _AttemptDateTime;
		
		private System.Nullable<System.DateTime> _AlertDateTime;
		
		private System.Nullable<System.DateTime> _ConnectDateTime;
		
		private System.Nullable<System.DateTime> _DisconnectDateTime;
		
		private System.Nullable<double> _DurationInSeconds;
		
		private string _IN_TRUNK;
		
		private System.Nullable<short> _IN_CIRCUIT;
		
		private string _IN_CARRIER;
		
		private string _IN_IP;
		
		private string _OUT_TRUNK;
		
		private short _OUT_CIRCUIT;
		
		private string _OUT_CARRIER;
		
		private string _OUT_IP;
		
		private string _CGPN;
		
		private string _CDPN;
		
		private string _CAUSE_FROM_RELEASE_CODE;
		
		private string _CAUSE_FROM;
		
		private string _CAUSE_TO_RELEASE_CODE;
		
		private string _CAUSE_TO;
		
		private string _Extra_Fields;
		
		private System.Nullable<char> _IsRerouted;
		
		private string _CDPNOut;
		
		private System.Nullable<int> _SIP;
		
		private string _UserID;
		
		private System.Nullable<int> _TransactionId;
		
		private string _RecievedCLI;
		
		private System.Nullable<int> _ClientId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCDRIDChanging(long value);
    partial void OnCDRIDChanged();
    partial void OnIDonSwitchChanging(System.Nullable<long> value);
    partial void OnIDonSwitchChanged();
    partial void OnAttemptDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAttemptDateTimeChanged();
    partial void OnAlertDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAlertDateTimeChanged();
    partial void OnConnectDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConnectDateTimeChanged();
    partial void OnDisconnectDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisconnectDateTimeChanged();
    partial void OnDurationInSecondsChanging(System.Nullable<double> value);
    partial void OnDurationInSecondsChanged();
    partial void OnIN_TRUNKChanging(string value);
    partial void OnIN_TRUNKChanged();
    partial void OnIN_CIRCUITChanging(System.Nullable<short> value);
    partial void OnIN_CIRCUITChanged();
    partial void OnIN_CARRIERChanging(string value);
    partial void OnIN_CARRIERChanged();
    partial void OnIN_IPChanging(string value);
    partial void OnIN_IPChanged();
    partial void OnOUT_TRUNKChanging(string value);
    partial void OnOUT_TRUNKChanged();
    partial void OnOUT_CIRCUITChanging(short value);
    partial void OnOUT_CIRCUITChanged();
    partial void OnOUT_CARRIERChanging(string value);
    partial void OnOUT_CARRIERChanged();
    partial void OnOUT_IPChanging(string value);
    partial void OnOUT_IPChanged();
    partial void OnCGPNChanging(string value);
    partial void OnCGPNChanged();
    partial void OnCDPNChanging(string value);
    partial void OnCDPNChanged();
    partial void OnCAUSE_FROM_RELEASE_CODEChanging(string value);
    partial void OnCAUSE_FROM_RELEASE_CODEChanged();
    partial void OnCAUSE_FROMChanging(string value);
    partial void OnCAUSE_FROMChanged();
    partial void OnCAUSE_TO_RELEASE_CODEChanging(string value);
    partial void OnCAUSE_TO_RELEASE_CODEChanged();
    partial void OnCAUSE_TOChanging(string value);
    partial void OnCAUSE_TOChanged();
    partial void OnExtra_FieldsChanging(string value);
    partial void OnExtra_FieldsChanged();
    partial void OnIsReroutedChanging(System.Nullable<char> value);
    partial void OnIsReroutedChanged();
    partial void OnCDPNOutChanging(string value);
    partial void OnCDPNOutChanged();
    partial void OnSIPChanging(System.Nullable<int> value);
    partial void OnSIPChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnTransactionIdChanging(System.Nullable<int> value);
    partial void OnTransactionIdChanged();
    partial void OnRecievedCLIChanging(string value);
    partial void OnRecievedCLIChanged();
    partial void OnClientIdChanging(System.Nullable<int> value);
    partial void OnClientIdChanged();
    #endregion
		
		public CDR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDRID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CDRID
		{
			get
			{
				return this._CDRID;
			}
			set
			{
				if ((this._CDRID != value))
				{
					this.OnCDRIDChanging(value);
					this.SendPropertyChanging();
					this._CDRID = value;
					this.SendPropertyChanged("CDRID");
					this.OnCDRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDonSwitch", DbType="BigInt")]
		public System.Nullable<long> IDonSwitch
		{
			get
			{
				return this._IDonSwitch;
			}
			set
			{
				if ((this._IDonSwitch != value))
				{
					this.OnIDonSwitchChanging(value);
					this.SendPropertyChanging();
					this._IDonSwitch = value;
					this.SendPropertyChanged("IDonSwitch");
					this.OnIDonSwitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttemptDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttemptDateTime
		{
			get
			{
				return this._AttemptDateTime;
			}
			set
			{
				if ((this._AttemptDateTime != value))
				{
					this.OnAttemptDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AttemptDateTime = value;
					this.SendPropertyChanged("AttemptDateTime");
					this.OnAttemptDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlertDateTime
		{
			get
			{
				return this._AlertDateTime;
			}
			set
			{
				if ((this._AlertDateTime != value))
				{
					this.OnAlertDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AlertDateTime = value;
					this.SendPropertyChanged("AlertDateTime");
					this.OnAlertDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConnectDateTime
		{
			get
			{
				return this._ConnectDateTime;
			}
			set
			{
				if ((this._ConnectDateTime != value))
				{
					this.OnConnectDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ConnectDateTime = value;
					this.SendPropertyChanged("ConnectDateTime");
					this.OnConnectDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisconnectDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisconnectDateTime
		{
			get
			{
				return this._DisconnectDateTime;
			}
			set
			{
				if ((this._DisconnectDateTime != value))
				{
					this.OnDisconnectDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisconnectDateTime = value;
					this.SendPropertyChanged("DisconnectDateTime");
					this.OnDisconnectDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationInSeconds", DbType="Float")]
		public System.Nullable<double> DurationInSeconds
		{
			get
			{
				return this._DurationInSeconds;
			}
			set
			{
				if ((this._DurationInSeconds != value))
				{
					this.OnDurationInSecondsChanging(value);
					this.SendPropertyChanging();
					this._DurationInSeconds = value;
					this.SendPropertyChanged("DurationInSeconds");
					this.OnDurationInSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_TRUNK", DbType="VarChar(100)")]
		public string IN_TRUNK
		{
			get
			{
				return this._IN_TRUNK;
			}
			set
			{
				if ((this._IN_TRUNK != value))
				{
					this.OnIN_TRUNKChanging(value);
					this.SendPropertyChanging();
					this._IN_TRUNK = value;
					this.SendPropertyChanged("IN_TRUNK");
					this.OnIN_TRUNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_CIRCUIT", DbType="SmallInt")]
		public System.Nullable<short> IN_CIRCUIT
		{
			get
			{
				return this._IN_CIRCUIT;
			}
			set
			{
				if ((this._IN_CIRCUIT != value))
				{
					this.OnIN_CIRCUITChanging(value);
					this.SendPropertyChanging();
					this._IN_CIRCUIT = value;
					this.SendPropertyChanged("IN_CIRCUIT");
					this.OnIN_CIRCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_CARRIER", DbType="VarChar(100)")]
		public string IN_CARRIER
		{
			get
			{
				return this._IN_CARRIER;
			}
			set
			{
				if ((this._IN_CARRIER != value))
				{
					this.OnIN_CARRIERChanging(value);
					this.SendPropertyChanging();
					this._IN_CARRIER = value;
					this.SendPropertyChanged("IN_CARRIER");
					this.OnIN_CARRIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_IP", DbType="VarChar(21)")]
		public string IN_IP
		{
			get
			{
				return this._IN_IP;
			}
			set
			{
				if ((this._IN_IP != value))
				{
					this.OnIN_IPChanging(value);
					this.SendPropertyChanging();
					this._IN_IP = value;
					this.SendPropertyChanged("IN_IP");
					this.OnIN_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_TRUNK", DbType="VarChar(100)")]
		public string OUT_TRUNK
		{
			get
			{
				return this._OUT_TRUNK;
			}
			set
			{
				if ((this._OUT_TRUNK != value))
				{
					this.OnOUT_TRUNKChanging(value);
					this.SendPropertyChanging();
					this._OUT_TRUNK = value;
					this.SendPropertyChanged("OUT_TRUNK");
					this.OnOUT_TRUNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_CIRCUIT", DbType="SmallInt NOT NULL")]
		public short OUT_CIRCUIT
		{
			get
			{
				return this._OUT_CIRCUIT;
			}
			set
			{
				if ((this._OUT_CIRCUIT != value))
				{
					this.OnOUT_CIRCUITChanging(value);
					this.SendPropertyChanging();
					this._OUT_CIRCUIT = value;
					this.SendPropertyChanged("OUT_CIRCUIT");
					this.OnOUT_CIRCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_CARRIER", DbType="VarChar(100)")]
		public string OUT_CARRIER
		{
			get
			{
				return this._OUT_CARRIER;
			}
			set
			{
				if ((this._OUT_CARRIER != value))
				{
					this.OnOUT_CARRIERChanging(value);
					this.SendPropertyChanging();
					this._OUT_CARRIER = value;
					this.SendPropertyChanged("OUT_CARRIER");
					this.OnOUT_CARRIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_IP", DbType="VarChar(21)")]
		public string OUT_IP
		{
			get
			{
				return this._OUT_IP;
			}
			set
			{
				if ((this._OUT_IP != value))
				{
					this.OnOUT_IPChanging(value);
					this.SendPropertyChanging();
					this._OUT_IP = value;
					this.SendPropertyChanged("OUT_IP");
					this.OnOUT_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGPN", DbType="VarChar(40)")]
		public string CGPN
		{
			get
			{
				return this._CGPN;
			}
			set
			{
				if ((this._CGPN != value))
				{
					this.OnCGPNChanging(value);
					this.SendPropertyChanging();
					this._CGPN = value;
					this.SendPropertyChanged("CGPN");
					this.OnCGPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPN", DbType="VarChar(40)")]
		public string CDPN
		{
			get
			{
				return this._CDPN;
			}
			set
			{
				if ((this._CDPN != value))
				{
					this.OnCDPNChanging(value);
					this.SendPropertyChanging();
					this._CDPN = value;
					this.SendPropertyChanged("CDPN");
					this.OnCDPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_FROM_RELEASE_CODE", DbType="VarChar(20)")]
		public string CAUSE_FROM_RELEASE_CODE
		{
			get
			{
				return this._CAUSE_FROM_RELEASE_CODE;
			}
			set
			{
				if ((this._CAUSE_FROM_RELEASE_CODE != value))
				{
					this.OnCAUSE_FROM_RELEASE_CODEChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_FROM_RELEASE_CODE = value;
					this.SendPropertyChanged("CAUSE_FROM_RELEASE_CODE");
					this.OnCAUSE_FROM_RELEASE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_FROM", DbType="VarChar(10)")]
		public string CAUSE_FROM
		{
			get
			{
				return this._CAUSE_FROM;
			}
			set
			{
				if ((this._CAUSE_FROM != value))
				{
					this.OnCAUSE_FROMChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_FROM = value;
					this.SendPropertyChanged("CAUSE_FROM");
					this.OnCAUSE_FROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_TO_RELEASE_CODE", DbType="VarChar(20)")]
		public string CAUSE_TO_RELEASE_CODE
		{
			get
			{
				return this._CAUSE_TO_RELEASE_CODE;
			}
			set
			{
				if ((this._CAUSE_TO_RELEASE_CODE != value))
				{
					this.OnCAUSE_TO_RELEASE_CODEChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_TO_RELEASE_CODE = value;
					this.SendPropertyChanged("CAUSE_TO_RELEASE_CODE");
					this.OnCAUSE_TO_RELEASE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_TO", DbType="VarChar(10)")]
		public string CAUSE_TO
		{
			get
			{
				return this._CAUSE_TO;
			}
			set
			{
				if ((this._CAUSE_TO != value))
				{
					this.OnCAUSE_TOChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_TO = value;
					this.SendPropertyChanged("CAUSE_TO");
					this.OnCAUSE_TOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extra_Fields", DbType="VarChar(255)")]
		public string Extra_Fields
		{
			get
			{
				return this._Extra_Fields;
			}
			set
			{
				if ((this._Extra_Fields != value))
				{
					this.OnExtra_FieldsChanging(value);
					this.SendPropertyChanging();
					this._Extra_Fields = value;
					this.SendPropertyChanged("Extra_Fields");
					this.OnExtra_FieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRerouted", DbType="Char(1)")]
		public System.Nullable<char> IsRerouted
		{
			get
			{
				return this._IsRerouted;
			}
			set
			{
				if ((this._IsRerouted != value))
				{
					this.OnIsReroutedChanging(value);
					this.SendPropertyChanging();
					this._IsRerouted = value;
					this.SendPropertyChanged("IsRerouted");
					this.OnIsReroutedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPNOut", DbType="VarChar(40)")]
		public string CDPNOut
		{
			get
			{
				return this._CDPNOut;
			}
			set
			{
				if ((this._CDPNOut != value))
				{
					this.OnCDPNOutChanging(value);
					this.SendPropertyChanging();
					this._CDPNOut = value;
					this.SendPropertyChanged("CDPNOut");
					this.OnCDPNOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIP", DbType="Int")]
		public System.Nullable<int> SIP
		{
			get
			{
				return this._SIP;
			}
			set
			{
				if ((this._SIP != value))
				{
					this.OnSIPChanging(value);
					this.SendPropertyChanging();
					this._SIP = value;
					this.SendPropertyChanged("SIP");
					this.OnSIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="Int")]
		public System.Nullable<int> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedCLI", DbType="NVarChar(50)")]
		public string RecievedCLI
		{
			get
			{
				return this._RecievedCLI;
			}
			set
			{
				if ((this._RecievedCLI != value))
				{
					this.OnRecievedCLIChanging(value);
					this.SendPropertyChanging();
					this._RecievedCLI = value;
					this.SendPropertyChanged("RecievedCLI");
					this.OnRecievedCLIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class CDRHistory
	{
		
		private System.Nullable<System.DateTime> _ConnectDateTime;
		
		private System.Nullable<System.DateTime> _DisconnectDateTime;
		
		private string _CDPN;
		
		private string _CAUSE_FROM_RELEASE_CODE;
		
		private System.Nullable<int> _ClientId;
		
		private System.Nullable<int> _RowCount;
		
		public CDRHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectDateTime")]
		public System.Nullable<System.DateTime> ConnectDateTime
		{
			get
			{
				return this._ConnectDateTime;
			}
			set
			{
				if ((this._ConnectDateTime != value))
				{
					this._ConnectDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisconnectDateTime")]
		public System.Nullable<System.DateTime> DisconnectDateTime
		{
			get
			{
				return this._DisconnectDateTime;
			}
			set
			{
				if ((this._DisconnectDateTime != value))
				{
					this._DisconnectDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPN")]
		public string CDPN
		{
			get
			{
				return this._CDPN;
			}
			set
			{
				if ((this._CDPN != value))
				{
					this._CDPN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_FROM_RELEASE_CODE")]
		public string CAUSE_FROM_RELEASE_CODE
		{
			get
			{
				return this._CAUSE_FROM_RELEASE_CODE;
			}
			set
			{
				if ((this._CAUSE_FROM_RELEASE_CODE != value))
				{
					this._CAUSE_FROM_RELEASE_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowCount")]
		public System.Nullable<int> RowCount
		{
			get
			{
				return this._RowCount;
			}
			set
			{
				if ((this._RowCount != value))
				{
					this._RowCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedules")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DisplayName;
		
		private System.Nullable<int> _Frequency;
		
		private System.Nullable<int> _TimeFrequency;
		
		private System.Nullable<int> _MonthDay;
		
		private System.Nullable<int> _OccursEvery;
		
		private System.Nullable<System.DateTime> _SpecificTime;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _SipAccountId;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalNumbers;
		
		private System.Nullable<decimal> _RatioOfCalls;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<bool> _IsEnabled;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<ScheduleLog> _ScheduleLogs;
		
		private EntitySet<ScheduleGroup> _ScheduleGroups;
		
		private EntitySet<GeneratedCall> _GeneratedCalls;
		
		private EntityRef<User> _User;
		
		private EntityRef<SipAccount> _SipAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    partial void OnTimeFrequencyChanging(System.Nullable<int> value);
    partial void OnTimeFrequencyChanged();
    partial void OnMonthDayChanging(System.Nullable<int> value);
    partial void OnMonthDayChanged();
    partial void OnOccursEveryChanging(System.Nullable<int> value);
    partial void OnOccursEveryChanged();
    partial void OnSpecificTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSpecificTimeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSipAccountIdChanging(System.Nullable<int> value);
    partial void OnSipAccountIdChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnTotalNumbersChanging(System.Nullable<int> value);
    partial void OnTotalNumbersChanged();
    partial void OnRatioOfCallsChanging(System.Nullable<decimal> value);
    partial void OnRatioOfCallsChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnIsEnabledChanging(System.Nullable<bool> value);
    partial void OnIsEnabledChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Schedule()
		{
			this._ScheduleLogs = new EntitySet<ScheduleLog>(new Action<ScheduleLog>(this.attach_ScheduleLogs), new Action<ScheduleLog>(this.detach_ScheduleLogs));
			this._ScheduleGroups = new EntitySet<ScheduleGroup>(new Action<ScheduleGroup>(this.attach_ScheduleGroups), new Action<ScheduleGroup>(this.detach_ScheduleGroups));
			this._GeneratedCalls = new EntitySet<GeneratedCall>(new Action<GeneratedCall>(this.attach_GeneratedCalls), new Action<GeneratedCall>(this.detach_GeneratedCalls));
			this._User = default(EntityRef<User>);
			this._SipAccount = default(EntityRef<SipAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrequency", DbType="Int")]
		public System.Nullable<int> TimeFrequency
		{
			get
			{
				return this._TimeFrequency;
			}
			set
			{
				if ((this._TimeFrequency != value))
				{
					this.OnTimeFrequencyChanging(value);
					this.SendPropertyChanging();
					this._TimeFrequency = value;
					this.SendPropertyChanged("TimeFrequency");
					this.OnTimeFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDay", DbType="Int")]
		public System.Nullable<int> MonthDay
		{
			get
			{
				return this._MonthDay;
			}
			set
			{
				if ((this._MonthDay != value))
				{
					this.OnMonthDayChanging(value);
					this.SendPropertyChanging();
					this._MonthDay = value;
					this.SendPropertyChanged("MonthDay");
					this.OnMonthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccursEvery", DbType="Int")]
		public System.Nullable<int> OccursEvery
		{
			get
			{
				return this._OccursEvery;
			}
			set
			{
				if ((this._OccursEvery != value))
				{
					this.OnOccursEveryChanging(value);
					this.SendPropertyChanging();
					this._OccursEvery = value;
					this.SendPropertyChanged("OccursEvery");
					this.OnOccursEveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SpecificTime
		{
			get
			{
				return this._SpecificTime;
			}
			set
			{
				if ((this._SpecificTime != value))
				{
					this.OnSpecificTimeChanging(value);
					this.SendPropertyChanging();
					this._SpecificTime = value;
					this.SendPropertyChanged("SpecificTime");
					this.OnSpecificTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SipAccountId", DbType="Int")]
		public System.Nullable<int> SipAccountId
		{
			get
			{
				return this._SipAccountId;
			}
			set
			{
				if ((this._SipAccountId != value))
				{
					if (this._SipAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSipAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SipAccountId = value;
					this.SendPropertyChanged("SipAccountId");
					this.OnSipAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNumbers", DbType="Int")]
		public System.Nullable<int> TotalNumbers
		{
			get
			{
				return this._TotalNumbers;
			}
			set
			{
				if ((this._TotalNumbers != value))
				{
					this.OnTotalNumbersChanging(value);
					this.SendPropertyChanging();
					this._TotalNumbers = value;
					this.SendPropertyChanged("TotalNumbers");
					this.OnTotalNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioOfCalls", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RatioOfCalls
		{
			get
			{
				return this._RatioOfCalls;
			}
			set
			{
				if ((this._RatioOfCalls != value))
				{
					this.OnRatioOfCallsChanging(value);
					this.SendPropertyChanging();
					this._RatioOfCalls = value;
					this.SendPropertyChanged("RatioOfCalls");
					this.OnRatioOfCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleLog", Storage="_ScheduleLogs", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleLog> ScheduleLogs
		{
			get
			{
				return this._ScheduleLogs;
			}
			set
			{
				this._ScheduleLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleGroup", Storage="_ScheduleGroups", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleGroup> ScheduleGroups
		{
			get
			{
				return this._ScheduleGroups;
			}
			set
			{
				this._ScheduleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_GeneratedCall", Storage="_GeneratedCalls", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<GeneratedCall> GeneratedCalls
		{
			get
			{
				return this._GeneratedCalls;
			}
			set
			{
				this._GeneratedCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_Schedule", Storage="_SipAccount", ThisKey="SipAccountId", OtherKey="Id", IsForeignKey=true)]
		public SipAccount SipAccount
		{
			get
			{
				return this._SipAccount.Entity;
			}
			set
			{
				SipAccount previousValue = this._SipAccount.Entity;
				if (((previousValue != value) 
							|| (this._SipAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipAccount.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._SipAccount.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._SipAccountId = value.Id;
					}
					else
					{
						this._SipAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleLogs(ScheduleLog entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleLogs(ScheduleLog entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SipAccounts")]
	public partial class SipAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Login;
		
		private string _Password;
		
		private string _Server;
		
		private System.Nullable<bool> _UseProxy;
		
		private string _ProxyServer;
		
		private string _ProxyUser;
		
		private string _ProxyPass;
		
		private string _DisplayName;
		
		private System.Nullable<int> _TotalLines;
		
		private System.Nullable<bool> _UseAudio;
		
		private string _DefaultAudioFileName;
		
		private System.Data.Linq.Binary _DefaultAudioFile;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _PlaybackDevice;
		
		private string _NetworkInterface;
		
		private string _Codecs;
		
		private System.Nullable<int> _UserId;
		
		private EntitySet<GeneratedCall> _GeneratedCalls;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnUseProxyChanging(System.Nullable<bool> value);
    partial void OnUseProxyChanged();
    partial void OnProxyServerChanging(string value);
    partial void OnProxyServerChanged();
    partial void OnProxyUserChanging(string value);
    partial void OnProxyUserChanged();
    partial void OnProxyPassChanging(string value);
    partial void OnProxyPassChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTotalLinesChanging(System.Nullable<int> value);
    partial void OnTotalLinesChanged();
    partial void OnUseAudioChanging(System.Nullable<bool> value);
    partial void OnUseAudioChanged();
    partial void OnDefaultAudioFileNameChanging(string value);
    partial void OnDefaultAudioFileNameChanged();
    partial void OnDefaultAudioFileChanging(System.Data.Linq.Binary value);
    partial void OnDefaultAudioFileChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnPlaybackDeviceChanging(string value);
    partial void OnPlaybackDeviceChanged();
    partial void OnNetworkInterfaceChanging(string value);
    partial void OnNetworkInterfaceChanged();
    partial void OnCodecsChanging(string value);
    partial void OnCodecsChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public SipAccount()
		{
			this._GeneratedCalls = new EntitySet<GeneratedCall>(new Action<GeneratedCall>(this.attach_GeneratedCalls), new Action<GeneratedCall>(this.detach_GeneratedCalls));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(500)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(500)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(500)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="VarChar(500)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseProxy", DbType="Bit")]
		public System.Nullable<bool> UseProxy
		{
			get
			{
				return this._UseProxy;
			}
			set
			{
				if ((this._UseProxy != value))
				{
					this.OnUseProxyChanging(value);
					this.SendPropertyChanging();
					this._UseProxy = value;
					this.SendPropertyChanged("UseProxy");
					this.OnUseProxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyServer", DbType="VarChar(500)")]
		public string ProxyServer
		{
			get
			{
				return this._ProxyServer;
			}
			set
			{
				if ((this._ProxyServer != value))
				{
					this.OnProxyServerChanging(value);
					this.SendPropertyChanging();
					this._ProxyServer = value;
					this.SendPropertyChanged("ProxyServer");
					this.OnProxyServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyUser", DbType="VarChar(500)")]
		public string ProxyUser
		{
			get
			{
				return this._ProxyUser;
			}
			set
			{
				if ((this._ProxyUser != value))
				{
					this.OnProxyUserChanging(value);
					this.SendPropertyChanging();
					this._ProxyUser = value;
					this.SendPropertyChanged("ProxyUser");
					this.OnProxyUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyPass", DbType="VarChar(500)")]
		public string ProxyPass
		{
			get
			{
				return this._ProxyPass;
			}
			set
			{
				if ((this._ProxyPass != value))
				{
					this.OnProxyPassChanging(value);
					this.SendPropertyChanging();
					this._ProxyPass = value;
					this.SendPropertyChanged("ProxyPass");
					this.OnProxyPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLines", DbType="Int")]
		public System.Nullable<int> TotalLines
		{
			get
			{
				return this._TotalLines;
			}
			set
			{
				if ((this._TotalLines != value))
				{
					this.OnTotalLinesChanging(value);
					this.SendPropertyChanging();
					this._TotalLines = value;
					this.SendPropertyChanged("TotalLines");
					this.OnTotalLinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAudio", DbType="Bit")]
		public System.Nullable<bool> UseAudio
		{
			get
			{
				return this._UseAudio;
			}
			set
			{
				if ((this._UseAudio != value))
				{
					this.OnUseAudioChanging(value);
					this.SendPropertyChanging();
					this._UseAudio = value;
					this.SendPropertyChanged("UseAudio");
					this.OnUseAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAudioFileName", DbType="VarChar(500)")]
		public string DefaultAudioFileName
		{
			get
			{
				return this._DefaultAudioFileName;
			}
			set
			{
				if ((this._DefaultAudioFileName != value))
				{
					this.OnDefaultAudioFileNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultAudioFileName = value;
					this.SendPropertyChanged("DefaultAudioFileName");
					this.OnDefaultAudioFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAudioFile", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DefaultAudioFile
		{
			get
			{
				return this._DefaultAudioFile;
			}
			set
			{
				if ((this._DefaultAudioFile != value))
				{
					this.OnDefaultAudioFileChanging(value);
					this.SendPropertyChanging();
					this._DefaultAudioFile = value;
					this.SendPropertyChanged("DefaultAudioFile");
					this.OnDefaultAudioFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaybackDevice", DbType="NVarChar(MAX)")]
		public string PlaybackDevice
		{
			get
			{
				return this._PlaybackDevice;
			}
			set
			{
				if ((this._PlaybackDevice != value))
				{
					this.OnPlaybackDeviceChanging(value);
					this.SendPropertyChanging();
					this._PlaybackDevice = value;
					this.SendPropertyChanged("PlaybackDevice");
					this.OnPlaybackDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkInterface", DbType="NVarChar(MAX)")]
		public string NetworkInterface
		{
			get
			{
				return this._NetworkInterface;
			}
			set
			{
				if ((this._NetworkInterface != value))
				{
					this.OnNetworkInterfaceChanging(value);
					this.SendPropertyChanging();
					this._NetworkInterface = value;
					this.SendPropertyChanged("NetworkInterface");
					this.OnNetworkInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codecs", DbType="VarChar(500)")]
		public string Codecs
		{
			get
			{
				return this._Codecs;
			}
			set
			{
				if ((this._Codecs != value))
				{
					this.OnCodecsChanging(value);
					this.SendPropertyChanging();
					this._Codecs = value;
					this.SendPropertyChanged("Codecs");
					this.OnCodecsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_GeneratedCall", Storage="_GeneratedCalls", ThisKey="Id", OtherKey="SipAccountId")]
		public EntitySet<GeneratedCall> GeneratedCalls
		{
			get
			{
				return this._GeneratedCalls;
			}
			set
			{
				this._GeneratedCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_Schedule", Storage="_Schedules", ThisKey="Id", OtherKey="SipAccountId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SipAccount", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SipAccounts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SipAccounts.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = this;
		}
		
		private void detach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ChartCalls
	{
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalCalls;
		
		public ChartCalls()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCalls")]
		public System.Nullable<int> TotalCalls
		{
			get
			{
				return this._TotalCalls;
			}
			set
			{
				if ((this._TotalCalls != value))
				{
					this._TotalCalls = value;
				}
			}
		}
	}
	
	public partial class GetScheduleNumbersResult
	{
		
		private string _Number;
		
		private int _GroupId;
		
		public GetScheduleNumbersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
	}
	
	public partial class GetCDRResult
	{
		
		private System.Nullable<long> _RowNum;
		
		private System.Nullable<System.DateTime> _ConnectDateTime;
		
		private System.Nullable<System.DateTime> _DisconnectDateTime;
		
		private string _CDPN;
		
		private string _CAUSE_FROM_RELEASE_CODE;
		
		private System.Nullable<int> _ClientId;
		
		private System.Nullable<int> _RowCount;
		
		public GetCDRResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNum", DbType="BigInt")]
		public System.Nullable<long> RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this._RowNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConnectDateTime
		{
			get
			{
				return this._ConnectDateTime;
			}
			set
			{
				if ((this._ConnectDateTime != value))
				{
					this._ConnectDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisconnectDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisconnectDateTime
		{
			get
			{
				return this._DisconnectDateTime;
			}
			set
			{
				if ((this._DisconnectDateTime != value))
				{
					this._DisconnectDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPN", DbType="VarChar(40)")]
		public string CDPN
		{
			get
			{
				return this._CDPN;
			}
			set
			{
				if ((this._CDPN != value))
				{
					this._CDPN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_FROM_RELEASE_CODE", DbType="VarChar(20)")]
		public string CAUSE_FROM_RELEASE_CODE
		{
			get
			{
				return this._CAUSE_FROM_RELEASE_CODE;
			}
			set
			{
				if ((this._CAUSE_FROM_RELEASE_CODE != value))
				{
					this._CAUSE_FROM_RELEASE_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[RowCount]", Storage="_RowCount", DbType="Int")]
		public System.Nullable<int> RowCount
		{
			get
			{
				return this._RowCount;
			}
			set
			{
				if ((this._RowCount != value))
				{
					this._RowCount = value;
				}
			}
		}
	}
	
	public partial class GetChartTotalsResult
	{
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalCalls;
		
		public GetChartTotalsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCalls", DbType="Int")]
		public System.Nullable<int> TotalCalls
		{
			get
			{
				return this._TotalCalls;
			}
			set
			{
				if ((this._TotalCalls != value))
				{
					this._TotalCalls = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
