#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallGeneratorLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FraudTest2")]
	public partial class CallGeneratorModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSipStatus(SipStatus instance);
    partial void UpdateSipStatus(SipStatus instance);
    partial void DeleteSipStatus(SipStatus instance);
    partial void InsertCallEntryStatus(CallEntryStatus instance);
    partial void UpdateCallEntryStatus(CallEntryStatus instance);
    partial void DeleteCallEntryStatus(CallEntryStatus instance);
    partial void InsertCallSession(CallSession instance);
    partial void UpdateCallSession(CallSession instance);
    partial void DeleteCallSession(CallSession instance);
    partial void InsertException(Exception instance);
    partial void UpdateException(Exception instance);
    partial void DeleteException(Exception instance);
    partial void InsertCallEntryDetail(CallEntryDetail instance);
    partial void UpdateCallEntryDetail(CallEntryDetail instance);
    partial void DeleteCallEntryDetail(CallEntryDetail instance);
    partial void InsertActionLog(ActionLog instance);
    partial void UpdateActionLog(ActionLog instance);
    partial void DeleteActionLog(ActionLog instance);
    partial void InsertScheduleWeekDay(ScheduleWeekDay instance);
    partial void UpdateScheduleWeekDay(ScheduleWeekDay instance);
    partial void DeleteScheduleWeekDay(ScheduleWeekDay instance);
    partial void InsertCallGeneratorLogEntry(CallGeneratorLogEntry instance);
    partial void UpdateCallGeneratorLogEntry(CallGeneratorLogEntry instance);
    partial void DeleteCallGeneratorLogEntry(CallGeneratorLogEntry instance);
    partial void InsertScheduleNumber(ScheduleNumber instance);
    partial void UpdateScheduleNumber(ScheduleNumber instance);
    partial void DeleteScheduleNumber(ScheduleNumber instance);
    partial void InsertLookup(Lookup instance);
    partial void UpdateLookup(Lookup instance);
    partial void DeleteLookup(Lookup instance);
    partial void InsertLookupValue(LookupValue instance);
    partial void UpdateLookupValue(LookupValue instance);
    partial void DeleteLookupValue(LookupValue instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPagesPermission(PagesPermission instance);
    partial void UpdatePagesPermission(PagesPermission instance);
    partial void DeletePagesPermission(PagesPermission instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertRolePermission(RolePermission instance);
    partial void UpdateRolePermission(RolePermission instance);
    partial void DeleteRolePermission(RolePermission instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertCarrier(Carrier instance);
    partial void UpdateCarrier(Carrier instance);
    partial void DeleteCarrier(Carrier instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertScheduleOperator(ScheduleOperator instance);
    partial void UpdateScheduleOperator(ScheduleOperator instance);
    partial void DeleteScheduleOperator(ScheduleOperator instance);
    partial void InsertOperator(Operator instance);
    partial void UpdateOperator(Operator instance);
    partial void DeleteOperator(Operator instance);
    partial void InsertTestNumber(TestNumber instance);
    partial void UpdateTestNumber(TestNumber instance);
    partial void DeleteTestNumber(TestNumber instance);
    partial void InsertScheduleGroup(ScheduleGroup instance);
    partial void UpdateScheduleGroup(ScheduleGroup instance);
    partial void DeleteScheduleGroup(ScheduleGroup instance);
    partial void InsertTestNumberGroup(TestNumberGroup instance);
    partial void UpdateTestNumberGroup(TestNumberGroup instance);
    partial void DeleteTestNumberGroup(TestNumberGroup instance);
    partial void InsertTestNumber1(TestNumber1 instance);
    partial void UpdateTestNumber1(TestNumber1 instance);
    partial void DeleteTestNumber1(TestNumber1 instance);
    partial void InsertCallEntry(CallEntry instance);
    partial void UpdateCallEntry(CallEntry instance);
    partial void DeleteCallEntry(CallEntry instance);
    partial void InsertCDR(CDR instance);
    partial void UpdateCDR(CDR instance);
    partial void DeleteCDR(CDR instance);
    partial void InsertGeneratedCall(GeneratedCall instance);
    partial void UpdateGeneratedCall(GeneratedCall instance);
    partial void DeleteGeneratedCall(GeneratedCall instance);
    partial void InsertSipAccount(SipAccount instance);
    partial void UpdateSipAccount(SipAccount instance);
    partial void DeleteSipAccount(SipAccount instance);
    partial void InsertMontyCall(MontyCall instance);
    partial void UpdateMontyCall(MontyCall instance);
    partial void DeleteMontyCall(MontyCall instance);
    partial void InsertScheduleLog(ScheduleLog instance);
    partial void UpdateScheduleLog(ScheduleLog instance);
    partial void DeleteScheduleLog(ScheduleLog instance);
    partial void InsertTestOperator(TestOperator instance);
    partial void UpdateTestOperator(TestOperator instance);
    partial void DeleteTestOperator(TestOperator instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public CallGeneratorModelDataContext() : 
				base(global::CallGeneratorLibrary.Properties.Settings.Default.FraudTest2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SipStatus> SipStatus
		{
			get
			{
				return this.GetTable<SipStatus>();
			}
		}
		
		public System.Data.Linq.Table<CallEntryStatus> CallEntryStatus
		{
			get
			{
				return this.GetTable<CallEntryStatus>();
			}
		}
		
		public System.Data.Linq.Table<CallSession> CallSessions
		{
			get
			{
				return this.GetTable<CallSession>();
			}
		}
		
		public System.Data.Linq.Table<Exception> Exceptions
		{
			get
			{
				return this.GetTable<Exception>();
			}
		}
		
		public System.Data.Linq.Table<CallEntryDetail> CallEntryDetails
		{
			get
			{
				return this.GetTable<CallEntryDetail>();
			}
		}
		
		public System.Data.Linq.Table<ActionLog> ActionLogs
		{
			get
			{
				return this.GetTable<ActionLog>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleWeekDay> ScheduleWeekDays
		{
			get
			{
				return this.GetTable<ScheduleWeekDay>();
			}
		}
		
		public System.Data.Linq.Table<CallGeneratorLogEntry> CallGeneratorLogEntries
		{
			get
			{
				return this.GetTable<CallGeneratorLogEntry>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleNumber> ScheduleNumbers
		{
			get
			{
				return this.GetTable<ScheduleNumber>();
			}
		}
		
		public System.Data.Linq.Table<Lookup> Lookups
		{
			get
			{
				return this.GetTable<Lookup>();
			}
		}
		
		public System.Data.Linq.Table<LookupValue> LookupValues
		{
			get
			{
				return this.GetTable<LookupValue>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<PagesPermission> PagesPermissions
		{
			get
			{
				return this.GetTable<PagesPermission>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<RolePermission> RolePermissions
		{
			get
			{
				return this.GetTable<RolePermission>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<Carrier> Carriers
		{
			get
			{
				return this.GetTable<Carrier>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this.GetTable<ScheduleOperator>();
			}
		}
		
		public System.Data.Linq.Table<Operator> Operators
		{
			get
			{
				return this.GetTable<Operator>();
			}
		}
		
		public System.Data.Linq.Table<TestNumber> TestNumbers
		{
			get
			{
				return this.GetTable<TestNumber>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleGroup> ScheduleGroups
		{
			get
			{
				return this.GetTable<ScheduleGroup>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<TestNumberGroup> TestNumberGroups
		{
			get
			{
				return this.GetTable<TestNumberGroup>();
			}
		}
		
		public System.Data.Linq.Table<TestNumber1> TestNumber1s
		{
			get
			{
				return this.GetTable<TestNumber1>();
			}
		}
		
		public System.Data.Linq.Table<CallEntry> CallEntries
		{
			get
			{
				return this.GetTable<CallEntry>();
			}
		}
		
		public System.Data.Linq.Table<CDR> CDRs
		{
			get
			{
				return this.GetTable<CDR>();
			}
		}
		
		public System.Data.Linq.Table<GeneratedCall> GeneratedCalls
		{
			get
			{
				return this.GetTable<GeneratedCall>();
			}
		}
		
		public System.Data.Linq.Table<SipAccount> SipAccounts
		{
			get
			{
				return this.GetTable<SipAccount>();
			}
		}
		
		public System.Data.Linq.Table<MontyCall> MontyCalls
		{
			get
			{
				return this.GetTable<MontyCall>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleLog> ScheduleLogs
		{
			get
			{
				return this.GetTable<ScheduleLog>();
			}
		}
		
		public System.Data.Linq.Table<TestOperator> TestOperators
		{
			get
			{
				return this.GetTable<TestOperator>();
			}
		}
		
		public System.Data.Linq.Table<DataCalls> DataCalls
		{
			get
			{
				return this.GetTable<DataCalls>();
			}
		}
		
		public System.Data.Linq.Table<ChartCalls> ChartCalls
		{
			get
			{
				return this.GetTable<ChartCalls>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRolePages")]
		public ISingleResult<Page> GetRolePages([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="NVarChar(255)")] string roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleId);
			return ((ISingleResult<Page>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRolePermissionActions")]
		public ISingleResult<RolePermission> GetRolePermissionActions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleIds", DbType="NVarChar(255)")] string roleIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageName", DbType="NVarChar(255)")] string pageName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleIds, pageName);
			return ((ISingleResult<RolePermission>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRolePermissions")]
		public ISingleResult<Permission> GetRolePermissions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="Int")] System.Nullable<int> roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleId);
			return ((ISingleResult<Permission>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRoleUsers")]
		public ISingleResult<User> GetRoleUsers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="Int")] System.Nullable<int> roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleId);
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserRoles")]
		public ISingleResult<Role> GetUserRoles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<Role>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetData")]
		public ISingleResult<GetDataResult> GetData()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetChartTotals")]
		public ISingleResult<GetChartTotalsResult> GetChartTotals([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status);
			return ((ISingleResult<GetChartTotalsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SipStatus")]
	public partial class SipStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StatusId;
		
		private string _Description;
		
		private EntitySet<CallEntryDetail> _CallEntryDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SipStatus()
		{
			this._CallEntryDetails = new EntitySet<CallEntryDetail>(new Action<CallEntryDetail>(this.attach_CallEntryDetails), new Action<CallEntryDetail>(this.detach_CallEntryDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipStatus_CallEntryDetail", Storage="_CallEntryDetails", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<CallEntryDetail> CallEntryDetails
		{
			get
			{
				return this._CallEntryDetails;
			}
			set
			{
				this._CallEntryDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallEntryDetails(CallEntryDetail entity)
		{
			this.SendPropertyChanging();
			entity.SipStatus = this;
		}
		
		private void detach_CallEntryDetails(CallEntryDetail entity)
		{
			this.SendPropertyChanging();
			entity.SipStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallEntryStatus")]
	public partial class CallEntryStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<CallEntry> _CallEntries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CallEntryStatus()
		{
			this._CallEntries = new EntitySet<CallEntry>(new Action<CallEntry>(this.attach_CallEntries), new Action<CallEntry>(this.detach_CallEntries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallEntryStatus_CallEntry", Storage="_CallEntries", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<CallEntry> CallEntries
		{
			get
			{
				return this._CallEntries;
			}
			set
			{
				this._CallEntries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallEntries(CallEntry entity)
		{
			this.SendPropertyChanging();
			entity.CallEntryStatus = this;
		}
		
		private void detach_CallEntries(CallEntry entity)
		{
			this.SendPropertyChanging();
			entity.CallEntryStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallSessions")]
	public partial class CallSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SessionId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<int> _SipAccountId;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _CheckAfter;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _CallerId;
		
		private System.Nullable<int> _TransactionId;
		
		private EntitySet<CallEntry> _CallEntries;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<SipAccount> _SipAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnSipAccountIdChanging(System.Nullable<int> value);
    partial void OnSipAccountIdChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCheckAfterChanging(System.Nullable<int> value);
    partial void OnCheckAfterChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnCallerIdChanging(string value);
    partial void OnCallerIdChanged();
    partial void OnTransactionIdChanging(System.Nullable<int> value);
    partial void OnTransactionIdChanged();
    #endregion
		
		public CallSession()
		{
			this._CallEntries = new EntitySet<CallEntry>(new Action<CallEntry>(this.attach_CallEntries), new Action<CallEntry>(this.detach_CallEntries));
			this._Schedule = default(EntityRef<Schedule>);
			this._SipAccount = default(EntityRef<SipAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SipAccountId", DbType="Int")]
		public System.Nullable<int> SipAccountId
		{
			get
			{
				return this._SipAccountId;
			}
			set
			{
				if ((this._SipAccountId != value))
				{
					if (this._SipAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSipAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SipAccountId = value;
					this.SendPropertyChanged("SipAccountId");
					this.OnSipAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckAfter", DbType="Int")]
		public System.Nullable<int> CheckAfter
		{
			get
			{
				return this._CheckAfter;
			}
			set
			{
				if ((this._CheckAfter != value))
				{
					this.OnCheckAfterChanging(value);
					this.SendPropertyChanging();
					this._CheckAfter = value;
					this.SendPropertyChanged("CheckAfter");
					this.OnCheckAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallerId", DbType="NVarChar(200)")]
		public string CallerId
		{
			get
			{
				return this._CallerId;
			}
			set
			{
				if ((this._CallerId != value))
				{
					this.OnCallerIdChanging(value);
					this.SendPropertyChanging();
					this._CallerId = value;
					this.SendPropertyChanged("CallerId");
					this.OnCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="Int")]
		public System.Nullable<int> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallSession_CallEntry", Storage="_CallEntries", ThisKey="SessionId", OtherKey="SessionId")]
		public EntitySet<CallEntry> CallEntries
		{
			get
			{
				return this._CallEntries;
			}
			set
			{
				this._CallEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_CallSession", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.CallSessions.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.CallSessions.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_CallSession", Storage="_SipAccount", ThisKey="SipAccountId", OtherKey="Id", IsForeignKey=true)]
		public SipAccount SipAccount
		{
			get
			{
				return this._SipAccount.Entity;
			}
			set
			{
				SipAccount previousValue = this._SipAccount.Entity;
				if (((previousValue != value) 
							|| (this._SipAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipAccount.Entity = null;
						previousValue.CallSessions.Remove(this);
					}
					this._SipAccount.Entity = value;
					if ((value != null))
					{
						value.CallSessions.Add(this);
						this._SipAccountId = value.Id;
					}
					else
					{
						this._SipAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallEntries(CallEntry entity)
		{
			this.SendPropertyChanging();
			entity.CallSession = this;
		}
		
		private void detach_CallEntries(CallEntry entity)
		{
			this.SendPropertyChanging();
			entity.CallSession = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exceptions")]
	public partial class Exception : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Details;
		
		private System.Nullable<System.DateTime> _ExceptionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnExceptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExceptionDateChanged();
    #endregion
		
		public Exception()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(4000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExceptionDate
		{
			get
			{
				return this._ExceptionDate;
			}
			set
			{
				if ((this._ExceptionDate != value))
				{
					this.OnExceptionDateChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDate = value;
					this.SendPropertyChanged("ExceptionDate");
					this.OnExceptionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallEntryDetails")]
	public partial class CallEntryDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CallEntriesId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _StatusId;
		
		private EntityRef<SipStatus> _SipStatus;
		
		private EntityRef<CallEntry> _CallEntry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCallEntriesIdChanging(System.Nullable<int> value);
    partial void OnCallEntriesIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    #endregion
		
		public CallEntryDetail()
		{
			this._SipStatus = default(EntityRef<SipStatus>);
			this._CallEntry = default(EntityRef<CallEntry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallEntriesId", DbType="Int")]
		public System.Nullable<int> CallEntriesId
		{
			get
			{
				return this._CallEntriesId;
			}
			set
			{
				if ((this._CallEntriesId != value))
				{
					if (this._CallEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCallEntriesIdChanging(value);
					this.SendPropertyChanging();
					this._CallEntriesId = value;
					this.SendPropertyChanged("CallEntriesId");
					this.OnCallEntriesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._SipStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipStatus_CallEntryDetail", Storage="_SipStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public SipStatus SipStatus
		{
			get
			{
				return this._SipStatus.Entity;
			}
			set
			{
				SipStatus previousValue = this._SipStatus.Entity;
				if (((previousValue != value) 
							|| (this._SipStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipStatus.Entity = null;
						previousValue.CallEntryDetails.Remove(this);
					}
					this._SipStatus.Entity = value;
					if ((value != null))
					{
						value.CallEntryDetails.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallEntry_CallEntryDetail", Storage="_CallEntry", ThisKey="CallEntriesId", OtherKey="Id", IsForeignKey=true)]
		public CallEntry CallEntry
		{
			get
			{
				return this._CallEntry.Entity;
			}
			set
			{
				CallEntry previousValue = this._CallEntry.Entity;
				if (((previousValue != value) 
							|| (this._CallEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CallEntry.Entity = null;
						previousValue.CallEntryDetails.Remove(this);
					}
					this._CallEntry.Entity = value;
					if ((value != null))
					{
						value.CallEntryDetails.Add(this);
						this._CallEntriesId = value.Id;
					}
					else
					{
						this._CallEntriesId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CallEntry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionLog")]
	public partial class ActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ActionType;
		
		private string _Username;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private string _ObjectType;
		
		private System.Nullable<int> _ObjectId;
		
		private string _Description;
		
		private string _IPAddress;
		
		private string _RemoteAddress;
		
		private string _ComputerName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActionTypeChanging(System.Nullable<int> value);
    partial void OnActionTypeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnObjectIdChanging(System.Nullable<int> value);
    partial void OnObjectIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnRemoteAddressChanging(string value);
    partial void OnRemoteAddressChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    #endregion
		
		public ActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="Int")]
		public System.Nullable<int> ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(255)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int")]
		public System.Nullable<int> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteAddress", DbType="NVarChar(50)")]
		public string RemoteAddress
		{
			get
			{
				return this._RemoteAddress;
			}
			set
			{
				if ((this._RemoteAddress != value))
				{
					this.OnRemoteAddressChanging(value);
					this.SendPropertyChanging();
					this._RemoteAddress = value;
					this.SendPropertyChanged("RemoteAddress");
					this.OnRemoteAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(255)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleWeekDays")]
	public partial class ScheduleWeekDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<int> _WeekDay;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnWeekDayChanging(System.Nullable<int> value);
    partial void OnWeekDayChanged();
    #endregion
		
		public ScheduleWeekDay()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekDay", DbType="Int")]
		public System.Nullable<int> WeekDay
		{
			get
			{
				return this._WeekDay;
			}
			set
			{
				if ((this._WeekDay != value))
				{
					this.OnWeekDayChanging(value);
					this.SendPropertyChanging();
					this._WeekDay = value;
					this.SendPropertyChanged("WeekDay");
					this.OnWeekDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleWeekDay", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleWeekDays.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleWeekDays.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallGeneratorLogEntries")]
	public partial class CallGeneratorLogEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleLogId;
		
		private string _Message;
		
		private string _Number;
		
		private string _Status;
		
		private System.Nullable<int> _ConnectionId;
		
		private System.Nullable<int> _LineId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _SessionId;
		
		private EntityRef<ScheduleLog> _ScheduleLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleLogIdChanging(System.Nullable<int> value);
    partial void OnScheduleLogIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnConnectionIdChanging(System.Nullable<int> value);
    partial void OnConnectionIdChanged();
    partial void OnLineIdChanging(System.Nullable<int> value);
    partial void OnLineIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    #endregion
		
		public CallGeneratorLogEntry()
		{
			this._ScheduleLog = default(EntityRef<ScheduleLog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleLogId", DbType="Int")]
		public System.Nullable<int> ScheduleLogId
		{
			get
			{
				return this._ScheduleLogId;
			}
			set
			{
				if ((this._ScheduleLogId != value))
				{
					if (this._ScheduleLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleLogIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleLogId = value;
					this.SendPropertyChanged("ScheduleLogId");
					this.OnScheduleLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(500)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(500)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(500)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionId", DbType="Int")]
		public System.Nullable<int> ConnectionId
		{
			get
			{
				return this._ConnectionId;
			}
			set
			{
				if ((this._ConnectionId != value))
				{
					this.OnConnectionIdChanging(value);
					this.SendPropertyChanging();
					this._ConnectionId = value;
					this.SendPropertyChanged("ConnectionId");
					this.OnConnectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineId", DbType="Int")]
		public System.Nullable<int> LineId
		{
			get
			{
				return this._LineId;
			}
			set
			{
				if ((this._LineId != value))
				{
					this.OnLineIdChanging(value);
					this.SendPropertyChanging();
					this._LineId = value;
					this.SendPropertyChanged("LineId");
					this.OnLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="VarChar(50)")]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduleLog_CallGeneratorLogEntry", Storage="_ScheduleLog", ThisKey="ScheduleLogId", OtherKey="Id", IsForeignKey=true)]
		public ScheduleLog ScheduleLog
		{
			get
			{
				return this._ScheduleLog.Entity;
			}
			set
			{
				ScheduleLog previousValue = this._ScheduleLog.Entity;
				if (((previousValue != value) 
							|| (this._ScheduleLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScheduleLog.Entity = null;
						previousValue.CallGeneratorLogEntries.Remove(this);
					}
					this._ScheduleLog.Entity = value;
					if ((value != null))
					{
						value.CallGeneratorLogEntries.Add(this);
						this._ScheduleLogId = value.Id;
					}
					else
					{
						this._ScheduleLogId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ScheduleLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleNumbers")]
	public partial class ScheduleNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private string _Number;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public ScheduleNumber()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleNumber", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleNumbers.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleNumbers.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lookups")]
	public partial class Lookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private EntitySet<LookupValue> _LookupValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public Lookup()
		{
			this._LookupValues = new EntitySet<LookupValue>(new Action<LookupValue>(this.attach_LookupValues), new Action<LookupValue>(this.detach_LookupValues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_LookupValue", Storage="_LookupValues", ThisKey="Id", OtherKey="LookupId")]
		public EntitySet<LookupValue> LookupValues
		{
			get
			{
				return this._LookupValues;
			}
			set
			{
				this._LookupValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LookupValues(LookupValue entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = this;
		}
		
		private void detach_LookupValues(LookupValue entity)
		{
			this.SendPropertyChanging();
			entity.Lookup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupValues")]
	public partial class LookupValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NameAr;
		
		private string _NameEn;
		
		private string _NameFr;
		
		private System.Nullable<int> _LookupId;
		
		private string _LookValue;
		
		private System.Nullable<int> _OrderNumber;
		
		private EntityRef<Lookup> _Lookup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameArChanging(string value);
    partial void OnNameArChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameFrChanging(string value);
    partial void OnNameFrChanged();
    partial void OnLookupIdChanging(System.Nullable<int> value);
    partial void OnLookupIdChanged();
    partial void OnLookValueChanging(string value);
    partial void OnLookValueChanged();
    partial void OnOrderNumberChanging(System.Nullable<int> value);
    partial void OnOrderNumberChanged();
    #endregion
		
		public LookupValue()
		{
			this._Lookup = default(EntityRef<Lookup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAr", DbType="NVarChar(500)")]
		public string NameAr
		{
			get
			{
				return this._NameAr;
			}
			set
			{
				if ((this._NameAr != value))
				{
					this.OnNameArChanging(value);
					this.SendPropertyChanging();
					this._NameAr = value;
					this.SendPropertyChanged("NameAr");
					this.OnNameArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(500)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFr", DbType="NVarChar(500)")]
		public string NameFr
		{
			get
			{
				return this._NameFr;
			}
			set
			{
				if ((this._NameFr != value))
				{
					this.OnNameFrChanging(value);
					this.SendPropertyChanging();
					this._NameFr = value;
					this.SendPropertyChanged("NameFr");
					this.OnNameFrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupId", DbType="Int")]
		public System.Nullable<int> LookupId
		{
			get
			{
				return this._LookupId;
			}
			set
			{
				if ((this._LookupId != value))
				{
					if (this._Lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLookupIdChanging(value);
					this.SendPropertyChanging();
					this._LookupId = value;
					this.SendPropertyChanged("LookupId");
					this.OnLookupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookValue", DbType="NVarChar(50)")]
		public string LookValue
		{
			get
			{
				return this._LookValue;
			}
			set
			{
				if ((this._LookValue != value))
				{
					this.OnLookValueChanging(value);
					this.SendPropertyChanging();
					this._LookValue = value;
					this.SendPropertyChanged("LookValue");
					this.OnLookValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="Int")]
		public System.Nullable<int> OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_LookupValue", Storage="_Lookup", ThisKey="LookupId", OtherKey="Id", IsForeignKey=true)]
		public Lookup Lookup
		{
			get
			{
				return this._Lookup.Entity;
			}
			set
			{
				Lookup previousValue = this._Lookup.Entity;
				if (((previousValue != value) 
							|| (this._Lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lookup.Entity = null;
						previousValue.LookupValues.Remove(this);
					}
					this._Lookup.Entity = value;
					if ((value != null))
					{
						value.LookupValues.Add(this);
						this._LookupId = value.Id;
					}
					else
					{
						this._LookupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lookup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<PagesPermission> _PagesPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Page()
		{
			this._PagesPermissions = new EntitySet<PagesPermission>(new Action<PagesPermission>(this.attach_PagesPermissions), new Action<PagesPermission>(this.detach_PagesPermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PagesPermission", Storage="_PagesPermissions", ThisKey="Id", OtherKey="PageId")]
		public EntitySet<PagesPermission> PagesPermissions
		{
			get
			{
				return this._PagesPermissions;
			}
			set
			{
				this._PagesPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PagesPermissions(PagesPermission entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_PagesPermissions(PagesPermission entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PagesPermissions")]
	public partial class PagesPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PermissionId;
		
		private System.Nullable<int> _PageId;
		
		private EntityRef<Page> _Page;
		
		private EntityRef<Permission> _Permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPermissionIdChanging(System.Nullable<int> value);
    partial void OnPermissionIdChanged();
    partial void OnPageIdChanging(System.Nullable<int> value);
    partial void OnPageIdChanged();
    #endregion
		
		public PagesPermission()
		{
			this._Page = default(EntityRef<Page>);
			this._Permission = default(EntityRef<Permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int")]
		public System.Nullable<int> PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int")]
		public System.Nullable<int> PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PagesPermission", Storage="_Page", ThisKey="PageId", OtherKey="Id", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.PagesPermissions.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.PagesPermissions.Add(this);
						this._PageId = value.Id;
					}
					else
					{
						this._PageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_PagesPermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.PagesPermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.PagesPermissions.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _ApplicationId;
		
		private EntitySet<PagesPermission> _PagesPermissions;
		
		private EntitySet<RolePermission> _RolePermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnApplicationIdChanging(System.Nullable<int> value);
    partial void OnApplicationIdChanged();
    #endregion
		
		public Permission()
		{
			this._PagesPermissions = new EntitySet<PagesPermission>(new Action<PagesPermission>(this.attach_PagesPermissions), new Action<PagesPermission>(this.detach_PagesPermissions));
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int")]
		public System.Nullable<int> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_PagesPermission", Storage="_PagesPermissions", ThisKey="Id", OtherKey="PermissionId")]
		public EntitySet<PagesPermission> PagesPermissions
		{
			get
			{
				return this._PagesPermissions;
			}
			set
			{
				this._PagesPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_RolePermissions", ThisKey="Id", OtherKey="PermissionId")]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PagesPermissions(PagesPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_PagesPermissions(PagesPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolePermissions")]
	public partial class RolePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _RoleId;
		
		private System.Nullable<int> _PermissionId;
		
		private System.Nullable<bool> _CanAdd;
		
		private System.Nullable<bool> _CanEdit;
		
		private System.Nullable<bool> _CanDelete;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnPermissionIdChanging(System.Nullable<int> value);
    partial void OnPermissionIdChanged();
    partial void OnCanAddChanging(System.Nullable<bool> value);
    partial void OnCanAddChanged();
    partial void OnCanEditChanging(System.Nullable<bool> value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(System.Nullable<bool> value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public RolePermission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int")]
		public System.Nullable<int> PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit")]
		public System.Nullable<bool> CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit")]
		public System.Nullable<bool> CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit")]
		public System.Nullable<bool> CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<RolePermission> _RolePermissions;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_RolePermissions", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Carriers")]
	public partial class Carrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private string _Name;
		
		private string _Prefix;
		
		private string _ShortName;
		
		private EntitySet<ScheduleOperator> _ScheduleOperators;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Carrier()
		{
			this._ScheduleOperators = new EntitySet<ScheduleOperator>(new Action<ScheduleOperator>(this.attach_ScheduleOperators), new Action<ScheduleOperator>(this.detach_ScheduleOperators));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(50)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(500)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carrier_ScheduleOperator", Storage="_ScheduleOperators", ThisKey="Id", OtherKey="CarrierId")]
		public EntitySet<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this._ScheduleOperators;
			}
			set
			{
				this._ScheduleOperators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Carrier", Storage="_User", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Carriers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Carriers.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Carrier = this;
		}
		
		private void detach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Carrier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedules")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DisplayName;
		
		private System.Nullable<int> _Frequency;
		
		private System.Nullable<int> _TimeFrequency;
		
		private System.Nullable<int> _MonthDay;
		
		private System.Nullable<int> _OccursEvery;
		
		private System.Nullable<System.DateTime> _SpecificTime;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _SipAccountId;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalNumbers;
		
		private System.Nullable<decimal> _RatioOfCalls;
		
		private System.Nullable<int> _UserId;
		
		private EntitySet<CallSession> _CallSessions;
		
		private EntitySet<ScheduleWeekDay> _ScheduleWeekDays;
		
		private EntitySet<ScheduleNumber> _ScheduleNumbers;
		
		private EntitySet<ScheduleOperator> _ScheduleOperators;
		
		private EntitySet<ScheduleGroup> _ScheduleGroups;
		
		private EntitySet<ScheduleLog> _ScheduleLogs;
		
		private EntitySet<TestOperator> _TestOperators;
		
		private EntityRef<SipAccount> _SipAccount;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    partial void OnTimeFrequencyChanging(System.Nullable<int> value);
    partial void OnTimeFrequencyChanged();
    partial void OnMonthDayChanging(System.Nullable<int> value);
    partial void OnMonthDayChanged();
    partial void OnOccursEveryChanging(System.Nullable<int> value);
    partial void OnOccursEveryChanged();
    partial void OnSpecificTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSpecificTimeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSipAccountIdChanging(System.Nullable<int> value);
    partial void OnSipAccountIdChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnTotalNumbersChanging(System.Nullable<int> value);
    partial void OnTotalNumbersChanged();
    partial void OnRatioOfCallsChanging(System.Nullable<decimal> value);
    partial void OnRatioOfCallsChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public Schedule()
		{
			this._CallSessions = new EntitySet<CallSession>(new Action<CallSession>(this.attach_CallSessions), new Action<CallSession>(this.detach_CallSessions));
			this._ScheduleWeekDays = new EntitySet<ScheduleWeekDay>(new Action<ScheduleWeekDay>(this.attach_ScheduleWeekDays), new Action<ScheduleWeekDay>(this.detach_ScheduleWeekDays));
			this._ScheduleNumbers = new EntitySet<ScheduleNumber>(new Action<ScheduleNumber>(this.attach_ScheduleNumbers), new Action<ScheduleNumber>(this.detach_ScheduleNumbers));
			this._ScheduleOperators = new EntitySet<ScheduleOperator>(new Action<ScheduleOperator>(this.attach_ScheduleOperators), new Action<ScheduleOperator>(this.detach_ScheduleOperators));
			this._ScheduleGroups = new EntitySet<ScheduleGroup>(new Action<ScheduleGroup>(this.attach_ScheduleGroups), new Action<ScheduleGroup>(this.detach_ScheduleGroups));
			this._ScheduleLogs = new EntitySet<ScheduleLog>(new Action<ScheduleLog>(this.attach_ScheduleLogs), new Action<ScheduleLog>(this.detach_ScheduleLogs));
			this._TestOperators = new EntitySet<TestOperator>(new Action<TestOperator>(this.attach_TestOperators), new Action<TestOperator>(this.detach_TestOperators));
			this._SipAccount = default(EntityRef<SipAccount>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrequency", DbType="Int")]
		public System.Nullable<int> TimeFrequency
		{
			get
			{
				return this._TimeFrequency;
			}
			set
			{
				if ((this._TimeFrequency != value))
				{
					this.OnTimeFrequencyChanging(value);
					this.SendPropertyChanging();
					this._TimeFrequency = value;
					this.SendPropertyChanged("TimeFrequency");
					this.OnTimeFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDay", DbType="Int")]
		public System.Nullable<int> MonthDay
		{
			get
			{
				return this._MonthDay;
			}
			set
			{
				if ((this._MonthDay != value))
				{
					this.OnMonthDayChanging(value);
					this.SendPropertyChanging();
					this._MonthDay = value;
					this.SendPropertyChanged("MonthDay");
					this.OnMonthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccursEvery", DbType="Int")]
		public System.Nullable<int> OccursEvery
		{
			get
			{
				return this._OccursEvery;
			}
			set
			{
				if ((this._OccursEvery != value))
				{
					this.OnOccursEveryChanging(value);
					this.SendPropertyChanging();
					this._OccursEvery = value;
					this.SendPropertyChanged("OccursEvery");
					this.OnOccursEveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SpecificTime
		{
			get
			{
				return this._SpecificTime;
			}
			set
			{
				if ((this._SpecificTime != value))
				{
					this.OnSpecificTimeChanging(value);
					this.SendPropertyChanging();
					this._SpecificTime = value;
					this.SendPropertyChanged("SpecificTime");
					this.OnSpecificTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SipAccountId", DbType="Int")]
		public System.Nullable<int> SipAccountId
		{
			get
			{
				return this._SipAccountId;
			}
			set
			{
				if ((this._SipAccountId != value))
				{
					if (this._SipAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSipAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SipAccountId = value;
					this.SendPropertyChanged("SipAccountId");
					this.OnSipAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNumbers", DbType="Int")]
		public System.Nullable<int> TotalNumbers
		{
			get
			{
				return this._TotalNumbers;
			}
			set
			{
				if ((this._TotalNumbers != value))
				{
					this.OnTotalNumbersChanging(value);
					this.SendPropertyChanging();
					this._TotalNumbers = value;
					this.SendPropertyChanged("TotalNumbers");
					this.OnTotalNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioOfCalls", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RatioOfCalls
		{
			get
			{
				return this._RatioOfCalls;
			}
			set
			{
				if ((this._RatioOfCalls != value))
				{
					this.OnRatioOfCallsChanging(value);
					this.SendPropertyChanging();
					this._RatioOfCalls = value;
					this.SendPropertyChanged("RatioOfCalls");
					this.OnRatioOfCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_CallSession", Storage="_CallSessions", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<CallSession> CallSessions
		{
			get
			{
				return this._CallSessions;
			}
			set
			{
				this._CallSessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleWeekDay", Storage="_ScheduleWeekDays", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleWeekDay> ScheduleWeekDays
		{
			get
			{
				return this._ScheduleWeekDays;
			}
			set
			{
				this._ScheduleWeekDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleNumber", Storage="_ScheduleNumbers", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleNumber> ScheduleNumbers
		{
			get
			{
				return this._ScheduleNumbers;
			}
			set
			{
				this._ScheduleNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleOperator", Storage="_ScheduleOperators", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this._ScheduleOperators;
			}
			set
			{
				this._ScheduleOperators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleGroup", Storage="_ScheduleGroups", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleGroup> ScheduleGroups
		{
			get
			{
				return this._ScheduleGroups;
			}
			set
			{
				this._ScheduleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleLog", Storage="_ScheduleLogs", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleLog> ScheduleLogs
		{
			get
			{
				return this._ScheduleLogs;
			}
			set
			{
				this._ScheduleLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_TestOperator", Storage="_TestOperators", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<TestOperator> TestOperators
		{
			get
			{
				return this._TestOperators;
			}
			set
			{
				this._TestOperators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_Schedule", Storage="_SipAccount", ThisKey="SipAccountId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public SipAccount SipAccount
		{
			get
			{
				return this._SipAccount.Entity;
			}
			set
			{
				SipAccount previousValue = this._SipAccount.Entity;
				if (((previousValue != value) 
							|| (this._SipAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipAccount.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._SipAccount.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._SipAccountId = value.Id;
					}
					else
					{
						this._SipAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallSessions(CallSession entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_CallSessions(CallSession entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleWeekDays(ScheduleWeekDay entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleWeekDays(ScheduleWeekDay entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleNumbers(ScheduleNumber entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleNumbers(ScheduleNumber entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleLogs(ScheduleLog entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleLogs(ScheduleLog entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleOperators")]
	public partial class ScheduleOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<int> _CarrierId;
		
		private EntityRef<Carrier> _Carrier;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<Operator> _Operator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnCarrierIdChanging(System.Nullable<int> value);
    partial void OnCarrierIdChanged();
    #endregion
		
		public ScheduleOperator()
		{
			this._Carrier = default(EntityRef<Carrier>);
			this._Schedule = default(EntityRef<Schedule>);
			this._Operator = default(EntityRef<Operator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					if (this._Operator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierId", DbType="Int")]
		public System.Nullable<int> CarrierId
		{
			get
			{
				return this._CarrierId;
			}
			set
			{
				if ((this._CarrierId != value))
				{
					if (this._Carrier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarrierIdChanging(value);
					this.SendPropertyChanging();
					this._CarrierId = value;
					this.SendPropertyChanged("CarrierId");
					this.OnCarrierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carrier_ScheduleOperator", Storage="_Carrier", ThisKey="CarrierId", OtherKey="Id", IsForeignKey=true)]
		public Carrier Carrier
		{
			get
			{
				return this._Carrier.Entity;
			}
			set
			{
				Carrier previousValue = this._Carrier.Entity;
				if (((previousValue != value) 
							|| (this._Carrier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carrier.Entity = null;
						previousValue.ScheduleOperators.Remove(this);
					}
					this._Carrier.Entity = value;
					if ((value != null))
					{
						value.ScheduleOperators.Add(this);
						this._CarrierId = value.Id;
					}
					else
					{
						this._CarrierId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Carrier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleOperator", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleOperators.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleOperators.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_ScheduleOperator", Storage="_Operator", ThisKey="OperatorId", OtherKey="Id", IsForeignKey=true)]
		public Operator Operator
		{
			get
			{
				return this._Operator.Entity;
			}
			set
			{
				Operator previousValue = this._Operator.Entity;
				if (((previousValue != value) 
							|| (this._Operator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operator.Entity = null;
						previousValue.ScheduleOperators.Remove(this);
					}
					this._Operator.Entity = value;
					if ((value != null))
					{
						value.ScheduleOperators.Add(this);
						this._OperatorId = value.Id;
					}
					else
					{
						this._OperatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Operator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operators")]
	public partial class Operator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _mcc;
		
		private string _mnc;
		
		private string _Country;
		
		private System.Nullable<int> _Service;
		
		private string _CountryPicture;
		
		private EntitySet<ScheduleOperator> _ScheduleOperators;
		
		private EntitySet<TestOperator> _TestOperators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnmccChanging(string value);
    partial void OnmccChanged();
    partial void OnmncChanging(string value);
    partial void OnmncChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnServiceChanging(System.Nullable<int> value);
    partial void OnServiceChanged();
    partial void OnCountryPictureChanging(string value);
    partial void OnCountryPictureChanged();
    #endregion
		
		public Operator()
		{
			this._ScheduleOperators = new EntitySet<ScheduleOperator>(new Action<ScheduleOperator>(this.attach_ScheduleOperators), new Action<ScheduleOperator>(this.detach_ScheduleOperators));
			this._TestOperators = new EntitySet<TestOperator>(new Action<TestOperator>(this.attach_TestOperators), new Action<TestOperator>(this.detach_TestOperators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcc", DbType="VarChar(10)")]
		public string mcc
		{
			get
			{
				return this._mcc;
			}
			set
			{
				if ((this._mcc != value))
				{
					this.OnmccChanging(value);
					this.SendPropertyChanging();
					this._mcc = value;
					this.SendPropertyChanged("mcc");
					this.OnmccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mnc", DbType="VarChar(10)")]
		public string mnc
		{
			get
			{
				return this._mnc;
			}
			set
			{
				if ((this._mnc != value))
				{
					this.OnmncChanging(value);
					this.SendPropertyChanging();
					this._mnc = value;
					this.SendPropertyChanged("mnc");
					this.OnmncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service", DbType="Int")]
		public System.Nullable<int> Service
		{
			get
			{
				return this._Service;
			}
			set
			{
				if ((this._Service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._Service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryPicture", DbType="VarChar(10)")]
		public string CountryPicture
		{
			get
			{
				return this._CountryPicture;
			}
			set
			{
				if ((this._CountryPicture != value))
				{
					this.OnCountryPictureChanging(value);
					this.SendPropertyChanging();
					this._CountryPicture = value;
					this.SendPropertyChanged("CountryPicture");
					this.OnCountryPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_ScheduleOperator", Storage="_ScheduleOperators", ThisKey="Id", OtherKey="OperatorId")]
		public EntitySet<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this._ScheduleOperators;
			}
			set
			{
				this._ScheduleOperators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_TestOperator", Storage="_TestOperators", ThisKey="Id", OtherKey="OperatorId")]
		public EntitySet<TestOperator> TestOperators
		{
			get
			{
				return this._TestOperators;
			}
			set
			{
				this._TestOperators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = this;
		}
		
		private void detach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = null;
		}
		
		private void attach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = this;
		}
		
		private void detach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestNumbers")]
	public partial class TestNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Number;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.Guid> _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletionDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _Source;
		
		private System.Nullable<int> _PrefixId;
		
		private System.Nullable<int> _CounterUsage;
		
		private System.Nullable<int> _SuccessfulAttempts;
		
		private EntityRef<TestNumberGroup> _TestNumberGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnDeletedByChanged();
    partial void OnDeletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletionDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnPrefixIdChanging(System.Nullable<int> value);
    partial void OnPrefixIdChanged();
    partial void OnCounterUsageChanging(System.Nullable<int> value);
    partial void OnCounterUsageChanged();
    partial void OnSuccessfulAttemptsChanging(System.Nullable<int> value);
    partial void OnSuccessfulAttemptsChanged();
    #endregion
		
		public TestNumber()
		{
			this._TestNumberGroup = default(EntityRef<TestNumberGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._TestNumberGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DeletionDate
		{
			get
			{
				return this._DeletionDate;
			}
			set
			{
				if ((this._DeletionDate != value))
				{
					this.OnDeletionDateChanging(value);
					this.SendPropertyChanging();
					this._DeletionDate = value;
					this.SendPropertyChanged("DeletionDate");
					this.OnDeletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(500)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixId", DbType="Int")]
		public System.Nullable<int> PrefixId
		{
			get
			{
				return this._PrefixId;
			}
			set
			{
				if ((this._PrefixId != value))
				{
					this.OnPrefixIdChanging(value);
					this.SendPropertyChanging();
					this._PrefixId = value;
					this.SendPropertyChanged("PrefixId");
					this.OnPrefixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterUsage", DbType="Int")]
		public System.Nullable<int> CounterUsage
		{
			get
			{
				return this._CounterUsage;
			}
			set
			{
				if ((this._CounterUsage != value))
				{
					this.OnCounterUsageChanging(value);
					this.SendPropertyChanging();
					this._CounterUsage = value;
					this.SendPropertyChanged("CounterUsage");
					this.OnCounterUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessfulAttempts", DbType="Int")]
		public System.Nullable<int> SuccessfulAttempts
		{
			get
			{
				return this._SuccessfulAttempts;
			}
			set
			{
				if ((this._SuccessfulAttempts != value))
				{
					this.OnSuccessfulAttemptsChanging(value);
					this.SendPropertyChanging();
					this._SuccessfulAttempts = value;
					this.SendPropertyChanged("SuccessfulAttempts");
					this.OnSuccessfulAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_TestNumber", Storage="_TestNumberGroup", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public TestNumberGroup TestNumberGroup
		{
			get
			{
				return this._TestNumberGroup.Entity;
			}
			set
			{
				TestNumberGroup previousValue = this._TestNumberGroup.Entity;
				if (((previousValue != value) 
							|| (this._TestNumberGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestNumberGroup.Entity = null;
						previousValue.TestNumbers.Remove(this);
					}
					this._TestNumberGroup.Entity = value;
					if ((value != null))
					{
						value.TestNumbers.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestNumberGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleGroups")]
	public partial class ScheduleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<int> _GroupId;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<TestNumberGroup> _TestNumberGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    #endregion
		
		public ScheduleGroup()
		{
			this._Schedule = default(EntityRef<Schedule>);
			this._TestNumberGroup = default(EntityRef<TestNumberGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._TestNumberGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleGroup", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleGroups.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleGroups.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_ScheduleGroup", Storage="_TestNumberGroup", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public TestNumberGroup TestNumberGroup
		{
			get
			{
				return this._TestNumberGroup.Entity;
			}
			set
			{
				TestNumberGroup previousValue = this._TestNumberGroup.Entity;
				if (((previousValue != value) 
							|| (this._TestNumberGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestNumberGroup.Entity = null;
						previousValue.ScheduleGroups.Remove(this);
					}
					this._TestNumberGroup.Entity = value;
					if ((value != null))
					{
						value.ScheduleGroups.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestNumberGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log
	{
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private int _Thread;
		
		private string _Context;
		
		private string _Level;
		
		private string _Logger;
		
		private string _Message;
		
		private string _Exception;
		
		public Log()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thread", DbType="Int NOT NULL")]
		public int Thread
		{
			get
			{
				return this._Thread;
			}
			set
			{
				if ((this._Thread != value))
				{
					this._Thread = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this._Context = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logger", DbType="VarChar(255)")]
		public string Logger
		{
			get
			{
				return this._Logger;
			}
			set
			{
				if ((this._Logger != value))
				{
					this._Logger = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="VarChar(MAX)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this._Exception = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestNumberGroups")]
	public partial class TestNumberGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<TestNumber> _TestNumbers;
		
		private EntitySet<ScheduleGroup> _ScheduleGroups;
		
		private EntitySet<TestNumber1> _TestNumber1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public TestNumberGroup()
		{
			this._TestNumbers = new EntitySet<TestNumber>(new Action<TestNumber>(this.attach_TestNumbers), new Action<TestNumber>(this.detach_TestNumbers));
			this._ScheduleGroups = new EntitySet<ScheduleGroup>(new Action<ScheduleGroup>(this.attach_ScheduleGroups), new Action<ScheduleGroup>(this.detach_ScheduleGroups));
			this._TestNumber1s = new EntitySet<TestNumber1>(new Action<TestNumber1>(this.attach_TestNumber1s), new Action<TestNumber1>(this.detach_TestNumber1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_TestNumber", Storage="_TestNumbers", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<TestNumber> TestNumbers
		{
			get
			{
				return this._TestNumbers;
			}
			set
			{
				this._TestNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_ScheduleGroup", Storage="_ScheduleGroups", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<ScheduleGroup> ScheduleGroups
		{
			get
			{
				return this._ScheduleGroups;
			}
			set
			{
				this._ScheduleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_TestNumber1", Storage="_TestNumber1s", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<TestNumber1> TestNumber1s
		{
			get
			{
				return this._TestNumber1s;
			}
			set
			{
				this._TestNumber1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TestNumbers(TestNumber entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = this;
		}
		
		private void detach_TestNumbers(TestNumber entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = null;
		}
		
		private void attach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = this;
		}
		
		private void detach_ScheduleGroups(ScheduleGroup entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = null;
		}
		
		private void attach_TestNumber1s(TestNumber1 entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = this;
		}
		
		private void detach_TestNumber1s(TestNumber1 entity)
		{
			this.SendPropertyChanging();
			entity.TestNumberGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestNumbers")]
	public partial class TestNumber1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Number;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.Guid> _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletionDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _Source;
		
		private System.Nullable<int> _PrefixId;
		
		private System.Nullable<int> _CounterUsage;
		
		private System.Nullable<int> _SuccessfulAttempts;
		
		private EntityRef<TestNumberGroup> _TestNumberGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnDeletedByChanging(System.Nullable<System.Guid> value);
    partial void OnDeletedByChanged();
    partial void OnDeletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletionDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnPrefixIdChanging(System.Nullable<int> value);
    partial void OnPrefixIdChanged();
    partial void OnCounterUsageChanging(System.Nullable<int> value);
    partial void OnCounterUsageChanged();
    partial void OnSuccessfulAttemptsChanging(System.Nullable<int> value);
    partial void OnSuccessfulAttemptsChanged();
    #endregion
		
		public TestNumber1()
		{
			this._TestNumberGroup = default(EntityRef<TestNumberGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._TestNumberGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DeletionDate
		{
			get
			{
				return this._DeletionDate;
			}
			set
			{
				if ((this._DeletionDate != value))
				{
					this.OnDeletionDateChanging(value);
					this.SendPropertyChanging();
					this._DeletionDate = value;
					this.SendPropertyChanged("DeletionDate");
					this.OnDeletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(500)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixId", DbType="Int")]
		public System.Nullable<int> PrefixId
		{
			get
			{
				return this._PrefixId;
			}
			set
			{
				if ((this._PrefixId != value))
				{
					this.OnPrefixIdChanging(value);
					this.SendPropertyChanging();
					this._PrefixId = value;
					this.SendPropertyChanged("PrefixId");
					this.OnPrefixIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterUsage", DbType="Int")]
		public System.Nullable<int> CounterUsage
		{
			get
			{
				return this._CounterUsage;
			}
			set
			{
				if ((this._CounterUsage != value))
				{
					this.OnCounterUsageChanging(value);
					this.SendPropertyChanging();
					this._CounterUsage = value;
					this.SendPropertyChanged("CounterUsage");
					this.OnCounterUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessfulAttempts", DbType="Int")]
		public System.Nullable<int> SuccessfulAttempts
		{
			get
			{
				return this._SuccessfulAttempts;
			}
			set
			{
				if ((this._SuccessfulAttempts != value))
				{
					this.OnSuccessfulAttemptsChanging(value);
					this.SendPropertyChanging();
					this._SuccessfulAttempts = value;
					this.SendPropertyChanged("SuccessfulAttempts");
					this.OnSuccessfulAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestNumberGroup_TestNumber1", Storage="_TestNumberGroup", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public TestNumberGroup TestNumberGroup
		{
			get
			{
				return this._TestNumberGroup.Entity;
			}
			set
			{
				TestNumberGroup previousValue = this._TestNumberGroup.Entity;
				if (((previousValue != value) 
							|| (this._TestNumberGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestNumberGroup.Entity = null;
						previousValue.TestNumber1s.Remove(this);
					}
					this._TestNumberGroup.Entity = value;
					if ((value != null))
					{
						value.TestNumber1s.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestNumberGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallEntries")]
	public partial class CallEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Number;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Source;
		
		private System.Nullable<byte> _IsProcessed;
		
		private string _SessionId;
		
		private string _Cgpn;
		
		private string _ResponseCode;
		
		private System.Nullable<int> _ClientId;
		
		private EntitySet<CallEntryDetail> _CallEntryDetails;
		
		private EntityRef<CallEntryStatus> _CallEntryStatus;
		
		private EntityRef<CallSession> _CallSession;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnIsProcessedChanging(System.Nullable<byte> value);
    partial void OnIsProcessedChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnCgpnChanging(string value);
    partial void OnCgpnChanged();
    partial void OnResponseCodeChanging(string value);
    partial void OnResponseCodeChanged();
    partial void OnClientIdChanging(System.Nullable<int> value);
    partial void OnClientIdChanged();
    #endregion
		
		public CallEntry()
		{
			this._CallEntryDetails = new EntitySet<CallEntryDetail>(new Action<CallEntryDetail>(this.attach_CallEntryDetails), new Action<CallEntryDetail>(this.detach_CallEntryDetails));
			this._CallEntryStatus = default(EntityRef<CallEntryStatus>);
			this._CallSession = default(EntityRef<CallSession>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._CallEntryStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(MAX)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="TinyInt")]
		public System.Nullable<byte> IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="VarChar(50)")]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._CallSession.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cgpn", DbType="VarChar(50)")]
		public string Cgpn
		{
			get
			{
				return this._Cgpn;
			}
			set
			{
				if ((this._Cgpn != value))
				{
					this.OnCgpnChanging(value);
					this.SendPropertyChanging();
					this._Cgpn = value;
					this.SendPropertyChanged("Cgpn");
					this.OnCgpnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="VarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this.OnResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseCode = value;
					this.SendPropertyChanged("ResponseCode");
					this.OnResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallEntry_CallEntryDetail", Storage="_CallEntryDetails", ThisKey="Id", OtherKey="CallEntriesId")]
		public EntitySet<CallEntryDetail> CallEntryDetails
		{
			get
			{
				return this._CallEntryDetails;
			}
			set
			{
				this._CallEntryDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallEntryStatus_CallEntry", Storage="_CallEntryStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public CallEntryStatus CallEntryStatus
		{
			get
			{
				return this._CallEntryStatus.Entity;
			}
			set
			{
				CallEntryStatus previousValue = this._CallEntryStatus.Entity;
				if (((previousValue != value) 
							|| (this._CallEntryStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CallEntryStatus.Entity = null;
						previousValue.CallEntries.Remove(this);
					}
					this._CallEntryStatus.Entity = value;
					if ((value != null))
					{
						value.CallEntries.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CallEntryStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallSession_CallEntry", Storage="_CallSession", ThisKey="SessionId", OtherKey="SessionId", IsForeignKey=true)]
		public CallSession CallSession
		{
			get
			{
				return this._CallSession.Entity;
			}
			set
			{
				CallSession previousValue = this._CallSession.Entity;
				if (((previousValue != value) 
							|| (this._CallSession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CallSession.Entity = null;
						previousValue.CallEntries.Remove(this);
					}
					this._CallSession.Entity = value;
					if ((value != null))
					{
						value.CallEntries.Add(this);
						this._SessionId = value.SessionId;
					}
					else
					{
						this._SessionId = default(string);
					}
					this.SendPropertyChanged("CallSession");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallEntryDetails(CallEntryDetail entity)
		{
			this.SendPropertyChanging();
			entity.CallEntry = this;
		}
		
		private void detach_CallEntryDetails(CallEntryDetail entity)
		{
			this.SendPropertyChanging();
			entity.CallEntry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CDR")]
	public partial class CDR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CDRID;
		
		private System.Nullable<long> _IDonSwitch;
		
		private System.Nullable<System.DateTime> _AttemptDateTime;
		
		private System.Nullable<System.DateTime> _AlertDateTime;
		
		private System.Nullable<System.DateTime> _ConnectDateTime;
		
		private System.Nullable<System.DateTime> _DisconnectDateTime;
		
		private int _DurationInSeconds;
		
		private string _IN_TRUNK;
		
		private System.Nullable<short> _IN_CIRCUIT;
		
		private string _IN_CARRIER;
		
		private string _IN_IP;
		
		private string _OUT_TRUNK;
		
		private short _OUT_CIRCUIT;
		
		private string _OUT_CARRIER;
		
		private string _OUT_IP;
		
		private string _CGPN;
		
		private string _CDPN;
		
		private string _CAUSE_FROM_RELEASE_CODE;
		
		private string _CAUSE_FROM;
		
		private string _CAUSE_TO_RELEASE_CODE;
		
		private string _CAUSE_TO;
		
		private string _Extra_Fields;
		
		private System.Nullable<char> _IsRerouted;
		
		private string _CDPNOut;
		
		private System.Nullable<int> _SIP;
		
		private string _UserID;
		
		private System.Nullable<int> _TransactionId;
		
		private string _RecievedCLI;
		
		private System.Nullable<int> _ClientId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCDRIDChanging(long value);
    partial void OnCDRIDChanged();
    partial void OnIDonSwitchChanging(System.Nullable<long> value);
    partial void OnIDonSwitchChanged();
    partial void OnAttemptDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAttemptDateTimeChanged();
    partial void OnAlertDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAlertDateTimeChanged();
    partial void OnConnectDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConnectDateTimeChanged();
    partial void OnDisconnectDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisconnectDateTimeChanged();
    partial void OnDurationInSecondsChanging(int value);
    partial void OnDurationInSecondsChanged();
    partial void OnIN_TRUNKChanging(string value);
    partial void OnIN_TRUNKChanged();
    partial void OnIN_CIRCUITChanging(System.Nullable<short> value);
    partial void OnIN_CIRCUITChanged();
    partial void OnIN_CARRIERChanging(string value);
    partial void OnIN_CARRIERChanged();
    partial void OnIN_IPChanging(string value);
    partial void OnIN_IPChanged();
    partial void OnOUT_TRUNKChanging(string value);
    partial void OnOUT_TRUNKChanged();
    partial void OnOUT_CIRCUITChanging(short value);
    partial void OnOUT_CIRCUITChanged();
    partial void OnOUT_CARRIERChanging(string value);
    partial void OnOUT_CARRIERChanged();
    partial void OnOUT_IPChanging(string value);
    partial void OnOUT_IPChanged();
    partial void OnCGPNChanging(string value);
    partial void OnCGPNChanged();
    partial void OnCDPNChanging(string value);
    partial void OnCDPNChanged();
    partial void OnCAUSE_FROM_RELEASE_CODEChanging(string value);
    partial void OnCAUSE_FROM_RELEASE_CODEChanged();
    partial void OnCAUSE_FROMChanging(string value);
    partial void OnCAUSE_FROMChanged();
    partial void OnCAUSE_TO_RELEASE_CODEChanging(string value);
    partial void OnCAUSE_TO_RELEASE_CODEChanged();
    partial void OnCAUSE_TOChanging(string value);
    partial void OnCAUSE_TOChanged();
    partial void OnExtra_FieldsChanging(string value);
    partial void OnExtra_FieldsChanged();
    partial void OnIsReroutedChanging(System.Nullable<char> value);
    partial void OnIsReroutedChanged();
    partial void OnCDPNOutChanging(string value);
    partial void OnCDPNOutChanged();
    partial void OnSIPChanging(System.Nullable<int> value);
    partial void OnSIPChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnTransactionIdChanging(System.Nullable<int> value);
    partial void OnTransactionIdChanged();
    partial void OnRecievedCLIChanging(string value);
    partial void OnRecievedCLIChanged();
    partial void OnClientIdChanging(System.Nullable<int> value);
    partial void OnClientIdChanged();
    #endregion
		
		public CDR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDRID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CDRID
		{
			get
			{
				return this._CDRID;
			}
			set
			{
				if ((this._CDRID != value))
				{
					this.OnCDRIDChanging(value);
					this.SendPropertyChanging();
					this._CDRID = value;
					this.SendPropertyChanged("CDRID");
					this.OnCDRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDonSwitch", DbType="BigInt")]
		public System.Nullable<long> IDonSwitch
		{
			get
			{
				return this._IDonSwitch;
			}
			set
			{
				if ((this._IDonSwitch != value))
				{
					this.OnIDonSwitchChanging(value);
					this.SendPropertyChanging();
					this._IDonSwitch = value;
					this.SendPropertyChanged("IDonSwitch");
					this.OnIDonSwitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttemptDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttemptDateTime
		{
			get
			{
				return this._AttemptDateTime;
			}
			set
			{
				if ((this._AttemptDateTime != value))
				{
					this.OnAttemptDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AttemptDateTime = value;
					this.SendPropertyChanged("AttemptDateTime");
					this.OnAttemptDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlertDateTime
		{
			get
			{
				return this._AlertDateTime;
			}
			set
			{
				if ((this._AlertDateTime != value))
				{
					this.OnAlertDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AlertDateTime = value;
					this.SendPropertyChanged("AlertDateTime");
					this.OnAlertDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConnectDateTime
		{
			get
			{
				return this._ConnectDateTime;
			}
			set
			{
				if ((this._ConnectDateTime != value))
				{
					this.OnConnectDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ConnectDateTime = value;
					this.SendPropertyChanged("ConnectDateTime");
					this.OnConnectDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisconnectDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisconnectDateTime
		{
			get
			{
				return this._DisconnectDateTime;
			}
			set
			{
				if ((this._DisconnectDateTime != value))
				{
					this.OnDisconnectDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisconnectDateTime = value;
					this.SendPropertyChanged("DisconnectDateTime");
					this.OnDisconnectDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationInSeconds", DbType="Int NOT NULL")]
		public int DurationInSeconds
		{
			get
			{
				return this._DurationInSeconds;
			}
			set
			{
				if ((this._DurationInSeconds != value))
				{
					this.OnDurationInSecondsChanging(value);
					this.SendPropertyChanging();
					this._DurationInSeconds = value;
					this.SendPropertyChanged("DurationInSeconds");
					this.OnDurationInSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_TRUNK", DbType="VarChar(100)")]
		public string IN_TRUNK
		{
			get
			{
				return this._IN_TRUNK;
			}
			set
			{
				if ((this._IN_TRUNK != value))
				{
					this.OnIN_TRUNKChanging(value);
					this.SendPropertyChanging();
					this._IN_TRUNK = value;
					this.SendPropertyChanged("IN_TRUNK");
					this.OnIN_TRUNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_CIRCUIT", DbType="SmallInt")]
		public System.Nullable<short> IN_CIRCUIT
		{
			get
			{
				return this._IN_CIRCUIT;
			}
			set
			{
				if ((this._IN_CIRCUIT != value))
				{
					this.OnIN_CIRCUITChanging(value);
					this.SendPropertyChanging();
					this._IN_CIRCUIT = value;
					this.SendPropertyChanged("IN_CIRCUIT");
					this.OnIN_CIRCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_CARRIER", DbType="VarChar(100)")]
		public string IN_CARRIER
		{
			get
			{
				return this._IN_CARRIER;
			}
			set
			{
				if ((this._IN_CARRIER != value))
				{
					this.OnIN_CARRIERChanging(value);
					this.SendPropertyChanging();
					this._IN_CARRIER = value;
					this.SendPropertyChanged("IN_CARRIER");
					this.OnIN_CARRIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_IP", DbType="VarChar(21)")]
		public string IN_IP
		{
			get
			{
				return this._IN_IP;
			}
			set
			{
				if ((this._IN_IP != value))
				{
					this.OnIN_IPChanging(value);
					this.SendPropertyChanging();
					this._IN_IP = value;
					this.SendPropertyChanged("IN_IP");
					this.OnIN_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_TRUNK", DbType="VarChar(100)")]
		public string OUT_TRUNK
		{
			get
			{
				return this._OUT_TRUNK;
			}
			set
			{
				if ((this._OUT_TRUNK != value))
				{
					this.OnOUT_TRUNKChanging(value);
					this.SendPropertyChanging();
					this._OUT_TRUNK = value;
					this.SendPropertyChanged("OUT_TRUNK");
					this.OnOUT_TRUNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_CIRCUIT", DbType="SmallInt NOT NULL")]
		public short OUT_CIRCUIT
		{
			get
			{
				return this._OUT_CIRCUIT;
			}
			set
			{
				if ((this._OUT_CIRCUIT != value))
				{
					this.OnOUT_CIRCUITChanging(value);
					this.SendPropertyChanging();
					this._OUT_CIRCUIT = value;
					this.SendPropertyChanged("OUT_CIRCUIT");
					this.OnOUT_CIRCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_CARRIER", DbType="VarChar(100)")]
		public string OUT_CARRIER
		{
			get
			{
				return this._OUT_CARRIER;
			}
			set
			{
				if ((this._OUT_CARRIER != value))
				{
					this.OnOUT_CARRIERChanging(value);
					this.SendPropertyChanging();
					this._OUT_CARRIER = value;
					this.SendPropertyChanged("OUT_CARRIER");
					this.OnOUT_CARRIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUT_IP", DbType="VarChar(21)")]
		public string OUT_IP
		{
			get
			{
				return this._OUT_IP;
			}
			set
			{
				if ((this._OUT_IP != value))
				{
					this.OnOUT_IPChanging(value);
					this.SendPropertyChanging();
					this._OUT_IP = value;
					this.SendPropertyChanged("OUT_IP");
					this.OnOUT_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGPN", DbType="VarChar(40)")]
		public string CGPN
		{
			get
			{
				return this._CGPN;
			}
			set
			{
				if ((this._CGPN != value))
				{
					this.OnCGPNChanging(value);
					this.SendPropertyChanging();
					this._CGPN = value;
					this.SendPropertyChanged("CGPN");
					this.OnCGPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPN", DbType="VarChar(40)")]
		public string CDPN
		{
			get
			{
				return this._CDPN;
			}
			set
			{
				if ((this._CDPN != value))
				{
					this.OnCDPNChanging(value);
					this.SendPropertyChanging();
					this._CDPN = value;
					this.SendPropertyChanged("CDPN");
					this.OnCDPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_FROM_RELEASE_CODE", DbType="VarChar(20)")]
		public string CAUSE_FROM_RELEASE_CODE
		{
			get
			{
				return this._CAUSE_FROM_RELEASE_CODE;
			}
			set
			{
				if ((this._CAUSE_FROM_RELEASE_CODE != value))
				{
					this.OnCAUSE_FROM_RELEASE_CODEChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_FROM_RELEASE_CODE = value;
					this.SendPropertyChanged("CAUSE_FROM_RELEASE_CODE");
					this.OnCAUSE_FROM_RELEASE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_FROM", DbType="VarChar(10)")]
		public string CAUSE_FROM
		{
			get
			{
				return this._CAUSE_FROM;
			}
			set
			{
				if ((this._CAUSE_FROM != value))
				{
					this.OnCAUSE_FROMChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_FROM = value;
					this.SendPropertyChanged("CAUSE_FROM");
					this.OnCAUSE_FROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_TO_RELEASE_CODE", DbType="VarChar(20)")]
		public string CAUSE_TO_RELEASE_CODE
		{
			get
			{
				return this._CAUSE_TO_RELEASE_CODE;
			}
			set
			{
				if ((this._CAUSE_TO_RELEASE_CODE != value))
				{
					this.OnCAUSE_TO_RELEASE_CODEChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_TO_RELEASE_CODE = value;
					this.SendPropertyChanged("CAUSE_TO_RELEASE_CODE");
					this.OnCAUSE_TO_RELEASE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUSE_TO", DbType="VarChar(10)")]
		public string CAUSE_TO
		{
			get
			{
				return this._CAUSE_TO;
			}
			set
			{
				if ((this._CAUSE_TO != value))
				{
					this.OnCAUSE_TOChanging(value);
					this.SendPropertyChanging();
					this._CAUSE_TO = value;
					this.SendPropertyChanged("CAUSE_TO");
					this.OnCAUSE_TOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extra_Fields", DbType="VarChar(255)")]
		public string Extra_Fields
		{
			get
			{
				return this._Extra_Fields;
			}
			set
			{
				if ((this._Extra_Fields != value))
				{
					this.OnExtra_FieldsChanging(value);
					this.SendPropertyChanging();
					this._Extra_Fields = value;
					this.SendPropertyChanged("Extra_Fields");
					this.OnExtra_FieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRerouted", DbType="Char(1)")]
		public System.Nullable<char> IsRerouted
		{
			get
			{
				return this._IsRerouted;
			}
			set
			{
				if ((this._IsRerouted != value))
				{
					this.OnIsReroutedChanging(value);
					this.SendPropertyChanging();
					this._IsRerouted = value;
					this.SendPropertyChanged("IsRerouted");
					this.OnIsReroutedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPNOut", DbType="VarChar(40)")]
		public string CDPNOut
		{
			get
			{
				return this._CDPNOut;
			}
			set
			{
				if ((this._CDPNOut != value))
				{
					this.OnCDPNOutChanging(value);
					this.SendPropertyChanging();
					this._CDPNOut = value;
					this.SendPropertyChanged("CDPNOut");
					this.OnCDPNOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIP", DbType="Int")]
		public System.Nullable<int> SIP
		{
			get
			{
				return this._SIP;
			}
			set
			{
				if ((this._SIP != value))
				{
					this.OnSIPChanging(value);
					this.SendPropertyChanging();
					this._SIP = value;
					this.SendPropertyChanged("SIP");
					this.OnSIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="Int")]
		public System.Nullable<int> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedCLI", DbType="NVarChar(50)")]
		public string RecievedCLI
		{
			get
			{
				return this._RecievedCLI;
			}
			set
			{
				if ((this._RecievedCLI != value))
				{
					this.OnRecievedCLIChanging(value);
					this.SendPropertyChanging();
					this._RecievedCLI = value;
					this.SendPropertyChanged("RecievedCLI");
					this.OnRecievedCLIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneratedCalls")]
	public partial class GeneratedCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Number;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _StartCall;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Status;
		
		private string _ResponseCode;
		
		private System.Nullable<int> _SipAccountId;
		
		private System.Nullable<int> _ScheduleId;
		
		private EntitySet<MontyCall> _MontyCalls;
		
		private EntityRef<SipAccount> _SipAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartCallChanging(System.Nullable<System.DateTime> value);
    partial void OnStartCallChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnResponseCodeChanging(string value);
    partial void OnResponseCodeChanged();
    partial void OnSipAccountIdChanging(System.Nullable<int> value);
    partial void OnSipAccountIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    #endregion
		
		public GeneratedCall()
		{
			this._MontyCalls = new EntitySet<MontyCall>(new Action<MontyCall>(this.attach_MontyCalls), new Action<MontyCall>(this.detach_MontyCalls));
			this._SipAccount = default(EntityRef<SipAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartCall
		{
			get
			{
				return this._StartCall;
			}
			set
			{
				if ((this._StartCall != value))
				{
					this.OnStartCallChanging(value);
					this.SendPropertyChanging();
					this._StartCall = value;
					this.SendPropertyChanged("StartCall");
					this.OnStartCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this.OnResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseCode = value;
					this.SendPropertyChanged("ResponseCode");
					this.OnResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SipAccountId", DbType="Int")]
		public System.Nullable<int> SipAccountId
		{
			get
			{
				return this._SipAccountId;
			}
			set
			{
				if ((this._SipAccountId != value))
				{
					if (this._SipAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSipAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SipAccountId = value;
					this.SendPropertyChanged("SipAccountId");
					this.OnSipAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneratedCall_MontyCall", Storage="_MontyCalls", ThisKey="Id", OtherKey="CallEntryId")]
		public EntitySet<MontyCall> MontyCalls
		{
			get
			{
				return this._MontyCalls;
			}
			set
			{
				this._MontyCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_GeneratedCall", Storage="_SipAccount", ThisKey="SipAccountId", OtherKey="Id", IsForeignKey=true)]
		public SipAccount SipAccount
		{
			get
			{
				return this._SipAccount.Entity;
			}
			set
			{
				SipAccount previousValue = this._SipAccount.Entity;
				if (((previousValue != value) 
							|| (this._SipAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipAccount.Entity = null;
						previousValue.GeneratedCalls.Remove(this);
					}
					this._SipAccount.Entity = value;
					if ((value != null))
					{
						value.GeneratedCalls.Add(this);
						this._SipAccountId = value.Id;
					}
					else
					{
						this._SipAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MontyCalls(MontyCall entity)
		{
			this.SendPropertyChanging();
			entity.GeneratedCall = this;
		}
		
		private void detach_MontyCalls(MontyCall entity)
		{
			this.SendPropertyChanging();
			entity.GeneratedCall = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SipAccounts")]
	public partial class SipAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Login;
		
		private string _Password;
		
		private string _Server;
		
		private System.Nullable<bool> _UseProxy;
		
		private string _ProxyServer;
		
		private string _ProxyUser;
		
		private string _ProxyPass;
		
		private string _DisplayName;
		
		private System.Nullable<int> _TotalLines;
		
		private System.Nullable<bool> _UseAudio;
		
		private string _DefaultAudioFileName;
		
		private System.Data.Linq.Binary _DefaultAudioFile;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _PlaybackDevice;
		
		private string _NetworkInterface;
		
		private string _Codecs;
		
		private System.Nullable<int> _UserId;
		
		private EntitySet<CallSession> _CallSessions;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<GeneratedCall> _GeneratedCalls;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnUseProxyChanging(System.Nullable<bool> value);
    partial void OnUseProxyChanged();
    partial void OnProxyServerChanging(string value);
    partial void OnProxyServerChanged();
    partial void OnProxyUserChanging(string value);
    partial void OnProxyUserChanged();
    partial void OnProxyPassChanging(string value);
    partial void OnProxyPassChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTotalLinesChanging(System.Nullable<int> value);
    partial void OnTotalLinesChanged();
    partial void OnUseAudioChanging(System.Nullable<bool> value);
    partial void OnUseAudioChanged();
    partial void OnDefaultAudioFileNameChanging(string value);
    partial void OnDefaultAudioFileNameChanged();
    partial void OnDefaultAudioFileChanging(System.Data.Linq.Binary value);
    partial void OnDefaultAudioFileChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnPlaybackDeviceChanging(string value);
    partial void OnPlaybackDeviceChanged();
    partial void OnNetworkInterfaceChanging(string value);
    partial void OnNetworkInterfaceChanged();
    partial void OnCodecsChanging(string value);
    partial void OnCodecsChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public SipAccount()
		{
			this._CallSessions = new EntitySet<CallSession>(new Action<CallSession>(this.attach_CallSessions), new Action<CallSession>(this.detach_CallSessions));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._GeneratedCalls = new EntitySet<GeneratedCall>(new Action<GeneratedCall>(this.attach_GeneratedCalls), new Action<GeneratedCall>(this.detach_GeneratedCalls));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(500)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(500)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(500)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="VarChar(500)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseProxy", DbType="Bit")]
		public System.Nullable<bool> UseProxy
		{
			get
			{
				return this._UseProxy;
			}
			set
			{
				if ((this._UseProxy != value))
				{
					this.OnUseProxyChanging(value);
					this.SendPropertyChanging();
					this._UseProxy = value;
					this.SendPropertyChanged("UseProxy");
					this.OnUseProxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyServer", DbType="VarChar(500)")]
		public string ProxyServer
		{
			get
			{
				return this._ProxyServer;
			}
			set
			{
				if ((this._ProxyServer != value))
				{
					this.OnProxyServerChanging(value);
					this.SendPropertyChanging();
					this._ProxyServer = value;
					this.SendPropertyChanged("ProxyServer");
					this.OnProxyServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyUser", DbType="VarChar(500)")]
		public string ProxyUser
		{
			get
			{
				return this._ProxyUser;
			}
			set
			{
				if ((this._ProxyUser != value))
				{
					this.OnProxyUserChanging(value);
					this.SendPropertyChanging();
					this._ProxyUser = value;
					this.SendPropertyChanged("ProxyUser");
					this.OnProxyUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyPass", DbType="VarChar(500)")]
		public string ProxyPass
		{
			get
			{
				return this._ProxyPass;
			}
			set
			{
				if ((this._ProxyPass != value))
				{
					this.OnProxyPassChanging(value);
					this.SendPropertyChanging();
					this._ProxyPass = value;
					this.SendPropertyChanged("ProxyPass");
					this.OnProxyPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLines", DbType="Int")]
		public System.Nullable<int> TotalLines
		{
			get
			{
				return this._TotalLines;
			}
			set
			{
				if ((this._TotalLines != value))
				{
					this.OnTotalLinesChanging(value);
					this.SendPropertyChanging();
					this._TotalLines = value;
					this.SendPropertyChanged("TotalLines");
					this.OnTotalLinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAudio", DbType="Bit")]
		public System.Nullable<bool> UseAudio
		{
			get
			{
				return this._UseAudio;
			}
			set
			{
				if ((this._UseAudio != value))
				{
					this.OnUseAudioChanging(value);
					this.SendPropertyChanging();
					this._UseAudio = value;
					this.SendPropertyChanged("UseAudio");
					this.OnUseAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAudioFileName", DbType="VarChar(500)")]
		public string DefaultAudioFileName
		{
			get
			{
				return this._DefaultAudioFileName;
			}
			set
			{
				if ((this._DefaultAudioFileName != value))
				{
					this.OnDefaultAudioFileNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultAudioFileName = value;
					this.SendPropertyChanged("DefaultAudioFileName");
					this.OnDefaultAudioFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAudioFile", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DefaultAudioFile
		{
			get
			{
				return this._DefaultAudioFile;
			}
			set
			{
				if ((this._DefaultAudioFile != value))
				{
					this.OnDefaultAudioFileChanging(value);
					this.SendPropertyChanging();
					this._DefaultAudioFile = value;
					this.SendPropertyChanged("DefaultAudioFile");
					this.OnDefaultAudioFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaybackDevice", DbType="NVarChar(MAX)")]
		public string PlaybackDevice
		{
			get
			{
				return this._PlaybackDevice;
			}
			set
			{
				if ((this._PlaybackDevice != value))
				{
					this.OnPlaybackDeviceChanging(value);
					this.SendPropertyChanging();
					this._PlaybackDevice = value;
					this.SendPropertyChanged("PlaybackDevice");
					this.OnPlaybackDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkInterface", DbType="NVarChar(MAX)")]
		public string NetworkInterface
		{
			get
			{
				return this._NetworkInterface;
			}
			set
			{
				if ((this._NetworkInterface != value))
				{
					this.OnNetworkInterfaceChanging(value);
					this.SendPropertyChanging();
					this._NetworkInterface = value;
					this.SendPropertyChanged("NetworkInterface");
					this.OnNetworkInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codecs", DbType="VarChar(500)")]
		public string Codecs
		{
			get
			{
				return this._Codecs;
			}
			set
			{
				if ((this._Codecs != value))
				{
					this.OnCodecsChanging(value);
					this.SendPropertyChanging();
					this._Codecs = value;
					this.SendPropertyChanged("Codecs");
					this.OnCodecsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_CallSession", Storage="_CallSessions", ThisKey="Id", OtherKey="SipAccountId")]
		public EntitySet<CallSession> CallSessions
		{
			get
			{
				return this._CallSessions;
			}
			set
			{
				this._CallSessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_Schedule", Storage="_Schedules", ThisKey="Id", OtherKey="SipAccountId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_GeneratedCall", Storage="_GeneratedCalls", ThisKey="Id", OtherKey="SipAccountId")]
		public EntitySet<GeneratedCall> GeneratedCalls
		{
			get
			{
				return this._GeneratedCalls;
			}
			set
			{
				this._GeneratedCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SipAccount", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SipAccounts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SipAccounts.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallSessions(CallSession entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = this;
		}
		
		private void detach_CallSessions(CallSession entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = null;
		}
		
		private void attach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = this;
		}
		
		private void detach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MontyCalls")]
	public partial class MontyCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _TestOperatorId;
		
		private string _MSISDN;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _RequestId;
		
		private System.Nullable<System.DateTime> _CallDate;
		
		private string _ReturnMessage;
		
		private System.Nullable<int> _CallEntryId;
		
		private EntityRef<GeneratedCall> _GeneratedCall;
		
		private EntityRef<TestOperator> _TestOperator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTestOperatorIdChanging(System.Nullable<int> value);
    partial void OnTestOperatorIdChanged();
    partial void OnMSISDNChanging(string value);
    partial void OnMSISDNChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnRequestIdChanging(string value);
    partial void OnRequestIdChanged();
    partial void OnCallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCallDateChanged();
    partial void OnReturnMessageChanging(string value);
    partial void OnReturnMessageChanged();
    partial void OnCallEntryIdChanging(System.Nullable<int> value);
    partial void OnCallEntryIdChanged();
    #endregion
		
		public MontyCall()
		{
			this._GeneratedCall = default(EntityRef<GeneratedCall>);
			this._TestOperator = default(EntityRef<TestOperator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestOperatorId", DbType="Int")]
		public System.Nullable<int> TestOperatorId
		{
			get
			{
				return this._TestOperatorId;
			}
			set
			{
				if ((this._TestOperatorId != value))
				{
					if (this._TestOperator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._TestOperatorId = value;
					this.SendPropertyChanged("TestOperatorId");
					this.OnTestOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSISDN", DbType="NVarChar(200)")]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if ((this._MSISDN != value))
				{
					this.OnMSISDNChanging(value);
					this.SendPropertyChanging();
					this._MSISDN = value;
					this.SendPropertyChanged("MSISDN");
					this.OnMSISDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(50)")]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CallDate
		{
			get
			{
				return this._CallDate;
			}
			set
			{
				if ((this._CallDate != value))
				{
					this.OnCallDateChanging(value);
					this.SendPropertyChanging();
					this._CallDate = value;
					this.SendPropertyChanged("CallDate");
					this.OnCallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnMessage", DbType="NVarChar(500)")]
		public string ReturnMessage
		{
			get
			{
				return this._ReturnMessage;
			}
			set
			{
				if ((this._ReturnMessage != value))
				{
					this.OnReturnMessageChanging(value);
					this.SendPropertyChanging();
					this._ReturnMessage = value;
					this.SendPropertyChanged("ReturnMessage");
					this.OnReturnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallEntryId", DbType="Int")]
		public System.Nullable<int> CallEntryId
		{
			get
			{
				return this._CallEntryId;
			}
			set
			{
				if ((this._CallEntryId != value))
				{
					if (this._GeneratedCall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCallEntryIdChanging(value);
					this.SendPropertyChanging();
					this._CallEntryId = value;
					this.SendPropertyChanged("CallEntryId");
					this.OnCallEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneratedCall_MontyCall", Storage="_GeneratedCall", ThisKey="CallEntryId", OtherKey="Id", IsForeignKey=true)]
		public GeneratedCall GeneratedCall
		{
			get
			{
				return this._GeneratedCall.Entity;
			}
			set
			{
				GeneratedCall previousValue = this._GeneratedCall.Entity;
				if (((previousValue != value) 
							|| (this._GeneratedCall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeneratedCall.Entity = null;
						previousValue.MontyCalls.Remove(this);
					}
					this._GeneratedCall.Entity = value;
					if ((value != null))
					{
						value.MontyCalls.Add(this);
						this._CallEntryId = value.Id;
					}
					else
					{
						this._CallEntryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("GeneratedCall");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestOperator_MontyCall", Storage="_TestOperator", ThisKey="TestOperatorId", OtherKey="Id", IsForeignKey=true)]
		public TestOperator TestOperator
		{
			get
			{
				return this._TestOperator.Entity;
			}
			set
			{
				TestOperator previousValue = this._TestOperator.Entity;
				if (((previousValue != value) 
							|| (this._TestOperator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestOperator.Entity = null;
						previousValue.MontyCalls.Remove(this);
					}
					this._TestOperator.Entity = value;
					if ((value != null))
					{
						value.MontyCalls.Add(this);
						this._TestOperatorId = value.Id;
					}
					else
					{
						this._TestOperatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestOperator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleLogs")]
	public partial class ScheduleLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _IsSuccess;
		
		private string _Notes;
		
		private System.Nullable<int> _Frequency;
		
		private EntitySet<CallGeneratorLogEntry> _CallGeneratorLogEntries;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsSuccessChanging(System.Nullable<bool> value);
    partial void OnIsSuccessChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    #endregion
		
		public ScheduleLog()
		{
			this._CallGeneratorLogEntries = new EntitySet<CallGeneratorLogEntry>(new Action<CallGeneratorLogEntry>(this.attach_CallGeneratorLogEntries), new Action<CallGeneratorLogEntry>(this.detach_CallGeneratorLogEntries));
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit")]
		public System.Nullable<bool> IsSuccess
		{
			get
			{
				return this._IsSuccess;
			}
			set
			{
				if ((this._IsSuccess != value))
				{
					this.OnIsSuccessChanging(value);
					this.SendPropertyChanging();
					this._IsSuccess = value;
					this.SendPropertyChanged("IsSuccess");
					this.OnIsSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduleLog_CallGeneratorLogEntry", Storage="_CallGeneratorLogEntries", ThisKey="Id", OtherKey="ScheduleLogId")]
		public EntitySet<CallGeneratorLogEntry> CallGeneratorLogEntries
		{
			get
			{
				return this._CallGeneratorLogEntries;
			}
			set
			{
				this._CallGeneratorLogEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleLog", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleLogs.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleLogs.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallGeneratorLogEntries(CallGeneratorLogEntry entity)
		{
			this.SendPropertyChanging();
			entity.ScheduleLog = this;
		}
		
		private void detach_CallGeneratorLogEntries(CallGeneratorLogEntry entity)
		{
			this.SendPropertyChanging();
			entity.ScheduleLog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestOperators")]
	public partial class TestOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<int> _NumberOfCalls;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TestCli;
		
		private string _ReceivedCli;
		
		private System.Nullable<int> _Status;
		
		private string _CarrierPrefix;
		
		private string _CallerId;
		
		private string _ErrorMessage;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<bool> _Requested;
		
		private EntitySet<MontyCall> _MontyCalls;
		
		private EntityRef<Operator> _Operator;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnNumberOfCallsChanging(System.Nullable<int> value);
    partial void OnNumberOfCallsChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnTestCliChanging(string value);
    partial void OnTestCliChanged();
    partial void OnReceivedCliChanging(string value);
    partial void OnReceivedCliChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCarrierPrefixChanging(string value);
    partial void OnCarrierPrefixChanged();
    partial void OnCallerIdChanging(string value);
    partial void OnCallerIdChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnRequestedChanging(System.Nullable<bool> value);
    partial void OnRequestedChanged();
    #endregion
		
		public TestOperator()
		{
			this._MontyCalls = new EntitySet<MontyCall>(new Action<MontyCall>(this.attach_MontyCalls), new Action<MontyCall>(this.detach_MontyCalls));
			this._Operator = default(EntityRef<Operator>);
			this._Schedule = default(EntityRef<Schedule>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					if (this._Operator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfCalls", DbType="Int")]
		public System.Nullable<int> NumberOfCalls
		{
			get
			{
				return this._NumberOfCalls;
			}
			set
			{
				if ((this._NumberOfCalls != value))
				{
					this.OnNumberOfCallsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfCalls = value;
					this.SendPropertyChanged("NumberOfCalls");
					this.OnNumberOfCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCli", DbType="VarChar(50)")]
		public string TestCli
		{
			get
			{
				return this._TestCli;
			}
			set
			{
				if ((this._TestCli != value))
				{
					this.OnTestCliChanging(value);
					this.SendPropertyChanging();
					this._TestCli = value;
					this.SendPropertyChanged("TestCli");
					this.OnTestCliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedCli", DbType="VarChar(50)")]
		public string ReceivedCli
		{
			get
			{
				return this._ReceivedCli;
			}
			set
			{
				if ((this._ReceivedCli != value))
				{
					this.OnReceivedCliChanging(value);
					this.SendPropertyChanging();
					this._ReceivedCli = value;
					this.SendPropertyChanged("ReceivedCli");
					this.OnReceivedCliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierPrefix", DbType="VarChar(50)")]
		public string CarrierPrefix
		{
			get
			{
				return this._CarrierPrefix;
			}
			set
			{
				if ((this._CarrierPrefix != value))
				{
					this.OnCarrierPrefixChanging(value);
					this.SendPropertyChanging();
					this._CarrierPrefix = value;
					this.SendPropertyChanged("CarrierPrefix");
					this.OnCarrierPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallerId", DbType="VarChar(50)")]
		public string CallerId
		{
			get
			{
				return this._CallerId;
			}
			set
			{
				if ((this._CallerId != value))
				{
					this.OnCallerIdChanging(value);
					this.SendPropertyChanging();
					this._CallerId = value;
					this.SendPropertyChanged("CallerId");
					this.OnCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(500)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requested", DbType="Bit")]
		public System.Nullable<bool> Requested
		{
			get
			{
				return this._Requested;
			}
			set
			{
				if ((this._Requested != value))
				{
					this.OnRequestedChanging(value);
					this.SendPropertyChanging();
					this._Requested = value;
					this.SendPropertyChanged("Requested");
					this.OnRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestOperator_MontyCall", Storage="_MontyCalls", ThisKey="Id", OtherKey="TestOperatorId")]
		public EntitySet<MontyCall> MontyCalls
		{
			get
			{
				return this._MontyCalls;
			}
			set
			{
				this._MontyCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_TestOperator", Storage="_Operator", ThisKey="OperatorId", OtherKey="Id", IsForeignKey=true)]
		public Operator Operator
		{
			get
			{
				return this._Operator.Entity;
			}
			set
			{
				Operator previousValue = this._Operator.Entity;
				if (((previousValue != value) 
							|| (this._Operator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operator.Entity = null;
						previousValue.TestOperators.Remove(this);
					}
					this._Operator.Entity = value;
					if ((value != null))
					{
						value.TestOperators.Add(this);
						this._OperatorId = value.Id;
					}
					else
					{
						this._OperatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Operator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_TestOperator", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.TestOperators.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.TestOperators.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TestOperator", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TestOperators.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TestOperators.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MontyCalls(MontyCall entity)
		{
			this.SendPropertyChanging();
			entity.TestOperator = this;
		}
		
		private void detach_MontyCalls(MontyCall entity)
		{
			this.SendPropertyChanging();
			entity.TestOperator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DataCalls
	{
		
		private System.Nullable<int> _Id;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TestCli;
		
		private string _ReceivedCli;
		
		private string _ErrorMessage;
		
		private string _MSISDN;
		
		private System.Nullable<System.DateTime> _AndroidDate;
		
		private string _RequestId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndCall;
		
		private string _ResponseCode;
		
		private string _Name;
		
		private string _Country;
		
		private string _mcc;
		
		private string _mnc;
		
		private System.Nullable<int> _Status;
		
		public DataCalls()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this._OperatorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCli")]
		public string TestCli
		{
			get
			{
				return this._TestCli;
			}
			set
			{
				if ((this._TestCli != value))
				{
					this._TestCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedCli")]
		public string ReceivedCli
		{
			get
			{
				return this._ReceivedCli;
			}
			set
			{
				if ((this._ReceivedCli != value))
				{
					this._ReceivedCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSISDN")]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if ((this._MSISDN != value))
				{
					this._MSISDN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndroidDate")]
		public System.Nullable<System.DateTime> AndroidDate
		{
			get
			{
				return this._AndroidDate;
			}
			set
			{
				if ((this._AndroidDate != value))
				{
					this._AndroidDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId")]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this._RequestId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCall")]
		public System.Nullable<System.DateTime> EndCall
		{
			get
			{
				return this._EndCall;
			}
			set
			{
				if ((this._EndCall != value))
				{
					this._EndCall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this._ResponseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcc")]
		public string mcc
		{
			get
			{
				return this._mcc;
			}
			set
			{
				if ((this._mcc != value))
				{
					this._mcc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mnc")]
		public string mnc
		{
			get
			{
				return this._mnc;
			}
			set
			{
				if ((this._mnc != value))
				{
					this._mnc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ChartCalls
	{
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalCalls;
		
		public ChartCalls()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCalls")]
		public System.Nullable<int> TotalCalls
		{
			get
			{
				return this._TotalCalls;
			}
			set
			{
				if ((this._TotalCalls != value))
				{
					this._TotalCalls = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Name;
		
		private string _Password;
		
		private string _Email;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsSuperAdmin;
		
		private string _Guid;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _IpSwitch;
		
		private string _CallerId;
		
		private string _LastName;
		
		private string _MobileNumber;
		
		private string _WebsiteURL;
		
		private System.Nullable<bool> _IsChangedCallerId;
		
		private System.Nullable<int> _ParentId;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<Carrier> _Carriers;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<SipAccount> _SipAccounts;
		
		private EntitySet<TestOperator> _TestOperators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsSuperAdminChanging(System.Nullable<bool> value);
    partial void OnIsSuperAdminChanged();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnIpSwitchChanging(string value);
    partial void OnIpSwitchChanged();
    partial void OnCallerIdChanging(string value);
    partial void OnCallerIdChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnWebsiteURLChanging(string value);
    partial void OnWebsiteURLChanged();
    partial void OnIsChangedCallerIdChanging(System.Nullable<bool> value);
    partial void OnIsChangedCallerIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    #endregion
		
		public User()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._Carriers = new EntitySet<Carrier>(new Action<Carrier>(this.attach_Carriers), new Action<Carrier>(this.detach_Carriers));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._SipAccounts = new EntitySet<SipAccount>(new Action<SipAccount>(this.attach_SipAccounts), new Action<SipAccount>(this.detach_SipAccounts));
			this._TestOperators = new EntitySet<TestOperator>(new Action<TestOperator>(this.attach_TestOperators), new Action<TestOperator>(this.detach_TestOperators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperAdmin", DbType="Bit")]
		public System.Nullable<bool> IsSuperAdmin
		{
			get
			{
				return this._IsSuperAdmin;
			}
			set
			{
				if ((this._IsSuperAdmin != value))
				{
					this.OnIsSuperAdminChanging(value);
					this.SendPropertyChanging();
					this._IsSuperAdmin = value;
					this.SendPropertyChanged("IsSuperAdmin");
					this.OnIsSuperAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(255)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpSwitch", DbType="NVarChar(50)")]
		public string IpSwitch
		{
			get
			{
				return this._IpSwitch;
			}
			set
			{
				if ((this._IpSwitch != value))
				{
					this.OnIpSwitchChanging(value);
					this.SendPropertyChanging();
					this._IpSwitch = value;
					this.SendPropertyChanged("IpSwitch");
					this.OnIpSwitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallerId", DbType="NVarChar(50)")]
		public string CallerId
		{
			get
			{
				return this._CallerId;
			}
			set
			{
				if ((this._CallerId != value))
				{
					this.OnCallerIdChanging(value);
					this.SendPropertyChanging();
					this._CallerId = value;
					this.SendPropertyChanged("CallerId");
					this.OnCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteURL", DbType="VarChar(50)")]
		public string WebsiteURL
		{
			get
			{
				return this._WebsiteURL;
			}
			set
			{
				if ((this._WebsiteURL != value))
				{
					this.OnWebsiteURLChanging(value);
					this.SendPropertyChanging();
					this._WebsiteURL = value;
					this.SendPropertyChanged("WebsiteURL");
					this.OnWebsiteURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChangedCallerId", DbType="Bit")]
		public System.Nullable<bool> IsChangedCallerId
		{
			get
			{
				return this._IsChangedCallerId;
			}
			set
			{
				if ((this._IsChangedCallerId != value))
				{
					this.OnIsChangedCallerIdChanging(value);
					this.SendPropertyChanging();
					this._IsChangedCallerId = value;
					this.SendPropertyChanged("IsChangedCallerId");
					this.OnIsChangedCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Carrier", Storage="_Carriers", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<Carrier> Carriers
		{
			get
			{
				return this._Carriers;
			}
			set
			{
				this._Carriers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_Schedules", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SipAccount", Storage="_SipAccounts", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SipAccount> SipAccounts
		{
			get
			{
				return this._SipAccounts;
			}
			set
			{
				this._SipAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TestOperator", Storage="_TestOperators", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TestOperator> TestOperators
		{
			get
			{
				return this._TestOperators;
			}
			set
			{
				this._TestOperators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Carriers(Carrier entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Carriers(Carrier entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SipAccounts(SipAccount entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SipAccounts(SipAccount entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	public partial class GetDataResult
	{
		
		private int _Id;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TestCli;
		
		private string _ReceivedCli;
		
		private string _ErrorMessage;
		
		private System.Nullable<int> _Status;
		
		private string _MSISDN;
		
		private System.Nullable<System.DateTime> _AndroidDate;
		
		private string _RequestId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndCall;
		
		private string _ResponseCode;
		
		private string _Name;
		
		private string _Country;
		
		private string _mcc;
		
		private string _mnc;
		
		public GetDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this._OperatorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCli", DbType="VarChar(50)")]
		public string TestCli
		{
			get
			{
				return this._TestCli;
			}
			set
			{
				if ((this._TestCli != value))
				{
					this._TestCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedCli", DbType="VarChar(50)")]
		public string ReceivedCli
		{
			get
			{
				return this._ReceivedCli;
			}
			set
			{
				if ((this._ReceivedCli != value))
				{
					this._ReceivedCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(500)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSISDN", DbType="NVarChar(200)")]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if ((this._MSISDN != value))
				{
					this._MSISDN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndroidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AndroidDate
		{
			get
			{
				return this._AndroidDate;
			}
			set
			{
				if ((this._AndroidDate != value))
				{
					this._AndroidDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(50)")]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this._RequestId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndCall
		{
			get
			{
				return this._EndCall;
			}
			set
			{
				if ((this._EndCall != value))
				{
					this._EndCall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this._ResponseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcc", DbType="VarChar(10)")]
		public string mcc
		{
			get
			{
				return this._mcc;
			}
			set
			{
				if ((this._mcc != value))
				{
					this._mcc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mnc", DbType="VarChar(10)")]
		public string mnc
		{
			get
			{
				return this._mnc;
			}
			set
			{
				if ((this._mnc != value))
				{
					this._mnc = value;
				}
			}
		}
	}
	
	public partial class GetChartTotalsResult
	{
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalCalls;
		
		public GetChartTotalsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCalls", DbType="Int")]
		public System.Nullable<int> TotalCalls
		{
			get
			{
				return this._TotalCalls;
			}
			set
			{
				if ((this._TotalCalls != value))
				{
					this._TotalCalls = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
