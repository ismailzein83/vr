#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallGeneratorLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CLITester")]
	public partial class CallGeneratorModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertException(Exception instance);
    partial void UpdateException(Exception instance);
    partial void DeleteException(Exception instance);
    partial void InsertOperator(Operator instance);
    partial void UpdateOperator(Operator instance);
    partial void DeleteOperator(Operator instance);
    partial void InsertActionLog(ActionLog instance);
    partial void UpdateActionLog(ActionLog instance);
    partial void DeleteActionLog(ActionLog instance);
    partial void InsertScheduleOperator(ScheduleOperator instance);
    partial void UpdateScheduleOperator(ScheduleOperator instance);
    partial void DeleteScheduleOperator(ScheduleOperator instance);
    partial void InsertOperatorLog(OperatorLog instance);
    partial void UpdateOperatorLog(OperatorLog instance);
    partial void DeleteOperatorLog(OperatorLog instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertUserBalance(UserBalance instance);
    partial void UpdateUserBalance(UserBalance instance);
    partial void DeleteUserBalance(UserBalance instance);
    partial void InsertGeneratedCall(GeneratedCall instance);
    partial void UpdateGeneratedCall(GeneratedCall instance);
    partial void DeleteGeneratedCall(GeneratedCall instance);
    partial void InsertMontyCall(MontyCall instance);
    partial void UpdateMontyCall(MontyCall instance);
    partial void DeleteMontyCall(MontyCall instance);
    partial void InsertScheduleLog(ScheduleLog instance);
    partial void UpdateScheduleLog(ScheduleLog instance);
    partial void DeleteScheduleLog(ScheduleLog instance);
    partial void InsertCarrier(Carrier instance);
    partial void UpdateCarrier(Carrier instance);
    partial void DeleteCarrier(Carrier instance);
    partial void InsertBalanceDetail(BalanceDetail instance);
    partial void UpdateBalanceDetail(BalanceDetail instance);
    partial void DeleteBalanceDetail(BalanceDetail instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertTestOperator(TestOperator instance);
    partial void UpdateTestOperator(TestOperator instance);
    partial void DeleteTestOperator(TestOperator instance);
    partial void InsertSipAccount(SipAccount instance);
    partial void UpdateSipAccount(SipAccount instance);
    partial void DeleteSipAccount(SipAccount instance);
    #endregion
		
		public CallGeneratorModelDataContext() :
        base(global::CallGeneratorLibrary.Properties.Settings.Default.FraudTest2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CallGeneratorModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Exception> Exceptions
		{
			get
			{
				return this.GetTable<Exception>();
			}
		}
		
		public System.Data.Linq.Table<DataCalls> DataCalls
		{
			get
			{
				return this.GetTable<DataCalls>();
			}
		}
		
		public System.Data.Linq.Table<ChartCalls> ChartCalls
		{
			get
			{
				return this.GetTable<ChartCalls>();
			}
		}
		
		public System.Data.Linq.Table<TestOperatorHistory> TestOperatorHistories
		{
			get
			{
				return this.GetTable<TestOperatorHistory>();
			}
		}
		
		public System.Data.Linq.Table<Operator> Operators
		{
			get
			{
				return this.GetTable<Operator>();
			}
		}
		
		public System.Data.Linq.Table<ActionLog> ActionLogs
		{
			get
			{
				return this.GetTable<ActionLog>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this.GetTable<ScheduleOperator>();
			}
		}
		
		public System.Data.Linq.Table<OperatorLog> OperatorLogs
		{
			get
			{
				return this.GetTable<OperatorLog>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<UserBalance> UserBalances
		{
			get
			{
				return this.GetTable<UserBalance>();
			}
		}
		
		public System.Data.Linq.Table<GeneratedCall> GeneratedCalls
		{
			get
			{
				return this.GetTable<GeneratedCall>();
			}
		}
		
		public System.Data.Linq.Table<ActionLogFeed> ActionLogFeeds
		{
			get
			{
				return this.GetTable<ActionLogFeed>();
			}
		}
		
		public System.Data.Linq.Table<MontyCall> MontyCalls
		{
			get
			{
				return this.GetTable<MontyCall>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleLog> ScheduleLogs
		{
			get
			{
				return this.GetTable<ScheduleLog>();
			}
		}
		
		public System.Data.Linq.Table<Carrier> Carriers
		{
			get
			{
				return this.GetTable<Carrier>();
			}
		}
		
		public System.Data.Linq.Table<BalanceDetail> BalanceDetails
		{
			get
			{
				return this.GetTable<BalanceDetail>();
			}
		}
		
		public System.Data.Linq.Table<ContractDetails> ContractDetails
		{
			get
			{
				return this.GetTable<ContractDetails>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<ContractFields> ContractFields
		{
			get
			{
				return this.GetTable<ContractFields>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<TestOperator> TestOperators
		{
			get
			{
				return this.GetTable<TestOperator>();
			}
		}
		
		public System.Data.Linq.Table<SipAccount> SipAccounts
		{
			get
			{
				return this.GetTable<SipAccount>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetData")]
		public ISingleResult<GetDataResult> GetData()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetChartTotals")]
		public ISingleResult<GetChartTotalsResult> GetChartTotals([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status, userId);
			return ((ISingleResult<GetChartTotalsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestOperators")]
		public ISingleResult<TestOperatorHistory> GetTestOperators([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OperatorId", DbType="Int")] System.Nullable<int> operatorId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayStart", DbType="Int")] System.Nullable<int> displayStart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayLength", DbType="Int")] System.Nullable<int> displayLength)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate, operatorId, displayStart, displayLength);
			return ((ISingleResult<TestOperatorHistory>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetActionLogs")]
		public ISingleResult<GetActionLogsResult> GetActionLogs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectType", DbType="NVarChar(200)")] string objectType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectType, userId);
			return ((ISingleResult<GetActionLogsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exceptions")]
	public partial class Exception : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Details;
		
		private System.Nullable<System.DateTime> _ExceptionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnExceptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExceptionDateChanged();
    #endregion
		
		public Exception()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(4000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExceptionDate
		{
			get
			{
				return this._ExceptionDate;
			}
			set
			{
				if ((this._ExceptionDate != value))
				{
					this.OnExceptionDateChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDate = value;
					this.SendPropertyChanged("ExceptionDate");
					this.OnExceptionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DataCalls
	{
		
		private System.Nullable<int> _Id;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TestCli;
		
		private string _ReceivedCli;
		
		private string _ErrorMessage;
		
		private string _MSISDN;
		
		private System.Nullable<System.DateTime> _AndroidDate;
		
		private string _RequestId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndCall;
		
		private string _ResponseCode;
		
		private string _Name;
		
		private string _Country;
		
		private string _mcc;
		
		private string _mnc;
		
		private System.Nullable<int> _Status;
		
		public DataCalls()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this._OperatorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCli")]
		public string TestCli
		{
			get
			{
				return this._TestCli;
			}
			set
			{
				if ((this._TestCli != value))
				{
					this._TestCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedCli")]
		public string ReceivedCli
		{
			get
			{
				return this._ReceivedCli;
			}
			set
			{
				if ((this._ReceivedCli != value))
				{
					this._ReceivedCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSISDN")]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if ((this._MSISDN != value))
				{
					this._MSISDN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndroidDate")]
		public System.Nullable<System.DateTime> AndroidDate
		{
			get
			{
				return this._AndroidDate;
			}
			set
			{
				if ((this._AndroidDate != value))
				{
					this._AndroidDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId")]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this._RequestId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCall")]
		public System.Nullable<System.DateTime> EndCall
		{
			get
			{
				return this._EndCall;
			}
			set
			{
				if ((this._EndCall != value))
				{
					this._EndCall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this._ResponseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcc")]
		public string mcc
		{
			get
			{
				return this._mcc;
			}
			set
			{
				if ((this._mcc != value))
				{
					this._mcc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mnc")]
		public string mnc
		{
			get
			{
				return this._mnc;
			}
			set
			{
				if ((this._mnc != value))
				{
					this._mnc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ChartCalls
	{
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalCalls;
		
		public ChartCalls()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCalls")]
		public System.Nullable<int> TotalCalls
		{
			get
			{
				return this._TotalCalls;
			}
			set
			{
				if ((this._TotalCalls != value))
				{
					this._TotalCalls = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TestOperatorHistory
	{
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _DisplayName;
		
		private string _TestCli;
		
		private string _ReceivedCli;
		
		private System.Nullable<int> _RowCount;
		
		private System.Nullable<int> _Status;
		
		private string _Route;
		
		private string _ErrorMessage;
		
		private string _PDD;
		
		private string _Duration;
		
		public TestOperatorHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCli")]
		public string TestCli
		{
			get
			{
				return this._TestCli;
			}
			set
			{
				if ((this._TestCli != value))
				{
					this._TestCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedCli")]
		public string ReceivedCli
		{
			get
			{
				return this._ReceivedCli;
			}
			set
			{
				if ((this._ReceivedCli != value))
				{
					this._ReceivedCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowCount")]
		public System.Nullable<int> RowCount
		{
			get
			{
				return this._RowCount;
			}
			set
			{
				if ((this._RowCount != value))
				{
					this._RowCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", CanBeNull=false)]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this._Route = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDD", CanBeNull=false)]
		public string PDD
		{
			get
			{
				return this._PDD;
			}
			set
			{
				if ((this._PDD != value))
				{
					this._PDD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", CanBeNull=false)]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operators")]
	public partial class Operator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _mcc;
		
		private string _mnc;
		
		private string _Country;
		
		private string _CountryPicture;
		
		private System.Nullable<bool> _ServiceAndroid;
		
		private System.Nullable<bool> _ServiceMonty;
		
		private EntitySet<ScheduleOperator> _ScheduleOperators;
		
		private EntitySet<TestOperator> _TestOperators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnmccChanging(string value);
    partial void OnmccChanged();
    partial void OnmncChanging(string value);
    partial void OnmncChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCountryPictureChanging(string value);
    partial void OnCountryPictureChanged();
    partial void OnServiceAndroidChanging(System.Nullable<bool> value);
    partial void OnServiceAndroidChanged();
    partial void OnServiceMontyChanging(System.Nullable<bool> value);
    partial void OnServiceMontyChanged();
    #endregion
		
		public Operator()
		{
			this._ScheduleOperators = new EntitySet<ScheduleOperator>(new Action<ScheduleOperator>(this.attach_ScheduleOperators), new Action<ScheduleOperator>(this.detach_ScheduleOperators));
			this._TestOperators = new EntitySet<TestOperator>(new Action<TestOperator>(this.attach_TestOperators), new Action<TestOperator>(this.detach_TestOperators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcc", DbType="VarChar(10)")]
		public string mcc
		{
			get
			{
				return this._mcc;
			}
			set
			{
				if ((this._mcc != value))
				{
					this.OnmccChanging(value);
					this.SendPropertyChanging();
					this._mcc = value;
					this.SendPropertyChanged("mcc");
					this.OnmccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mnc", DbType="VarChar(10)")]
		public string mnc
		{
			get
			{
				return this._mnc;
			}
			set
			{
				if ((this._mnc != value))
				{
					this.OnmncChanging(value);
					this.SendPropertyChanging();
					this._mnc = value;
					this.SendPropertyChanged("mnc");
					this.OnmncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryPicture", DbType="VarChar(10)")]
		public string CountryPicture
		{
			get
			{
				return this._CountryPicture;
			}
			set
			{
				if ((this._CountryPicture != value))
				{
					this.OnCountryPictureChanging(value);
					this.SendPropertyChanging();
					this._CountryPicture = value;
					this.SendPropertyChanged("CountryPicture");
					this.OnCountryPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAndroid", DbType="Bit")]
		public System.Nullable<bool> ServiceAndroid
		{
			get
			{
				return this._ServiceAndroid;
			}
			set
			{
				if ((this._ServiceAndroid != value))
				{
					this.OnServiceAndroidChanging(value);
					this.SendPropertyChanging();
					this._ServiceAndroid = value;
					this.SendPropertyChanged("ServiceAndroid");
					this.OnServiceAndroidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMonty", DbType="Bit")]
		public System.Nullable<bool> ServiceMonty
		{
			get
			{
				return this._ServiceMonty;
			}
			set
			{
				if ((this._ServiceMonty != value))
				{
					this.OnServiceMontyChanging(value);
					this.SendPropertyChanging();
					this._ServiceMonty = value;
					this.SendPropertyChanged("ServiceMonty");
					this.OnServiceMontyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_ScheduleOperator", Storage="_ScheduleOperators", ThisKey="Id", OtherKey="OperatorId")]
		public EntitySet<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this._ScheduleOperators;
			}
			set
			{
				this._ScheduleOperators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_TestOperator", Storage="_TestOperators", ThisKey="Id", OtherKey="OperatorId")]
		public EntitySet<TestOperator> TestOperators
		{
			get
			{
				return this._TestOperators;
			}
			set
			{
				this._TestOperators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = this;
		}
		
		private void detach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = null;
		}
		
		private void attach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = this;
		}
		
		private void detach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Operator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionLog")]
	public partial class ActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ActionType;
		
		private string _Username;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private string _ObjectType;
		
		private System.Nullable<int> _ObjectId;
		
		private string _Description;
		
		private string _IPAddress;
		
		private string _RemoteAddress;
		
		private string _ComputerName;
		
		private System.Nullable<int> _UserId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActionTypeChanging(System.Nullable<int> value);
    partial void OnActionTypeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnObjectIdChanging(System.Nullable<int> value);
    partial void OnObjectIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnRemoteAddressChanging(string value);
    partial void OnRemoteAddressChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public ActionLog()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="Int")]
		public System.Nullable<int> ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(255)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int")]
		public System.Nullable<int> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteAddress", DbType="NVarChar(50)")]
		public string RemoteAddress
		{
			get
			{
				return this._RemoteAddress;
			}
			set
			{
				if ((this._RemoteAddress != value))
				{
					this.OnRemoteAddressChanging(value);
					this.SendPropertyChanging();
					this._RemoteAddress = value;
					this.SendPropertyChanged("RemoteAddress");
					this.OnRemoteAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(255)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActionLog", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ActionLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ActionLogs.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleOperators")]
	public partial class ScheduleOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<int> _CarrierId;
		
		private System.Nullable<int> _Frequency;
		
		private EntityRef<Operator> _Operator;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<Carrier> _Carrier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnCarrierIdChanging(System.Nullable<int> value);
    partial void OnCarrierIdChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    #endregion
		
		public ScheduleOperator()
		{
			this._Operator = default(EntityRef<Operator>);
			this._Schedule = default(EntityRef<Schedule>);
			this._Carrier = default(EntityRef<Carrier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					if (this._Operator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierId", DbType="Int")]
		public System.Nullable<int> CarrierId
		{
			get
			{
				return this._CarrierId;
			}
			set
			{
				if ((this._CarrierId != value))
				{
					if (this._Carrier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarrierIdChanging(value);
					this.SendPropertyChanging();
					this._CarrierId = value;
					this.SendPropertyChanged("CarrierId");
					this.OnCarrierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_ScheduleOperator", Storage="_Operator", ThisKey="OperatorId", OtherKey="Id", IsForeignKey=true)]
		public Operator Operator
		{
			get
			{
				return this._Operator.Entity;
			}
			set
			{
				Operator previousValue = this._Operator.Entity;
				if (((previousValue != value) 
							|| (this._Operator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operator.Entity = null;
						previousValue.ScheduleOperators.Remove(this);
					}
					this._Operator.Entity = value;
					if ((value != null))
					{
						value.ScheduleOperators.Add(this);
						this._OperatorId = value.Id;
					}
					else
					{
						this._OperatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Operator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleOperator", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleOperators.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleOperators.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carrier_ScheduleOperator", Storage="_Carrier", ThisKey="CarrierId", OtherKey="Id", IsForeignKey=true)]
		public Carrier Carrier
		{
			get
			{
				return this._Carrier.Entity;
			}
			set
			{
				Carrier previousValue = this._Carrier.Entity;
				if (((previousValue != value) 
							|| (this._Carrier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carrier.Entity = null;
						previousValue.ScheduleOperators.Remove(this);
					}
					this._Carrier.Entity = value;
					if ((value != null))
					{
						value.ScheduleOperators.Add(this);
						this._CarrierId = value.Id;
					}
					else
					{
						this._CarrierId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Carrier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperatorLogs")]
	public partial class OperatorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _MCC;
		
		private string _MNC;
		
		private string _Country;
		
		private System.Nullable<bool> _IsOnline;
		
		private System.Nullable<System.DateTime> _LogDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMCCChanging(string value);
    partial void OnMCCChanged();
    partial void OnMNCChanging(string value);
    partial void OnMNCChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnIsOnlineChanging(System.Nullable<bool> value);
    partial void OnIsOnlineChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    #endregion
		
		public OperatorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCC", DbType="NVarChar(20)")]
		public string MCC
		{
			get
			{
				return this._MCC;
			}
			set
			{
				if ((this._MCC != value))
				{
					this.OnMCCChanging(value);
					this.SendPropertyChanging();
					this._MCC = value;
					this.SendPropertyChanged("MCC");
					this.OnMCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MNC", DbType="NVarChar(20)")]
		public string MNC
		{
			get
			{
				return this._MNC;
			}
			set
			{
				if ((this._MNC != value))
				{
					this.OnMNCChanging(value);
					this.SendPropertyChanging();
					this._MNC = value;
					this.SendPropertyChanged("MNC");
					this.OnMNCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(200)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit")]
		public System.Nullable<bool> IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedules")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DisplayName;
		
		private System.Nullable<int> _Frequency;
		
		private System.Nullable<int> _TimeFrequency;
		
		private System.Nullable<int> _MonthDay;
		
		private System.Nullable<int> _OccursEvery;
		
		private System.Nullable<System.DateTime> _SpecificTime;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _SipAccountId;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalNumbers;
		
		private System.Nullable<decimal> _RatioOfCalls;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _SpecificTime1;
		
		private EntitySet<ScheduleOperator> _ScheduleOperators;
		
		private EntitySet<ScheduleLog> _ScheduleLogs;
		
		private EntitySet<TestOperator> _TestOperators;
		
		private EntityRef<User> _User;
		
		private EntityRef<SipAccount> _SipAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    partial void OnTimeFrequencyChanging(System.Nullable<int> value);
    partial void OnTimeFrequencyChanged();
    partial void OnMonthDayChanging(System.Nullable<int> value);
    partial void OnMonthDayChanged();
    partial void OnOccursEveryChanging(System.Nullable<int> value);
    partial void OnOccursEveryChanged();
    partial void OnSpecificTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSpecificTimeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSipAccountIdChanging(System.Nullable<int> value);
    partial void OnSipAccountIdChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnTotalNumbersChanging(System.Nullable<int> value);
    partial void OnTotalNumbersChanged();
    partial void OnRatioOfCallsChanging(System.Nullable<decimal> value);
    partial void OnRatioOfCallsChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnSpecificTime1Changing(System.Nullable<System.DateTime> value);
    partial void OnSpecificTime1Changed();
    #endregion
		
		public Schedule()
		{
			this._ScheduleOperators = new EntitySet<ScheduleOperator>(new Action<ScheduleOperator>(this.attach_ScheduleOperators), new Action<ScheduleOperator>(this.detach_ScheduleOperators));
			this._ScheduleLogs = new EntitySet<ScheduleLog>(new Action<ScheduleLog>(this.attach_ScheduleLogs), new Action<ScheduleLog>(this.detach_ScheduleLogs));
			this._TestOperators = new EntitySet<TestOperator>(new Action<TestOperator>(this.attach_TestOperators), new Action<TestOperator>(this.detach_TestOperators));
			this._User = default(EntityRef<User>);
			this._SipAccount = default(EntityRef<SipAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrequency", DbType="Int")]
		public System.Nullable<int> TimeFrequency
		{
			get
			{
				return this._TimeFrequency;
			}
			set
			{
				if ((this._TimeFrequency != value))
				{
					this.OnTimeFrequencyChanging(value);
					this.SendPropertyChanging();
					this._TimeFrequency = value;
					this.SendPropertyChanged("TimeFrequency");
					this.OnTimeFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDay", DbType="Int")]
		public System.Nullable<int> MonthDay
		{
			get
			{
				return this._MonthDay;
			}
			set
			{
				if ((this._MonthDay != value))
				{
					this.OnMonthDayChanging(value);
					this.SendPropertyChanging();
					this._MonthDay = value;
					this.SendPropertyChanged("MonthDay");
					this.OnMonthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccursEvery", DbType="Int")]
		public System.Nullable<int> OccursEvery
		{
			get
			{
				return this._OccursEvery;
			}
			set
			{
				if ((this._OccursEvery != value))
				{
					this.OnOccursEveryChanging(value);
					this.SendPropertyChanging();
					this._OccursEvery = value;
					this.SendPropertyChanged("OccursEvery");
					this.OnOccursEveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SpecificTime
		{
			get
			{
				return this._SpecificTime;
			}
			set
			{
				if ((this._SpecificTime != value))
				{
					this.OnSpecificTimeChanging(value);
					this.SendPropertyChanging();
					this._SpecificTime = value;
					this.SendPropertyChanged("SpecificTime");
					this.OnSpecificTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SipAccountId", DbType="Int")]
		public System.Nullable<int> SipAccountId
		{
			get
			{
				return this._SipAccountId;
			}
			set
			{
				if ((this._SipAccountId != value))
				{
					if (this._SipAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSipAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SipAccountId = value;
					this.SendPropertyChanged("SipAccountId");
					this.OnSipAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNumbers", DbType="Int")]
		public System.Nullable<int> TotalNumbers
		{
			get
			{
				return this._TotalNumbers;
			}
			set
			{
				if ((this._TotalNumbers != value))
				{
					this.OnTotalNumbersChanging(value);
					this.SendPropertyChanging();
					this._TotalNumbers = value;
					this.SendPropertyChanged("TotalNumbers");
					this.OnTotalNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioOfCalls", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RatioOfCalls
		{
			get
			{
				return this._RatioOfCalls;
			}
			set
			{
				if ((this._RatioOfCalls != value))
				{
					this.OnRatioOfCallsChanging(value);
					this.SendPropertyChanging();
					this._RatioOfCalls = value;
					this.SendPropertyChanged("RatioOfCalls");
					this.OnRatioOfCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTime1", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SpecificTime1
		{
			get
			{
				return this._SpecificTime1;
			}
			set
			{
				if ((this._SpecificTime1 != value))
				{
					this.OnSpecificTime1Changing(value);
					this.SendPropertyChanging();
					this._SpecificTime1 = value;
					this.SendPropertyChanged("SpecificTime1");
					this.OnSpecificTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleOperator", Storage="_ScheduleOperators", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this._ScheduleOperators;
			}
			set
			{
				this._ScheduleOperators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleLog", Storage="_ScheduleLogs", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<ScheduleLog> ScheduleLogs
		{
			get
			{
				return this._ScheduleLogs;
			}
			set
			{
				this._ScheduleLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_TestOperator", Storage="_TestOperators", ThisKey="Id", OtherKey="ScheduleId")]
		public EntitySet<TestOperator> TestOperators
		{
			get
			{
				return this._TestOperators;
			}
			set
			{
				this._TestOperators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_Schedule", Storage="_SipAccount", ThisKey="SipAccountId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public SipAccount SipAccount
		{
			get
			{
				return this._SipAccount.Entity;
			}
			set
			{
				SipAccount previousValue = this._SipAccount.Entity;
				if (((previousValue != value) 
							|| (this._SipAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipAccount.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._SipAccount.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._SipAccountId = value.Id;
					}
					else
					{
						this._SipAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleLogs(ScheduleLog entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleLogs(ScheduleLog entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserBalances")]
	public partial class UserBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _OldBalance;
		
		private System.Nullable<int> _CountCalls;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnOldBalanceChanging(System.Nullable<int> value);
    partial void OnOldBalanceChanged();
    partial void OnCountCallsChanging(System.Nullable<int> value);
    partial void OnCountCallsChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    #endregion
		
		public UserBalance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBalance", DbType="Int")]
		public System.Nullable<int> OldBalance
		{
			get
			{
				return this._OldBalance;
			}
			set
			{
				if ((this._OldBalance != value))
				{
					this.OnOldBalanceChanging(value);
					this.SendPropertyChanging();
					this._OldBalance = value;
					this.SendPropertyChanged("OldBalance");
					this.OnOldBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountCalls", DbType="Int")]
		public System.Nullable<int> CountCalls
		{
			get
			{
				return this._CountCalls;
			}
			set
			{
				if ((this._CountCalls != value))
				{
					this.OnCountCallsChanging(value);
					this.SendPropertyChanging();
					this._CountCalls = value;
					this.SendPropertyChanged("CountCalls");
					this.OnCountCallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneratedCalls")]
	public partial class GeneratedCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Number;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _StartCall;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Status;
		
		private string _ResponseCode;
		
		private System.Nullable<int> _SipAccountId;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<System.DateTime> _AlertDate;
		
		private System.Nullable<System.DateTime> _ConnectDate;
		
		private System.Nullable<System.DateTime> _DisconnectDate;
		
		private EntityRef<SipAccount> _SipAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartCallChanging(System.Nullable<System.DateTime> value);
    partial void OnStartCallChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnResponseCodeChanging(string value);
    partial void OnResponseCodeChanged();
    partial void OnSipAccountIdChanging(System.Nullable<int> value);
    partial void OnSipAccountIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnAlertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlertDateChanged();
    partial void OnConnectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConnectDateChanged();
    partial void OnDisconnectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDisconnectDateChanged();
    #endregion
		
		public GeneratedCall()
		{
			this._SipAccount = default(EntityRef<SipAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartCall
		{
			get
			{
				return this._StartCall;
			}
			set
			{
				if ((this._StartCall != value))
				{
					this.OnStartCallChanging(value);
					this.SendPropertyChanging();
					this._StartCall = value;
					this.SendPropertyChanged("StartCall");
					this.OnStartCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this.OnResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseCode = value;
					this.SendPropertyChanged("ResponseCode");
					this.OnResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SipAccountId", DbType="Int")]
		public System.Nullable<int> SipAccountId
		{
			get
			{
				return this._SipAccountId;
			}
			set
			{
				if ((this._SipAccountId != value))
				{
					if (this._SipAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSipAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SipAccountId = value;
					this.SendPropertyChanged("SipAccountId");
					this.OnSipAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlertDate
		{
			get
			{
				return this._AlertDate;
			}
			set
			{
				if ((this._AlertDate != value))
				{
					this.OnAlertDateChanging(value);
					this.SendPropertyChanging();
					this._AlertDate = value;
					this.SendPropertyChanged("AlertDate");
					this.OnAlertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConnectDate
		{
			get
			{
				return this._ConnectDate;
			}
			set
			{
				if ((this._ConnectDate != value))
				{
					this.OnConnectDateChanging(value);
					this.SendPropertyChanging();
					this._ConnectDate = value;
					this.SendPropertyChanged("ConnectDate");
					this.OnConnectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisconnectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisconnectDate
		{
			get
			{
				return this._DisconnectDate;
			}
			set
			{
				if ((this._DisconnectDate != value))
				{
					this.OnDisconnectDateChanging(value);
					this.SendPropertyChanging();
					this._DisconnectDate = value;
					this.SendPropertyChanged("DisconnectDate");
					this.OnDisconnectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_GeneratedCall", Storage="_SipAccount", ThisKey="SipAccountId", OtherKey="Id", IsForeignKey=true)]
		public SipAccount SipAccount
		{
			get
			{
				return this._SipAccount.Entity;
			}
			set
			{
				SipAccount previousValue = this._SipAccount.Entity;
				if (((previousValue != value) 
							|| (this._SipAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SipAccount.Entity = null;
						previousValue.GeneratedCalls.Remove(this);
					}
					this._SipAccount.Entity = value;
					if ((value != null))
					{
						value.GeneratedCalls.Add(this);
						this._SipAccountId = value.Id;
					}
					else
					{
						this._SipAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SipAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ActionLogFeed
	{
		
		private System.Nullable<int> _Id;
		
		private System.Nullable<int> _ActionType;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private string _ObjectType;
		
		private System.Nullable<int> _ObjectId;
		
		private string _IPAddress;
		
		private System.Nullable<int> _UserId;
		
		private string _Name;
		
		public ActionLogFeed()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType")]
		public System.Nullable<int> ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this._ActionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this._LogDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", CanBeNull=false)]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this._ObjectType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId")]
		public System.Nullable<int> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this._ObjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MontyCalls")]
	public partial class MontyCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _TestOperatorId;
		
		private string _MSISDN;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _RequestId;
		
		private System.Nullable<int> _GeneratedCallId;
		
		private System.Nullable<int> _ServiceId;
		
		private EntityRef<TestOperator> _TestOperator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTestOperatorIdChanging(System.Nullable<int> value);
    partial void OnTestOperatorIdChanged();
    partial void OnMSISDNChanging(string value);
    partial void OnMSISDNChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnRequestIdChanging(string value);
    partial void OnRequestIdChanged();
    partial void OnGeneratedCallIdChanging(System.Nullable<int> value);
    partial void OnGeneratedCallIdChanged();
    partial void OnServiceIdChanging(System.Nullable<int> value);
    partial void OnServiceIdChanged();
    #endregion
		
		public MontyCall()
		{
			this._TestOperator = default(EntityRef<TestOperator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestOperatorId", DbType="Int")]
		public System.Nullable<int> TestOperatorId
		{
			get
			{
				return this._TestOperatorId;
			}
			set
			{
				if ((this._TestOperatorId != value))
				{
					if (this._TestOperator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._TestOperatorId = value;
					this.SendPropertyChanged("TestOperatorId");
					this.OnTestOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSISDN", DbType="NVarChar(200)")]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if ((this._MSISDN != value))
				{
					this.OnMSISDNChanging(value);
					this.SendPropertyChanging();
					this._MSISDN = value;
					this.SendPropertyChanged("MSISDN");
					this.OnMSISDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(50)")]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedCallId", DbType="Int")]
		public System.Nullable<int> GeneratedCallId
		{
			get
			{
				return this._GeneratedCallId;
			}
			set
			{
				if ((this._GeneratedCallId != value))
				{
					this.OnGeneratedCallIdChanging(value);
					this.SendPropertyChanging();
					this._GeneratedCallId = value;
					this.SendPropertyChanged("GeneratedCallId");
					this.OnGeneratedCallIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int")]
		public System.Nullable<int> ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestOperator_MontyCall", Storage="_TestOperator", ThisKey="TestOperatorId", OtherKey="Id", IsForeignKey=true)]
		public TestOperator TestOperator
		{
			get
			{
				return this._TestOperator.Entity;
			}
			set
			{
				TestOperator previousValue = this._TestOperator.Entity;
				if (((previousValue != value) 
							|| (this._TestOperator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestOperator.Entity = null;
						previousValue.MontyCalls.Remove(this);
					}
					this._TestOperator.Entity = value;
					if ((value != null))
					{
						value.MontyCalls.Add(this);
						this._TestOperatorId = value.Id;
					}
					else
					{
						this._TestOperatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestOperator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleLogs")]
	public partial class ScheduleLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _Frequency;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    #endregion
		
		public ScheduleLog()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleLog", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleLogs.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleLogs.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Carriers")]
	public partial class Carrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Prefix;
		
		private string _ShortName;
		
		private EntitySet<ScheduleOperator> _ScheduleOperators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Carrier()
		{
			this._ScheduleOperators = new EntitySet<ScheduleOperator>(new Action<ScheduleOperator>(this.attach_ScheduleOperators), new Action<ScheduleOperator>(this.detach_ScheduleOperators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(50)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(500)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carrier_ScheduleOperator", Storage="_ScheduleOperators", ThisKey="Id", OtherKey="CarrierId")]
		public EntitySet<ScheduleOperator> ScheduleOperators
		{
			get
			{
				return this._ScheduleOperators;
			}
			set
			{
				this._ScheduleOperators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Carrier = this;
		}
		
		private void detach_ScheduleOperators(ScheduleOperator entity)
		{
			this.SendPropertyChanging();
			entity.Carrier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BalanceDetails")]
	public partial class BalanceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Balance;
		
		private System.Nullable<int> _Remaining;
		
		private System.Nullable<System.DateTime> _BeginEffectiveDate;
		
		private System.Nullable<System.DateTime> _EndEffectiveDate;
		
		private System.Nullable<int> _ContractId;
		
		private EntityRef<Contract> _Contract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    partial void OnRemainingChanging(System.Nullable<int> value);
    partial void OnRemainingChanged();
    partial void OnBeginEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginEffectiveDateChanged();
    partial void OnEndEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndEffectiveDateChanged();
    partial void OnContractIdChanging(System.Nullable<int> value);
    partial void OnContractIdChanged();
    #endregion
		
		public BalanceDetail()
		{
			this._Contract = default(EntityRef<Contract>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remaining", DbType="Int")]
		public System.Nullable<int> Remaining
		{
			get
			{
				return this._Remaining;
			}
			set
			{
				if ((this._Remaining != value))
				{
					this.OnRemainingChanging(value);
					this.SendPropertyChanging();
					this._Remaining = value;
					this.SendPropertyChanged("Remaining");
					this.OnRemainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginEffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BeginEffectiveDate
		{
			get
			{
				return this._BeginEffectiveDate;
			}
			set
			{
				if ((this._BeginEffectiveDate != value))
				{
					this.OnBeginEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._BeginEffectiveDate = value;
					this.SendPropertyChanged("BeginEffectiveDate");
					this.OnBeginEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndEffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndEffectiveDate
		{
			get
			{
				return this._EndEffectiveDate;
			}
			set
			{
				if ((this._EndEffectiveDate != value))
				{
					this.OnEndEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EndEffectiveDate = value;
					this.SendPropertyChanged("EndEffectiveDate");
					this.OnEndEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="Int")]
		public System.Nullable<int> ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_BalanceDetail", Storage="_Contract", ThisKey="ContractId", OtherKey="Id", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.BalanceDetails.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.BalanceDetails.Add(this);
						this._ContractId = value.Id;
					}
					else
					{
						this._ContractId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContractDetails
	{
		
		private System.Nullable<int> _NumberOfCalls;
		
		private System.Nullable<int> _NumberOfPeriod;
		
		private System.Nullable<int> _Period;
		
		public ContractDetails()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfCalls")]
		public System.Nullable<int> NumberOfCalls
		{
			get
			{
				return this._NumberOfCalls;
			}
			set
			{
				if ((this._NumberOfCalls != value))
				{
					this._NumberOfCalls = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPeriod")]
		public System.Nullable<int> NumberOfPeriod
		{
			get
			{
				return this._NumberOfPeriod;
			}
			set
			{
				if ((this._NumberOfPeriod != value))
				{
					this._NumberOfPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period")]
		public System.Nullable<int> Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _ChargeType;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDone;
		
		private EntitySet<BalanceDetail> _BalanceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnChargeTypeChanging(System.Nullable<int> value);
    partial void OnChargeTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDoneChanging(System.Nullable<bool> value);
    partial void OnIsDoneChanged();
    #endregion
		
		public Contract()
		{
			this._BalanceDetails = new EntitySet<BalanceDetail>(new Action<BalanceDetail>(this.attach_BalanceDetails), new Action<BalanceDetail>(this.detach_BalanceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeType", DbType="Int")]
		public System.Nullable<int> ChargeType
		{
			get
			{
				return this._ChargeType;
			}
			set
			{
				if ((this._ChargeType != value))
				{
					this.OnChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._ChargeType = value;
					this.SendPropertyChanged("ChargeType");
					this.OnChargeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit")]
		public System.Nullable<bool> IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this.OnIsDoneChanging(value);
					this.SendPropertyChanging();
					this._IsDone = value;
					this.SendPropertyChanged("IsDone");
					this.OnIsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_BalanceDetail", Storage="_BalanceDetails", ThisKey="Id", OtherKey="ContractId")]
		public EntitySet<BalanceDetail> BalanceDetails
		{
			get
			{
				return this._BalanceDetails;
			}
			set
			{
				this._BalanceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BalanceDetails(BalanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_BalanceDetails(BalanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContractFields
	{
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _ChargeType;
		
		private System.Nullable<int> _NumberOfCalls;
		
		private System.Nullable<int> _NumberOfPeriod;
		
		private string _Period;
		
		public ContractFields()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeType")]
		public string ChargeType
		{
			get
			{
				return this._ChargeType;
			}
			set
			{
				if ((this._ChargeType != value))
				{
					this._ChargeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfCalls")]
		public System.Nullable<int> NumberOfCalls
		{
			get
			{
				return this._NumberOfCalls;
			}
			set
			{
				if ((this._NumberOfCalls != value))
				{
					this._NumberOfCalls = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPeriod")]
		public System.Nullable<int> NumberOfPeriod
		{
			get
			{
				return this._NumberOfPeriod;
			}
			set
			{
				if ((this._NumberOfPeriod != value))
				{
					this._NumberOfPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Name;
		
		private string _Password;
		
		private string _Email;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Guid;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _LastName;
		
		private string _MobileNumber;
		
		private string _WebsiteURL;
		
		private System.Nullable<int> _Balance;
		
		private System.Nullable<int> _Role;
		
		private System.Nullable<int> _RemainingBalance;
		
		private System.Nullable<System.DateTime> _LastSetBalance;
		
		private EntitySet<ActionLog> _ActionLogs;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<TestOperator> _TestOperators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnWebsiteURLChanging(string value);
    partial void OnWebsiteURLChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    partial void OnRoleChanging(System.Nullable<int> value);
    partial void OnRoleChanged();
    partial void OnRemainingBalanceChanging(System.Nullable<int> value);
    partial void OnRemainingBalanceChanged();
    partial void OnLastSetBalanceChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSetBalanceChanged();
    #endregion
		
		public User()
		{
			this._ActionLogs = new EntitySet<ActionLog>(new Action<ActionLog>(this.attach_ActionLogs), new Action<ActionLog>(this.detach_ActionLogs));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._TestOperators = new EntitySet<TestOperator>(new Action<TestOperator>(this.attach_TestOperators), new Action<TestOperator>(this.detach_TestOperators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(255)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteURL", DbType="VarChar(50)")]
		public string WebsiteURL
		{
			get
			{
				return this._WebsiteURL;
			}
			set
			{
				if ((this._WebsiteURL != value))
				{
					this.OnWebsiteURLChanging(value);
					this.SendPropertyChanging();
					this._WebsiteURL = value;
					this.SendPropertyChanged("WebsiteURL");
					this.OnWebsiteURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int")]
		public System.Nullable<int> Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingBalance", DbType="Int")]
		public System.Nullable<int> RemainingBalance
		{
			get
			{
				return this._RemainingBalance;
			}
			set
			{
				if ((this._RemainingBalance != value))
				{
					this.OnRemainingBalanceChanging(value);
					this.SendPropertyChanging();
					this._RemainingBalance = value;
					this.SendPropertyChanged("RemainingBalance");
					this.OnRemainingBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSetBalance", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSetBalance
		{
			get
			{
				return this._LastSetBalance;
			}
			set
			{
				if ((this._LastSetBalance != value))
				{
					this.OnLastSetBalanceChanging(value);
					this.SendPropertyChanging();
					this._LastSetBalance = value;
					this.SendPropertyChanged("LastSetBalance");
					this.OnLastSetBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActionLog", Storage="_ActionLogs", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<ActionLog> ActionLogs
		{
			get
			{
				return this._ActionLogs;
			}
			set
			{
				this._ActionLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Schedule", Storage="_Schedules", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TestOperator", Storage="_TestOperators", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TestOperator> TestOperators
		{
			get
			{
				return this._TestOperators;
			}
			set
			{
				this._TestOperators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionLogs(ActionLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ActionLogs(ActionLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TestOperators(TestOperator entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestOperators")]
	public partial class TestOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TestCli;
		
		private string _ReceivedCli;
		
		private System.Nullable<int> _Status;
		
		private string _CarrierPrefix;
		
		private string _CallerId;
		
		private string _ErrorMessage;
		
		private System.Nullable<int> _ScheduleId;
		
		private System.Nullable<bool> _Requested;
		
		private System.Nullable<int> _ParentUserId;
		
		private string _PhonePrefix;
		
		private string _PDD;
		
		private string _Duration;
		
		private EntitySet<MontyCall> _MontyCalls;
		
		private EntityRef<Operator> _Operator;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnOperatorIdChanging(System.Nullable<int> value);
    partial void OnOperatorIdChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnTestCliChanging(string value);
    partial void OnTestCliChanged();
    partial void OnReceivedCliChanging(string value);
    partial void OnReceivedCliChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCarrierPrefixChanging(string value);
    partial void OnCarrierPrefixChanged();
    partial void OnCallerIdChanging(string value);
    partial void OnCallerIdChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnScheduleIdChanging(System.Nullable<int> value);
    partial void OnScheduleIdChanged();
    partial void OnRequestedChanging(System.Nullable<bool> value);
    partial void OnRequestedChanged();
    partial void OnParentUserIdChanging(System.Nullable<int> value);
    partial void OnParentUserIdChanged();
    partial void OnPhonePrefixChanging(string value);
    partial void OnPhonePrefixChanged();
    partial void OnPDDChanging(string value);
    partial void OnPDDChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    #endregion
		
		public TestOperator()
		{
			this._MontyCalls = new EntitySet<MontyCall>(new Action<MontyCall>(this.attach_MontyCalls), new Action<MontyCall>(this.detach_MontyCalls));
			this._Operator = default(EntityRef<Operator>);
			this._Schedule = default(EntityRef<Schedule>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					if (this._Operator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCli", DbType="VarChar(50)")]
		public string TestCli
		{
			get
			{
				return this._TestCli;
			}
			set
			{
				if ((this._TestCli != value))
				{
					this.OnTestCliChanging(value);
					this.SendPropertyChanging();
					this._TestCli = value;
					this.SendPropertyChanged("TestCli");
					this.OnTestCliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedCli", DbType="VarChar(50)")]
		public string ReceivedCli
		{
			get
			{
				return this._ReceivedCli;
			}
			set
			{
				if ((this._ReceivedCli != value))
				{
					this.OnReceivedCliChanging(value);
					this.SendPropertyChanging();
					this._ReceivedCli = value;
					this.SendPropertyChanged("ReceivedCli");
					this.OnReceivedCliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierPrefix", DbType="VarChar(50)")]
		public string CarrierPrefix
		{
			get
			{
				return this._CarrierPrefix;
			}
			set
			{
				if ((this._CarrierPrefix != value))
				{
					this.OnCarrierPrefixChanging(value);
					this.SendPropertyChanging();
					this._CarrierPrefix = value;
					this.SendPropertyChanged("CarrierPrefix");
					this.OnCarrierPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallerId", DbType="VarChar(50)")]
		public string CallerId
		{
			get
			{
				return this._CallerId;
			}
			set
			{
				if ((this._CallerId != value))
				{
					this.OnCallerIdChanging(value);
					this.SendPropertyChanging();
					this._CallerId = value;
					this.SendPropertyChanged("CallerId");
					this.OnCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(500)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int")]
		public System.Nullable<int> ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requested", DbType="Bit")]
		public System.Nullable<bool> Requested
		{
			get
			{
				return this._Requested;
			}
			set
			{
				if ((this._Requested != value))
				{
					this.OnRequestedChanging(value);
					this.SendPropertyChanging();
					this._Requested = value;
					this.SendPropertyChanged("Requested");
					this.OnRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentUserId", DbType="Int")]
		public System.Nullable<int> ParentUserId
		{
			get
			{
				return this._ParentUserId;
			}
			set
			{
				if ((this._ParentUserId != value))
				{
					this.OnParentUserIdChanging(value);
					this.SendPropertyChanging();
					this._ParentUserId = value;
					this.SendPropertyChanged("ParentUserId");
					this.OnParentUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhonePrefix", DbType="NVarChar(50)")]
		public string PhonePrefix
		{
			get
			{
				return this._PhonePrefix;
			}
			set
			{
				if ((this._PhonePrefix != value))
				{
					this.OnPhonePrefixChanging(value);
					this.SendPropertyChanging();
					this._PhonePrefix = value;
					this.SendPropertyChanged("PhonePrefix");
					this.OnPhonePrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDD", DbType="VarChar(50)")]
		public string PDD
		{
			get
			{
				return this._PDD;
			}
			set
			{
				if ((this._PDD != value))
				{
					this.OnPDDChanging(value);
					this.SendPropertyChanging();
					this._PDD = value;
					this.SendPropertyChanged("PDD");
					this.OnPDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestOperator_MontyCall", Storage="_MontyCalls", ThisKey="Id", OtherKey="TestOperatorId")]
		public EntitySet<MontyCall> MontyCalls
		{
			get
			{
				return this._MontyCalls;
			}
			set
			{
				this._MontyCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_TestOperator", Storage="_Operator", ThisKey="OperatorId", OtherKey="Id", IsForeignKey=true)]
		public Operator Operator
		{
			get
			{
				return this._Operator.Entity;
			}
			set
			{
				Operator previousValue = this._Operator.Entity;
				if (((previousValue != value) 
							|| (this._Operator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operator.Entity = null;
						previousValue.TestOperators.Remove(this);
					}
					this._Operator.Entity = value;
					if ((value != null))
					{
						value.TestOperators.Add(this);
						this._OperatorId = value.Id;
					}
					else
					{
						this._OperatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Operator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_TestOperator", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="Id", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.TestOperators.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.TestOperators.Add(this);
						this._ScheduleId = value.Id;
					}
					else
					{
						this._ScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TestOperator", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TestOperators.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TestOperators.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MontyCalls(MontyCall entity)
		{
			this.SendPropertyChanging();
			entity.TestOperator = this;
		}
		
		private void detach_MontyCalls(MontyCall entity)
		{
			this.SendPropertyChanging();
			entity.TestOperator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SipAccounts")]
	public partial class SipAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Login;
		
		private string _Password;
		
		private string _Server;
		
		private System.Nullable<bool> _UseProxy;
		
		private string _ProxyServer;
		
		private string _ProxyUser;
		
		private string _ProxyPass;
		
		private string _DisplayName;
		
		private System.Nullable<int> _TotalLines;
		
		private System.Nullable<bool> _UseAudio;
		
		private string _DefaultAudioFileName;
		
		private System.Data.Linq.Binary _DefaultAudioFile;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _PlaybackDevice;
		
		private string _NetworkInterface;
		
		private string _Codecs;
		
		private System.Nullable<bool> _IsChangedCallerId;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<GeneratedCall> _GeneratedCalls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnUseProxyChanging(System.Nullable<bool> value);
    partial void OnUseProxyChanged();
    partial void OnProxyServerChanging(string value);
    partial void OnProxyServerChanged();
    partial void OnProxyUserChanging(string value);
    partial void OnProxyUserChanged();
    partial void OnProxyPassChanging(string value);
    partial void OnProxyPassChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTotalLinesChanging(System.Nullable<int> value);
    partial void OnTotalLinesChanged();
    partial void OnUseAudioChanging(System.Nullable<bool> value);
    partial void OnUseAudioChanged();
    partial void OnDefaultAudioFileNameChanging(string value);
    partial void OnDefaultAudioFileNameChanged();
    partial void OnDefaultAudioFileChanging(System.Data.Linq.Binary value);
    partial void OnDefaultAudioFileChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnPlaybackDeviceChanging(string value);
    partial void OnPlaybackDeviceChanged();
    partial void OnNetworkInterfaceChanging(string value);
    partial void OnNetworkInterfaceChanged();
    partial void OnCodecsChanging(string value);
    partial void OnCodecsChanged();
    partial void OnIsChangedCallerIdChanging(System.Nullable<bool> value);
    partial void OnIsChangedCallerIdChanged();
    #endregion
		
		public SipAccount()
		{
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._GeneratedCalls = new EntitySet<GeneratedCall>(new Action<GeneratedCall>(this.attach_GeneratedCalls), new Action<GeneratedCall>(this.detach_GeneratedCalls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(500)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(500)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(500)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="VarChar(500)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseProxy", DbType="Bit")]
		public System.Nullable<bool> UseProxy
		{
			get
			{
				return this._UseProxy;
			}
			set
			{
				if ((this._UseProxy != value))
				{
					this.OnUseProxyChanging(value);
					this.SendPropertyChanging();
					this._UseProxy = value;
					this.SendPropertyChanged("UseProxy");
					this.OnUseProxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyServer", DbType="VarChar(500)")]
		public string ProxyServer
		{
			get
			{
				return this._ProxyServer;
			}
			set
			{
				if ((this._ProxyServer != value))
				{
					this.OnProxyServerChanging(value);
					this.SendPropertyChanging();
					this._ProxyServer = value;
					this.SendPropertyChanged("ProxyServer");
					this.OnProxyServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyUser", DbType="VarChar(500)")]
		public string ProxyUser
		{
			get
			{
				return this._ProxyUser;
			}
			set
			{
				if ((this._ProxyUser != value))
				{
					this.OnProxyUserChanging(value);
					this.SendPropertyChanging();
					this._ProxyUser = value;
					this.SendPropertyChanged("ProxyUser");
					this.OnProxyUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxyPass", DbType="VarChar(500)")]
		public string ProxyPass
		{
			get
			{
				return this._ProxyPass;
			}
			set
			{
				if ((this._ProxyPass != value))
				{
					this.OnProxyPassChanging(value);
					this.SendPropertyChanging();
					this._ProxyPass = value;
					this.SendPropertyChanged("ProxyPass");
					this.OnProxyPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLines", DbType="Int")]
		public System.Nullable<int> TotalLines
		{
			get
			{
				return this._TotalLines;
			}
			set
			{
				if ((this._TotalLines != value))
				{
					this.OnTotalLinesChanging(value);
					this.SendPropertyChanging();
					this._TotalLines = value;
					this.SendPropertyChanged("TotalLines");
					this.OnTotalLinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAudio", DbType="Bit")]
		public System.Nullable<bool> UseAudio
		{
			get
			{
				return this._UseAudio;
			}
			set
			{
				if ((this._UseAudio != value))
				{
					this.OnUseAudioChanging(value);
					this.SendPropertyChanging();
					this._UseAudio = value;
					this.SendPropertyChanged("UseAudio");
					this.OnUseAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAudioFileName", DbType="VarChar(500)")]
		public string DefaultAudioFileName
		{
			get
			{
				return this._DefaultAudioFileName;
			}
			set
			{
				if ((this._DefaultAudioFileName != value))
				{
					this.OnDefaultAudioFileNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultAudioFileName = value;
					this.SendPropertyChanged("DefaultAudioFileName");
					this.OnDefaultAudioFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAudioFile", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DefaultAudioFile
		{
			get
			{
				return this._DefaultAudioFile;
			}
			set
			{
				if ((this._DefaultAudioFile != value))
				{
					this.OnDefaultAudioFileChanging(value);
					this.SendPropertyChanging();
					this._DefaultAudioFile = value;
					this.SendPropertyChanged("DefaultAudioFile");
					this.OnDefaultAudioFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaybackDevice", DbType="NVarChar(MAX)")]
		public string PlaybackDevice
		{
			get
			{
				return this._PlaybackDevice;
			}
			set
			{
				if ((this._PlaybackDevice != value))
				{
					this.OnPlaybackDeviceChanging(value);
					this.SendPropertyChanging();
					this._PlaybackDevice = value;
					this.SendPropertyChanged("PlaybackDevice");
					this.OnPlaybackDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkInterface", DbType="NVarChar(MAX)")]
		public string NetworkInterface
		{
			get
			{
				return this._NetworkInterface;
			}
			set
			{
				if ((this._NetworkInterface != value))
				{
					this.OnNetworkInterfaceChanging(value);
					this.SendPropertyChanging();
					this._NetworkInterface = value;
					this.SendPropertyChanged("NetworkInterface");
					this.OnNetworkInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codecs", DbType="VarChar(500)")]
		public string Codecs
		{
			get
			{
				return this._Codecs;
			}
			set
			{
				if ((this._Codecs != value))
				{
					this.OnCodecsChanging(value);
					this.SendPropertyChanging();
					this._Codecs = value;
					this.SendPropertyChanged("Codecs");
					this.OnCodecsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChangedCallerId", DbType="Bit")]
		public System.Nullable<bool> IsChangedCallerId
		{
			get
			{
				return this._IsChangedCallerId;
			}
			set
			{
				if ((this._IsChangedCallerId != value))
				{
					this.OnIsChangedCallerIdChanging(value);
					this.SendPropertyChanging();
					this._IsChangedCallerId = value;
					this.SendPropertyChanged("IsChangedCallerId");
					this.OnIsChangedCallerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_Schedule", Storage="_Schedules", ThisKey="Id", OtherKey="SipAccountId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SipAccount_GeneratedCall", Storage="_GeneratedCalls", ThisKey="Id", OtherKey="SipAccountId")]
		public EntitySet<GeneratedCall> GeneratedCalls
		{
			get
			{
				return this._GeneratedCalls;
			}
			set
			{
				this._GeneratedCalls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = null;
		}
		
		private void attach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = this;
		}
		
		private void detach_GeneratedCalls(GeneratedCall entity)
		{
			this.SendPropertyChanging();
			entity.SipAccount = null;
		}
	}
	
	public partial class GetDataResult
	{
		
		private int _Id;
		
		private System.Nullable<int> _OperatorId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TestCli;
		
		private string _ReceivedCli;
		
		private string _ErrorMessage;
		
		private System.Nullable<int> _Status;
		
		private string _MSISDN;
		
		private System.Nullable<System.DateTime> _AndroidDate;
		
		private string _RequestId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndCall;
		
		private string _ResponseCode;
		
		private string _Name;
		
		private string _Country;
		
		private string _mcc;
		
		private string _mnc;
		
		public GetDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="Int")]
		public System.Nullable<int> OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this._OperatorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCli", DbType="VarChar(50)")]
		public string TestCli
		{
			get
			{
				return this._TestCli;
			}
			set
			{
				if ((this._TestCli != value))
				{
					this._TestCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedCli", DbType="VarChar(50)")]
		public string ReceivedCli
		{
			get
			{
				return this._ReceivedCli;
			}
			set
			{
				if ((this._ReceivedCli != value))
				{
					this._ReceivedCli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(500)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSISDN", DbType="NVarChar(200)")]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if ((this._MSISDN != value))
				{
					this._MSISDN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndroidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AndroidDate
		{
			get
			{
				return this._AndroidDate;
			}
			set
			{
				if ((this._AndroidDate != value))
				{
					this._AndroidDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="NVarChar(50)")]
		public string RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this._RequestId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCall", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndCall
		{
			get
			{
				return this._EndCall;
			}
			set
			{
				if ((this._EndCall != value))
				{
					this._EndCall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this._ResponseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcc", DbType="VarChar(10)")]
		public string mcc
		{
			get
			{
				return this._mcc;
			}
			set
			{
				if ((this._mcc != value))
				{
					this._mcc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mnc", DbType="VarChar(10)")]
		public string mnc
		{
			get
			{
				return this._mnc;
			}
			set
			{
				if ((this._mnc != value))
				{
					this._mnc = value;
				}
			}
		}
	}
	
	public partial class GetChartTotalsResult
	{
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TotalCalls;
		
		public GetChartTotalsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCalls", DbType="Int")]
		public System.Nullable<int> TotalCalls
		{
			get
			{
				return this._TotalCalls;
			}
			set
			{
				if ((this._TotalCalls != value))
				{
					this._TotalCalls = value;
				}
			}
		}
	}
	
	public partial class GetActionLogsResult
	{
		
		private int _Id;
		
		private System.Nullable<int> _ActionType;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private string _ObjectType;
		
		private System.Nullable<int> _ObjectId;
		
		private string _IPAddress;
		
		private System.Nullable<int> _UserId;
		
		private string _Name;
		
		public GetActionLogsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="Int")]
		public System.Nullable<int> ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this._ActionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this._LogDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(255)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this._ObjectType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int")]
		public System.Nullable<int> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this._ObjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
